[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "11072@LAPTOP-LKSM26S6",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\projects\\team3\\core\\build\\classes\\test;C:\\projects\\team3\\core\\build\\resources\\test;C:\\projects\\team3\\core\\build\\classes\\main;C:\\projects\\team3\\core\\build\\resources\\main;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\projects\\team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\projects\\team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\ext;C:\\WINDOWS\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_65\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Ruby22-x64\\bin;C:\\Imagick;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\xampp\\php;C:\\ProgramData\\ComposerSetup\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\OpenVPN\\bin;C:\\Program Files\\nodejs\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\cURL\\bin;C:\\Program Files\\gradle\\2.13\\bin;C:\\Program Files\\CMake\\bin;C:\\Program Files\\flex_bison;C:\\Program Files\\doxygen\\bin;C:\\SonarQube\\SonarQubeScanner\\bin;C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python35-32\\Scripts\\;C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python35-32\\;C:\\Users\\domin\\AppData\\Roaming\\npm;C:\\Users\\domin\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_65-b17",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_65",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.65-b01",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\projects\\team3\\core\\build\\testrun\\test\\J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "11072@LAPTOP-LKSM26S6",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\projects\\team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160915_123537_461.events @C:\\projects\\team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160915_123537_461.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "9CF13790D965C5A7",
   "tests.task": ":core:test",
   "user.country": "AT",
   "user.dir": "C:\\projects\\team3\\core\\build\\testrun\\test\\J2",
   "user.home": "C:\\Users\\domin",
   "user.language": "de",
   "user.name": "domin",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935739023
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1473935745384,
  "executionTime": 1371
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1473935746755,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1473935746774,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1473935746779,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
  "startTimestamp": 1473935739023,
  "executionTime": 7827
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935746980
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1473935747050,
  "executionTime": 8519
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1473935755569,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
  "startTimestamp": 1473935746980,
  "executionTime": 8620
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "displayName": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935755638
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
  "startTimestamp": 1473935755669,
  "executionTime": 395
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
  "startTimestamp": 1473935755638,
  "executionTime": 428
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    },
    {
     "id": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935756126
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1473935756153,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1473935756195,
  "executionTime": 1103
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
  "startTimestamp": 1473935756126,
  "executionTime": 1178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935757894
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:35:59,279][INFO ][org.elasticsearch.cluster.service] new_master {node}{hAT-7f5YRDCXGf_A3LfVaA}{local}{local[1]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1473935770813,
  "executionTime": 300
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1473935771113,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1473935771344,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
  "startTimestamp": 1473935757894,
  "executionTime": 13472
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyLike",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMoreLikeThisBuilder",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnsupportedFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935771603
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:11,805][INFO ][org.elasticsearch.cluster.service] new_master {node}{r2Aa8D4jT6KR3R6O66GDgQ}{local}{local[2]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:11,842][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:11,843][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:14,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:14,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:14,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:15,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:15,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:15,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:15,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:15,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:15,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [OLKCi] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935771681,
  "executionTime": 4669
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935776350,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935776434,
  "executionTime": 1036
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:17,482][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935777470,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935777487,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935777499,
  "executionTime": 618
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778119,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778134,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778144,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778164,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778176,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778194,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778198,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778203,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1473935778209,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
  "startTimestamp": 1473935771603,
  "executionTime": 6628
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "displayName": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "children": [
    {
     "id": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935778347
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1473935778372,
  "executionTime": 1082
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1473935779454,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
  "startTimestamp": 1473935778347,
  "executionTime": 1113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "children": [
    {
     "id": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "displayName": "testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "methodName": "testSettingsUpdate",
     "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935779508
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:19,576][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:19,805][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [790.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:19,805][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:19,812][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:19,816][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:19,816][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:37,157][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:37,158][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:37,258][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:37,289][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Fvug2K-ETmmquQHli3JsSA}{AZup3OC7Sx--xatNKBZSqQ}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:37,371][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:38,058][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:38,716][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,135][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,389][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [3212110681725804ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,391][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [3212110681725804ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,409][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3212110681725804ms] to [3098456424966230ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,411][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3212110681725804ms] to [3098456424966230ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,429][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3098456424966230ms] to [3153286002365005ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,432][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3098456424966230ms] to [3153286002365005ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,454][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3153286002365005ms] to [3287931207605627ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,460][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3153286002365005ms] to [3287931207605627ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3287931207605627ms] to [4098481558886422ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,487][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3287931207605627ms] to [4098481558886422ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,505][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4098481558886422ms] to [2489618954050149ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,508][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4098481558886422ms] to [2489618954050149ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,542][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2489618954050149ms] to [1347010338952739ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2489618954050149ms] to [1347010338952739ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,584][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1347010338952739ms] to [2249611865140063ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,586][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1347010338952739ms] to [2249611865140063ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,630][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2249611865140063ms] to [2190763744921928ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,633][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2249611865140063ms] to [2190763744921928ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,650][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2190763744921928ms] to [54288390884231ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,651][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2190763744921928ms] to [54288390884231ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,673][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [54288390884231ms] to [1137649774057750ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,675][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [54288390884231ms] to [1137649774057750ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,691][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1137649774057750ms] to [518859859597233ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,692][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1137649774057750ms] to [518859859597233ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,707][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [518859859597233ms] to [1658898401304412ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,708][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [518859859597233ms] to [1658898401304412ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,726][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1658898401304412ms] to [1677816847436683ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,728][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1658898401304412ms] to [1677816847436683ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,758][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1677816847436683ms] to [4332284377965552ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,764][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1677816847436683ms] to [4332284377965552ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,784][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4332284377965552ms] to [2948071215836417ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,786][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4332284377965552ms] to [2948071215836417ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,812][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2948071215836417ms] to [3202301338636463ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,814][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2948071215836417ms] to [3202301338636463ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,852][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3202301338636463ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,854][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3202301338636463ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,878][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,898][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,900][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,913][INFO ][org.elasticsearch.index.engine] [node_s_0] [foo][0] [InternalEngineSettingsTests#testSettingsUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
  "startTimestamp": 1473935779544,
  "executionTime": 22439
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,984][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,987][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:41,988][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:06:42,031][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
  "startTimestamp": 1473935779508,
  "executionTime": 22546
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "children": [
    {
     "id": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    },
    {
     "id": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testBasicTaskCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935802226
 }
]

[
 "TEST_STARTED",
 "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,364][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8gEkVEVuRUO6plFu78Yn-A}{local}{local[3]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,371][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,379][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{e3zndSgjQGyk7IKWelL-Og}{local}{local[4]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,381][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,420][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ph0KcQm7R0-2Q5OYbIFajA}{local}{local[5]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,422][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,449][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{umCJBFqTRzO5GRhrkGpENA}{local}{local[6]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,451][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,470][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ePYJ4kxSR1u7cWMVmcSNQQ}{local}{local[7]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,472][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,509][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{QHSZC337TSS8U-OVKiMrTQ}{local}{local[8]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,511][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,585][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}, previous {node}{8gEkVEVuRUO6plFu78Yn-A}{local}{local[3]}}, removed {{node}{8gEkVEVuRUO6plFu78Yn-A}{local}{local[3]},}, added {{node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]},{node2}{xFEGRvodQPu_23ATFKzHUA}{local}{local[4]},{node5}{U3Gw_WIOT22JVU5zkvyLMg}{local}{local[7]},{node3}{yd1u77nSQ92kUTB80z7tJw}{local}{local[5]},{node4}{ivbsg3rpRcuQlADJKd1s-A}{local}{local[6]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,586][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}, previous {node}{e3zndSgjQGyk7IKWelL-Og}{local}{local[4]}}, removed {{node}{e3zndSgjQGyk7IKWelL-Og}{local}{local[4]},}, added {{node2}{xFEGRvodQPu_23ATFKzHUA}{local}{local[4]},{node5}{U3Gw_WIOT22JVU5zkvyLMg}{local}{local[7]},{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},{node3}{yd1u77nSQ92kUTB80z7tJw}{local}{local[5]},{node4}{ivbsg3rpRcuQlADJKd1s-A}{local}{local[6]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,587][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}, previous {node}{ph0KcQm7R0-2Q5OYbIFajA}{local}{local[5]}}, removed {{node}{ph0KcQm7R0-2Q5OYbIFajA}{local}{local[5]},}, added {{node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]},{node5}{U3Gw_WIOT22JVU5zkvyLMg}{local}{local[7]},{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},{node3}{yd1u77nSQ92kUTB80z7tJw}{local}{local[5]},{node4}{ivbsg3rpRcuQlADJKd1s-A}{local}{local[6]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,588][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}, previous {node}{umCJBFqTRzO5GRhrkGpENA}{local}{local[6]}}, removed {{node}{umCJBFqTRzO5GRhrkGpENA}{local}{local[6]},}, added {{node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]},{node2}{xFEGRvodQPu_23ATFKzHUA}{local}{local[4]},{node5}{U3Gw_WIOT22JVU5zkvyLMg}{local}{local[7]},{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},{node4}{ivbsg3rpRcuQlADJKd1s-A}{local}{local[6]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,589][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}, previous {node}{ePYJ4kxSR1u7cWMVmcSNQQ}{local}{local[7]}}, removed {{node}{ePYJ4kxSR1u7cWMVmcSNQQ}{local}{local[7]},}, added {{node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]},{node2}{xFEGRvodQPu_23ATFKzHUA}{local}{local[4]},{node5}{U3Gw_WIOT22JVU5zkvyLMg}{local}{local[7]},{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},{node3}{yd1u77nSQ92kUTB80z7tJw}{local}{local[5]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,591][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}, previous {node}{QHSZC337TSS8U-OVKiMrTQ}{local}{local[8]}}, removed {{node}{QHSZC337TSS8U-OVKiMrTQ}{local}{local[8]},}, added {{node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]},{node2}{xFEGRvodQPu_23ATFKzHUA}{local}{local[4]},{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},{node3}{yd1u77nSQ92kUTB80z7tJw}{local}{local[5]},{node4}{ivbsg3rpRcuQlADJKd1s-A}{local}{local[6]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,648][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,735][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,736][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node2] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,737][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node3] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,738][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node4] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,739][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node5] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:42,798][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,057][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,338][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]}, previous {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}}, removed {{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,340][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]}, previous {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}}, removed {{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,352][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]}, previous {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}}, removed {{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]}, previous {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}}, removed {{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{94hMYymoTfun22CkaVsPHA}{local}{local[3]}, previous {node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]}}, removed {{node0}{K7PYa4RnQeCbSLW_QbhP_Q}{local}{local[2]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,354][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] --> Simulate issuing cancel request on the node that is about to leave the cluster%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,360][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] --> Done simulating issuing cancel request on the node that is about to leave the cluster%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,360][ERROR][org.elasticsearch.action.admin.cluster.node.tasks] !!!!%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1473935802335,
  "executionTime": 1037
 }
]

[
 "TEST_STARTED",
 "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,505][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{R7_7HUoET7Cy_4AVrU4_jQ}{local}{local[9]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,509][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,545][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lvX90cl1Sniec2P6uYSh5Q}{local}{local[10]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,548][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,569][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{oRFFASeQSpOQQfBt6MsKkA}{local}{local[11]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,571][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,578][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Bh34WHmMQAiZj5qS-FSF6w}{local}{local[12]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,582][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,605][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5HVGgJDeS5azWdOO0wqxWg}{local}{local[13]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,607][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,670][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4j2XRgESTx-7ogmR4BquFw}{local}{local[14]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,672][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,695][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{O-J-GgNwRB6zv3_wLnSN5g}{local}{local[15]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,697][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,712][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fDsyy1KpQ1aGxKl7Bjn87g}{local}{local[16]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,714][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,717][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{R7_7HUoET7Cy_4AVrU4_jQ}{local}{local[9]}}, removed {{node}{R7_7HUoET7Cy_4AVrU4_jQ}{local}{local[9]},}, added {{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,719][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{lvX90cl1Sniec2P6uYSh5Q}{local}{local[10]}}, removed {{node}{lvX90cl1Sniec2P6uYSh5Q}{local}{local[10]},}, added {{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,720][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{oRFFASeQSpOQQfBt6MsKkA}{local}{local[11]}}, removed {{node}{oRFFASeQSpOQQfBt6MsKkA}{local}{local[11]},}, added {{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,721][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{Bh34WHmMQAiZj5qS-FSF6w}{local}{local[12]}}, removed {{node}{Bh34WHmMQAiZj5qS-FSF6w}{local}{local[12]},}, added {{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,722][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{5HVGgJDeS5azWdOO0wqxWg}{local}{local[13]}}, removed {{node}{5HVGgJDeS5azWdOO0wqxWg}{local}{local[13]},}, added {{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,723][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{4j2XRgESTx-7ogmR4BquFw}{local}{local[14]}}, removed {{node}{4j2XRgESTx-7ogmR4BquFw}{local}{local[14]},}, added {{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,724][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{O-J-GgNwRB6zv3_wLnSN5g}{local}{local[15]}}, removed {{node}{O-J-GgNwRB6zv3_wLnSN5g}{local}{local[15]},}, added {{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node7}{anV72_isQHOOSYfunM4RrA}{local}{local[15]},{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,726][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]}, previous {node}{fDsyy1KpQ1aGxKl7Bjn87g}{local}{local[16]}}, removed {{node}{fDsyy1KpQ1aGxKl7Bjn87g}{local}{local[16]},}, added {{node3}{GKPCFYr2RBupjoPm7GrBCw}{local}{local[11]},{node0}{jvz9K2WXQsCG2ZzuT-_flg}{local}{local[8]},{node6}{hEYLVsSPQvaLDvNFj9QYPA}{local}{local[14]},{node5}{vI8D7OY6R5Gyrs-0AcP4_g}{local}{local[13]},{node1}{oW2tCn-rQOyK9QCA3Yyc1Q}{local}{local[9]},{node4}{neNETGb6TVmgv5w38USQkg}{local}{local[12]},{node2}{nu0Q1n-ZTcmcM9WsDccAQQ}{local}{local[10]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] waitForActionToStart is set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,793][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,794][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,795][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node2] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,796][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node3] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,796][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node4] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,797][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node5] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,798][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node6] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,799][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node7] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,802][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:36:43,897][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1473935803373,
  "executionTime": 996
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
  "startTimestamp": 1473935802226,
  "executionTime": 2156
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
   "displayName": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "children": [
    {
     "id": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "displayName": "testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "methodName": "testSetsParentId",
     "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935804453
 }
]

[
 "TEST_STARTED",
 "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
  "startTimestamp": 1473935804496,
  "executionTime": 66
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
  "startTimestamp": 1473935804453,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "children": [
    {
     "id": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testTwoShards",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testStatsOnEviction",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935804673
 }
]

[
 "TEST_STARTED",
 "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1473935804722,
  "executionTime": 556
 }
]

[
 "TEST_STARTED",
 "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1473935805279,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1473935805451,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
  "startTimestamp": 1473935804673,
  "executionTime": 808
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "displayName": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "methodName": null,
   "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "children": [
    {
     "id": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceSecretPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testDefaultClusterName",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplacePromptPlaceholders",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceTextPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testMultipleSettingsFileNotAllowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testEmptySettings",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testGarbageIsNotSwallowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935805558
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805572,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805578,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805581,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805651,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805662,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805697,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1473935805711,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
  "startTimestamp": 1473935805558,
  "executionTime": 199
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "children": [
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935806017
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,051][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,072][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [790.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,073][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,076][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,078][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,078][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,423][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,423][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,424][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,465][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{5R84xFbyQ7Oo4CRCzQPWJA}{lahpq1UjRf-PbKQeXYFRMw}{local}{local[16]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,467][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,547][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,610][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:46,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:49,786][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935806039,
  "executionTime": 4055
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:50,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:50,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:50,294][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935810094,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:50,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:50,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:51,807][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935810345,
  "executionTime": 1529
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:51,884][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:51,970][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,364][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935811874,
  "executionTime": 551
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,435][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,613][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,689][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935812426,
  "executionTime": 331
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,892][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:52,971][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935812757,
  "executionTime": 297
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,176][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935813054,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,231][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,341][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935813213,
  "executionTime": 299
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,524][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,616][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,681][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935813512,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:53,738][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,025][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,130][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935813725,
  "executionTime": 445
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,179][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,430][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,452][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935814170,
  "executionTime": 334
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,515][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:54,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:55,085][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935814505,
  "executionTime": 622
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:55,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:55,278][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:55,312][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935815128,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:55,374][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:55,475][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:56,125][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935815358,
  "executionTime": 1023
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:56,392][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:56,561][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:57,672][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935816381,
  "executionTime": 1707
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:58,112][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:58,210][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:59,040][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935818089,
  "executionTime": 1041
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:59,143][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:59,276][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:59,358][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935819131,
  "executionTime": 284
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:59,426][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:59,612][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:00,090][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935819416,
  "executionTime": 828
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:00,254][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:00,383][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:00,403][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1473935820244,
  "executionTime": 3345
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:03,589][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:03,590][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:03,591][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:03,593][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
  "startTimestamp": 1473935806017,
  "executionTime": 17590
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.FuzzinessTests",
   "displayName": "org.elasticsearch.common.unit.FuzzinessTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.FuzzinessTests",
   "children": [
    {
     "id": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAsDistance",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerializationAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testNumerics",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testParseFromXContent",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935823658
 }
]

[
 "TEST_STARTED",
 "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1473935823715,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1473935823720,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1473935823723,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1473935823726,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1473935823728,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1473935823733,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.FuzzinessTests",
  "startTimestamp": 1473935823658,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
   "displayName": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "children": [
    {
     "id": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testStatsDirWrapper",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    },
    {
     "id": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testAddIndices",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935823790
 }
]

[
 "TEST_STARTED",
 "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1473935823823,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1473935823989,
  "executionTime": 6727
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
  "startTimestamp": 1473935823790,
  "executionTime": 7177
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "children": [
    {
     "id": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParserExceptions",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParseDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testPrePost",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935831040
 }
]

[
 "TEST_STARTED",
 "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,120][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SuSaXYtMSbWa6GQ4dPchoQ}{local}{local[17]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,150][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,151][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,282][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,282][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,282][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,287][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,287][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:11,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [hLFdU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831100,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831301,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831346,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831366,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831387,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831445,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831457,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831464,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831469,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831473,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831477,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831482,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831496,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1473935831504,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
  "startTimestamp": 1473935831040,
  "executionTime": 524
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NullValueTests",
   "displayName": "org.elasticsearch.index.mapper.NullValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NullValueTests",
   "children": [
    {
     "id": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "displayName": "testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "methodName": "testNullNullValue",
     "className": "org.elasticsearch.index.mapper.NullValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935831590
 }
]

[
 "TEST_STARTED",
 "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:11,874][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:11,926][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:11,927][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:11,931][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:11,934][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:11,934][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,211][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,212][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,212][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,219][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HU7i32rjQTqyTZtTOQLtUQ}{VKXxphSkQd2fZqzt6mLImw}{local}{local[17]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,220][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,256][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,288][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,381][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,666][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NullValueTests#testNullNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
  "startTimestamp": 1473935831858,
  "executionTime": 908
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,766][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,768][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,769][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:12,775][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NullValueTests",
  "startTimestamp": 1473935831590,
  "executionTime": 1196
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.FileScriptTests",
   "displayName": "org.elasticsearch.script.FileScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.FileScriptTests",
   "children": [
    {
     "id": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testFileScriptFound",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    },
    {
     "id": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testAllOpsDisabled",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935832844
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:12,948][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_9CF13790D965C5A7-001\\tempDir-001\\config\\scripts\\script1.mockscript]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1473935832897,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:12,997][WARN ][org.elasticsearch.script ] [node_s_0] skipping compile of script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_9CF13790D965C5A7-001\\tempDir-002\\config\\scripts\\script1.mockscript] as all scripted operations are disabled for file scripts%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1473935832972,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.FileScriptTests",
  "startTimestamp": 1473935832844,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptTests",
   "displayName": "org.elasticsearch.script.ScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptTests",
   "children": [
    {
     "id": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptSerialization",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    },
    {
     "id": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptParsing",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935833055
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1473935833175,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1473935833178,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptTests",
  "startTimestamp": 1473935833055,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "displayName": "testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935833247
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,407][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
  "startTimestamp": 1473935833392,
  "executionTime": 73
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
  "startTimestamp": 1473935833247,
  "executionTime": 221
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935833667
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935833700,
  "executionTime": 656
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834356,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834363,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834385,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834421,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834443,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834447,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834450,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1473935834453,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
  "startTimestamp": 1473935833667,
  "executionTime": 794
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
   "displayName": "org.elasticsearch.common.util.CollectionUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CollectionUtilsTests",
   "children": [
    {
     "id": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testEmptyPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testPerfectPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSingletonPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSimplePartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotateEmpty",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testOversizedPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortAndDedupByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotate",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935834504
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834525,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834528,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834592,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834594,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834597,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834599,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834606,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834609,
  "executionTime": 266
 }
]

[
 "TEST_STARTED",
 "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1473935834875,
  "executionTime": 37
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
  "startTimestamp": 1473935834504,
  "executionTime": 411
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "children": []
  },
  "startTimestamp": 1473935834969
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
  "startTimestamp": 1473935834969,
  "executionTime": 5
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.EnvironmentTests",
   "displayName": "org.elasticsearch.env.EnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.EnvironmentTests",
   "children": [
    {
     "id": "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
     "displayName": "testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
     "methodName": "testRepositoryResolution",
     "className": "org.elasticsearch.env.EnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935835004
 }
]

[
 "TEST_STARTED",
 "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
  "startTimestamp": 1473935835034,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.EnvironmentTests",
  "startTimestamp": 1473935835004,
  "executionTime": 59
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
   "displayName": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "children": [
    {
     "id": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "displayName": "testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "methodName": "testFailureToString",
     "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935835092
 }
]

[
 "TEST_STARTED",
 "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
  "startTimestamp": 1473935835134,
  "executionTime": 216
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
  "startTimestamp": 1473935835092,
  "executionTime": 260
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935835542
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835561,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835564,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835567,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835672,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835675,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835678,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835681,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835747,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835753,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835773,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1473935835776,
  "executionTime": 204
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
  "startTimestamp": 1473935835542,
  "executionTime": 442
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935836019
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1473935836040,
  "executionTime": 61
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1473935836019,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testInvalidRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoFieldName",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testThatXContentSerializationInsideOfArrayWorks",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShapeType",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935836172
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,214][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fKk-QC2dSdCBkflFrv5kmg}{local}{local[20]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,223][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,224][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,248][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,249][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,249][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,260][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,260][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:37:16,261][WARN ][org.elasticsearch.deprecation.index.mapper]  [PDiBnJcW] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935836205,
  "executionTime": 297
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935836503,
  "executionTime": 806
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837309,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837315,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837318,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837322,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837325,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837330,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837333,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837342,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837358,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837369,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837376,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837380,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837390,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837393,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1473935837469,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
  "startTimestamp": 1473935836172,
  "executionTime": 1309
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "displayName": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "children": [
    {
     "id": "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "displayName": "testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "methodName": "testRandomClusterStateUpdates",
     "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
     "children": []
    },
    {
     "id": "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "displayName": "testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "methodName": "testJoiningNewClusterOnlyRemovesInMemoryIndexStructures",
     "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935837589
 }
]

[
 "TEST_STARTED",
 "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:18,963][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:18,993][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:18,993][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,173][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gceufkpkixigqlg] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,177][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vduscsngwmwuata] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,184][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gvobfdcitbujpvz] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,190][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vldalkwoxjejedq] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,210][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_vduscsngwmwuata/KCXIEKk5TfSu9YjWOTSldg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,264][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_vldalkwoxjejedq]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,271][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vupfgwctymemica] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,276][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_aeqqxnvgimidyjw] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,280][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_gvobfdcitbujpvz/Znef5w2wSDiN953WK6lsnQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,346][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,349][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qywpvlspwiiyxxy] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,355][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ahyvlyhwvmzdpip] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,367][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zptfksermhffhxj] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ahwzaixrdibvkxj] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,374][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ahyvlyhwvmzdpip/sV9FulQhT9-z9rUvdlVVMA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,392][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_vldalkwoxjejedq]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,401][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_giykcuvafckbhzx] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,406][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_cjbauhgrkqtqdux] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,413][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ahwzaixrdibvkxj/lbabsMFiRMSJD1LSNMIPvA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,414][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_ahwzaixrdibvkxj/lbabsMFiRMSJD1LSNMIPvA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,430][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_dshnqfzpyusipov] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,439][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_giykcuvafckbhzx/qGTJM17XRrKiPjK4sM1_JA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,444][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [5s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,448][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [5s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,450][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,452][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,454][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_yzajvmicaiulcbs] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,458][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jlnoncanxhetuac] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,465][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ahwzaixrdibvkxj/lbabsMFiRMSJD1LSNMIPvA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,467][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_aeqqxnvgimidyjw, index_dshnqfzpyusipov]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,482][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,484][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,485][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,487][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_tcxpuywqglzaupy] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,492][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_dshnqfzpyusipov, index_cjbauhgrkqtqdux]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,506][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [2s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,512][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,521][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_aeqqxnvgimidyjw/1LrWIRgySeSbrKb2iNbusw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,542][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,544][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_dylyrdxiuwzhygw] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,550][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zdsdhqluogguqre] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,558][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jkzyvmaojboecue] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,570][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_blggaeglsfkrvxc] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_blggaeglsfkrvxc] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,580][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_jkzyvmaojboecue/H6rRQRLCRUqs9C48Gvc_rA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,592][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [indices closed [[[index_jkzyvmaojboecue/H6rRQRLCRUqs9C48Gvc_rA]]]]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,593][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_jkzyvmaojboecue/H6rRQRLCRUqs9C48Gvc_rA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,595][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [indices opened [[[index_jkzyvmaojboecue/H6rRQRLCRUqs9C48Gvc_rA]]]]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,605][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_zdsdhqluogguqre/wDaALxjqQqGZtf7zsbO31w]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,607][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_yzajvmicaiulcbs, index_tcxpuywqglzaupy]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,616][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,657][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,659][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,660][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,679][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 10%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,683][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_sgwhywydfslenac] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,696][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_flquykygjdbnifb] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,704][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_yzajvmicaiulcbs/2iVBPW1BQNCI7vTs1xRcHw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,722][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_jkzyvmaojboecue]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,741][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_dylyrdxiuwzhygw][2], [index_jkzyvmaojboecue][0], [index_blggaeglsfkrvxc][1], [index_tcxpuywqglzaupy][1], [index_dylyrdxiuwzhygw][0], [index_blggaeglsfkrvxc][2], [index_blggaeglsfkrvxc][0], [index_tcxpuywqglzaupy][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,746][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vnnzvrivikxucyr] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,766][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_elhetuwvzbxyfii] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_vnnzvrivikxucyr]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,784][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,876][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,937][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:19,942][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vwuuihgsuqdkbju] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,011][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,013][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,017][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,019][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,139][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 12%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,141][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_nbovwpbipvcclnj] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,169][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 13%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,178][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 14%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qocbarqrdiyxbwl] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,187][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_vnnzvrivikxucyr]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_yzajvmicaiulcbs/2iVBPW1BQNCI7vTs1xRcHw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,357][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_slzjrqrczelqxak] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_sgwhywydfslenac]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,373][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,373][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,390][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,391][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,407][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,418][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,418][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,439][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 15%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,449][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_bdxqskevpyjswip] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,453][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qwqovivipdnlamr] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,513][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qphohsvaexfvwnf] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,517][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vkkrmfxvcygnaiy] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,522][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_bdxqskevpyjswip/nzCqMr2aRgKd3x9cH54nCQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,537][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 16%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,539][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fejsksbytxephzd] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,624][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_vkkrmfxvcygnaiy/hJufL-sWSlmPsGKUdH_QsA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,627][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_fejsksbytxephzd]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,653][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 17%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,657][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 18%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,659][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_nmwolxitfhuokni] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,671][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_qwqovivipdnlamr]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,715][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ewiviwcffsvzgdc] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ckikwuboegbvcrj] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,893][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:20,990][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,001][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,004][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 19%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fcgxufctueovbsn] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,110][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 20%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,117][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_cufszxslaoidtxe] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_cufszxslaoidtxe] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,122][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_dioxvjszjiertvz] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,169][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_fejsksbytxephzd/D7VBW9keQ3K7SPQGOf2TOw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_geejzbfeebedjnx] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,245][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_geejzbfeebedjnx] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,249][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_yohvehnctodmgst] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ukpagpiqkuqofnz] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,642][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,655][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,662][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [4s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,673][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 21%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,682][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 22%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,779][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 23%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,782][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_geejzbfeebedjnx/fDla0aeVRfaFgPCzJvejpg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,784][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_vkkrmfxvcygnaiy/hJufL-sWSlmPsGKUdH_QsA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,804][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_iggoxzaslqmtkvp] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,808][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ehhnxkhrbuxbfez] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:21,998][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 24%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,000][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 25%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,002][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_lldeouktwyjrteu] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,007][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fvmfgcextnrdumg] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,111][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_osndjqtyaglnllb] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,115][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_oavxsfftcghtybv] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,120][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_pkdeyczpnmkicwn] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,124][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_tuljnpgkssbgcrh] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,129][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_okttikfpeebioag] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,140][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_dioxvjszjiertvz][0], [index_jkzyvmaojboecue][0], [index_jkzyvmaojboecue][1], [index_vnnzvrivikxucyr][1], [index_vkkrmfxvcygnaiy][0], [index_nmwolxitfhuokni][0], [index_nmwolxitfhuokni][2], [index_vkkrmfxvcygnaiy][1], [index_ukpagpiqkuqofnz][1], [index_ckikwuboegbvcrj][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,268][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 26%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,489][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 27%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,490][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_cbjgtzxqqhyclem] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,519][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_fejsksbytxephzd/D7VBW9keQ3K7SPQGOf2TOw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,553][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 28%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,598][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 29%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:22,608][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Final cluster state: cluster uuid: pVSBEMkoRzu6tr9wfcLq7A%0Aversion: 0%0Astate uuid: NfdUUo-gTuKDUm8N4M0ZCg%0Afrom_diff: false%0Ameta data version: 0%0A   [index_ewiviwcffsvzgdc/ltYnAaveRwGNZf_d09kdbQ]: v[6]%0A      0: p_term [1], a_ids [gZVrm-09SfiltAQ-h7wEZQ]%0A   [index_pkdeyczpnmkicwn/MPuJRxfZSjqOYcerbYPBrw]: v[4]%0A      0: p_term [1], a_ids [VjVbiG6WTLOarqqYE3o4eQ]%0A      1: p_term [1], a_ids [NizXAp_hRM-DcSo6jonHng, K99qohXfSeuDP4EHBxxCng]%0A   [index_ukpagpiqkuqofnz/G3gorFfjTRqCX_CqFVkdTQ]: v[7]%0A      0: p_term [1], a_ids [K2g0NBcaT6y4omlzahOrIg, ao6YbYrTS1yzbZTXEZm_ew]%0A      1: p_term [1], a_ids [hhn1yd9vTnyPbwfmj0Mr2A, WDP2qBn5SViY-48Y7IDeSg]%0A   [index_lldeouktwyjrteu/uYzsT894QtqKQyuf1uvOFw]: v[4]%0A      0: p_term [1], a_ids [H_z0eu6PRHWseyF9bC2eeQ]%0A      1: p_term [1], a_ids []%0A   [index_okttikfpeebioag/XGo9boNZQ4azRSEdtSeRqw]: v[3]%0A      0: p_term [1], a_ids [kfDRndmnR3SzWJwlPx_J7w]%0A      1: p_term [1], a_ids [QjVh_b-xSgm7-YRfH6ZVDA]%0A      2: p_term [1], a_ids [LDfqsj77TcOHd-pDuyk98g]%0A   [index_ckikwuboegbvcrj/fHtnFZ2PTXGsZfrd_JqW-g]: v[12]%0A      0: p_term [1], a_ids [8g6jz_7VT_uupe4H6sqS7A, XAhXUeZvTZSNB_1D716h_Q]%0A      1: p_term [2], a_ids [HX_DfziCQnSlHLhCROUKmg, Ju6JX487TjSLjj_fQjSU-Q, 0rVszwh0TRW5wjdQRzxKIg]%0A   [index_cbjgtzxqqhyclem/aBoghLZQSHi1FpQIZF_mMQ]: v[3]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A      2: p_term [1], a_ids []%0A   [index_iggoxzaslqmtkvp/RQtQrnkQRuW6zldGO_T_9A]: v[3]%0A      0: p_term [1], a_ids [BAuzPTIpS8CBdXbuLPG4HQ]%0A   [index_geejzbfeebedjnx/fDla0aeVRfaFgPCzJvejpg]: v[5]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A      2: p_term [1], a_ids []%0A   [index_jkzyvmaojboecue/H6rRQRLCRUqs9C48Gvc_rA]: v[25]%0A      0: p_term [2], a_ids [qaovY10hQ3e0E37MPbjbQQ, tLZyzglRQDekhPSGdRJVmw]%0A      1: p_term [2], a_ids [GMs5F-HQSySzEEkJvtHtCw, WHkqyghET1ere52dirqq4g]%0A   [index_nmwolxitfhuokni/SFulx4AYTdmVmqFFonr65Q]: v[10]%0A      0: p_term [1], a_ids [NmxnIqVNQ2W2UFomYVen8g, hglabTPeRSqLfwz732lilw, hb4RuxQbT6SZylv3TssKCg]%0A      1: p_term [1], a_ids [tNj1RJauSX6xOoXhcrIdCg, sfEFP7HjStSBwf9RTNUkiA, wLCBEHKSRtebJXSghm3Kfw]%0A      2: p_term [0], a_ids [Q3g6kG7xTsCEs5kEl8xGqg, ebi7VxumSiu21yqeWRHiLQ, 8dquQjI5QAa2uMiOT0vlBQ]%0A   [index_vnnzvrivikxucyr/s5dQD2K1RmqGvsh4jXHEkA]: v[26]%0A      0: p_term [1], a_ids [tcEosQAFQ42IYIogbhNKyA, c5upNC4aQrKDp08t0j6sTg]%0A      1: p_term [1], a_ids [jscGUS9LSRK0WC3iarlTyQ, ZcmLR7ZkREC8j0cpLgzWmQ]%0A      2: p_term [1], a_ids [TL1JkcXbQYi9C44gdhQ-NQ, QiXyxcIVSb-EQ_psopj4kw]%0A   [index_osndjqtyaglnllb/t6nRdeq2S0ytXm8b2SwhpQ]: v[3]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A   [index_dioxvjszjiertvz/VLM653kXQ-iZlz8mUW1nxg]: v[6]%0A      0: p_term [2], a_ids [h-FY0fnhTAaBbezljfK0Gw, walmO02wQLWN_8DJokVytA, FFu2asyARYGmFF-AuDYohA]%0A      1: p_term [1], a_ids [FRgyYFvyRtKKqTm1XDdayg, FoeOOSwuQHKNrnuSXl8H0Q]%0A   [index_ehhnxkhrbuxbfez/wl6njlhTSt6sgE6NGzOvFA]: v[5]%0A      0: p_term [1], a_ids [kc6Gn7QuSoKOWPW_QqIqbw, JYELKBo2Q9izmeGgZX4oRQ, dmgRzZ-DTzayUJ2mRDBR5Q]%0A      1: p_term [1], a_ids [e8CbiuSlSea4Gx2hk9HPqg, sl4VLZpnRomk9rIUj8wiVg]%0A   [index_fejsksbytxephzd/D7VBW9keQ3K7SPQGOf2TOw]: v[12]%0A      0: p_term [2], a_ids [AbP1NS_DQUmaCJVTHQAIeg]%0A   [index_qwqovivipdnlamr/yVaOfLCERcCl2PZLb1yfbg]: v[14]%0A      0: p_term [1], a_ids [ZdeVVmW2TRqVOyLk_sf2zQ]%0A      1: p_term [2], a_ids [aT0h-mRBR-mDKzU5MLlM0Q]%0A   [index_vkkrmfxvcygnaiy/hJufL-sWSlmPsGKUdH_QsA]: v[10]%0A      0: p_term [2], a_ids [fDX45lrATKKv2MzKPsdibA, bdJC1CHeQzKPygxXrarYqQ]%0A      1: p_term [2], a_ids [Cs-vltfpQwGNHJ8EhAmJoQ]%0A   [index_fvmfgcextnrdumg/7j2yilKHS3-DZlPUN-tEQg]: v[4]%0A      0: p_term [1], a_ids [ooZ2hVOfTOa6VyziLbV5Hw, Sowjix0yS2SsauBBpFpu4g]%0A      1: p_term [1], a_ids []%0Ablocks: %0A   index_geejzbfeebedjnx:%0A      4,index closed, blocks READ,WRITE%0Anodes: %0A   {node_bMbGzdoB}{HXIPITUIQd2v5orS5srzRg}{local}{local[25]}%0A   {node_IIBVKexH}{eX0E-jZdQMuDBvDuQZWXgw}{local}{local[21]}, local, master%0A   {node_xDsDZBSP}{VWUz632KQEG1GLzmElrlaQ}{local}{local[23]}%0A   {node_iHZwWXkq}{uaUQXy_OSTyzIrsS9h0lvA}{local}{local[26]}%0A   {node_MWGhmlqk}{ITlCZQF_QLeyyBSYQ84Xew}{local}{local[22]}%0A   {node_AsNFpLkV}{xK7pFEXHQfSpQITJncTs-Q}{local}{local[27]}%0A   {node_DRjMVzkb}{vqKKC2kSSIaYISvlyCZ8KQ}{local}{local[24]}%0Arouting_table (version 0):%0A-- index [[index_dioxvjszjiertvz/VLM653kXQ-iZlz8mUW1nxg]]%0A----shard_id [index_dioxvjszjiertvz][0]%0A--------[index_dioxvjszjiertvz][0], node[node_MWGhmlqk], [R], s[STARTED], a[id=walmO02wQLWN_8DJokVytA]%0A--------[index_dioxvjszjiertvz][0], node[node_AsNFpLkV], [P], s[STARTED], a[id=FFu2asyARYGmFF-AuDYohA]%0A--------[index_dioxvjszjiertvz][0], node[node_iHZwWXkq], [R], s[STARTED], a[id=h-FY0fnhTAaBbezljfK0Gw]%0A----shard_id [index_dioxvjszjiertvz][1]%0A--------[index_dioxvjszjiertvz][1], node[node_MWGhmlqk], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=4HsjwbjdREiDGhOG1Rbbyw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.122Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_dioxvjszjiertvz][1], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [P], s[RELOCATING], a[id=FRgyYFvyRtKKqTm1XDdayg, rId=oIPZuRYyQryAVpO3UHdjgA]%0A--------[index_dioxvjszjiertvz][1], node[node_xDsDZBSP], [R], s[STARTED], a[id=FoeOOSwuQHKNrnuSXl8H0Q]%0A%0A-- index [[index_qwqovivipdnlamr/yVaOfLCERcCl2PZLb1yfbg]]%0A----shard_id [index_qwqovivipdnlamr][0]%0A--------[index_qwqovivipdnlamr][0], node[node_iHZwWXkq], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=ZdeVVmW2TRqVOyLk_sf2zQ, rId=6G91GildREC_PSYnS-IsyQ]%0A----shard_id [index_qwqovivipdnlamr][1]%0A--------[index_qwqovivipdnlamr][1], node[node_iHZwWXkq], [P], s[STARTED], a[id=aT0h-mRBR-mDKzU5MLlM0Q]%0A%0A-- index [[index_ehhnxkhrbuxbfez/wl6njlhTSt6sgE6NGzOvFA]]%0A----shard_id [index_ehhnxkhrbuxbfez][0]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_MWGhmlqk], [R], s[STARTED], a[id=kc6Gn7QuSoKOWPW_QqIqbw]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_AsNFpLkV], [R], s[STARTED], a[id=dmgRzZ-DTzayUJ2mRDBR5Q]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=JYELKBo2Q9izmeGgZX4oRQ, rId=It169HRcR4WFhQvUbZeDVw]%0A----shard_id [index_ehhnxkhrbuxbfez][1]%0A--------[index_ehhnxkhrbuxbfez][1], node[node_MWGhmlqk], [P], s[STARTED], a[id=e8CbiuSlSea4Gx2hk9HPqg]%0A--------[index_ehhnxkhrbuxbfez][1], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=prRth70VTKaIficYdnQcMQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.809Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ehhnxkhrbuxbfez][1], node[node_iHZwWXkq], [R], s[STARTED], a[id=sl4VLZpnRomk9rIUj8wiVg]%0A%0A-- index [[index_vkkrmfxvcygnaiy/hJufL-sWSlmPsGKUdH_QsA]]%0A----shard_id [index_vkkrmfxvcygnaiy][0]%0A--------[index_vkkrmfxvcygnaiy][0], node[node_MWGhmlqk], [P], s[STARTED], a[id=bdJC1CHeQzKPygxXrarYqQ]%0A--------[index_vkkrmfxvcygnaiy][0], node[node_AsNFpLkV], [R], s[STARTED], a[id=fDX45lrATKKv2MzKPsdibA]%0A----shard_id [index_vkkrmfxvcygnaiy][1]%0A--------[index_vkkrmfxvcygnaiy][1], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=CldC-uSaRBidS4-sLsHUMw], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-15T10:37:21.784Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_vkkrmfxvcygnaiy][1], node[node_xDsDZBSP], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=Cs-vltfpQwGNHJ8EhAmJoQ, rId=LRtzPOdjRN6VnIz8kdBBag]%0A%0A-- index [[index_pkdeyczpnmkicwn/MPuJRxfZSjqOYcerbYPBrw]]%0A----shard_id [index_pkdeyczpnmkicwn][0]%0A--------[index_pkdeyczpnmkicwn][0], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=un7kACRESwqDBS9MU8XmoA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.120Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_pkdeyczpnmkicwn][0], node[node_iHZwWXkq], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=VjVbiG6WTLOarqqYE3o4eQ, rId=3mzR9q0zR4qjfxl7PdrR-w]%0A----shard_id [index_pkdeyczpnmkicwn][1]%0A--------[index_pkdeyczpnmkicwn][1], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [R], s[RELOCATING], a[id=NizXAp_hRM-DcSo6jonHng, rId=MFNAjuCWQ3uC_ErVMreSAA]%0A--------[index_pkdeyczpnmkicwn][1], node[node_xDsDZBSP], [P]"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": ", s[STARTED], a[id=K99qohXfSeuDP4EHBxxCng]%0A%0A-- index [[index_ukpagpiqkuqofnz/G3gorFfjTRqCX_CqFVkdTQ]]%0A----shard_id [index_ukpagpiqkuqofnz][0]%0A--------[index_ukpagpiqkuqofnz][0], node[node_AsNFpLkV], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=ao6YbYrTS1yzbZTXEZm_ew, rId=b7ogaL9eSH2ikhxjgo2cWQ]%0A--------[index_ukpagpiqkuqofnz][0], node[node_iHZwWXkq], relocating [node_MWGhmlqk], [R], s[RELOCATING], a[id=K2g0NBcaT6y4omlzahOrIg, rId=K3tmGfU0SViPePKDBV2zCg]%0A----shard_id [index_ukpagpiqkuqofnz][1]%0A--------[index_ukpagpiqkuqofnz][1], node[node_xDsDZBSP], relocating [node_MWGhmlqk], [R], s[RELOCATING], a[id=hhn1yd9vTnyPbwfmj0Mr2A, rId=vJYe0x_MTRy_m-WyG2sv7g]%0A--------[index_ukpagpiqkuqofnz][1], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=WDP2qBn5SViY-48Y7IDeSg, rId=sykH18CJRJSd6knld6WWQg]%0A%0A-- index [[index_jkzyvmaojboecue/H6rRQRLCRUqs9C48Gvc_rA]]%0A----shard_id [index_jkzyvmaojboecue][0]%0A--------[index_jkzyvmaojboecue][0], node[node_MWGhmlqk], relocating [node_iHZwWXkq], [P], s[RELOCATING], a[id=qaovY10hQ3e0E37MPbjbQQ, rId=GV8BSMCCQsK3LmnNaqXFcQ]%0A--------[index_jkzyvmaojboecue][0], node[node_xDsDZBSP], [R], s[STARTED], a[id=tLZyzglRQDekhPSGdRJVmw]%0A----shard_id [index_jkzyvmaojboecue][1]%0A--------[index_jkzyvmaojboecue][1], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=WHkqyghET1ere52dirqq4g, rId=KeR1VxAHSTaH2pRia48Mpg]%0A--------[index_jkzyvmaojboecue][1], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [R], s[RELOCATING], a[id=GMs5F-HQSySzEEkJvtHtCw, rId=plCRi7O5TlqFGP5y_zZ87w]%0A%0A-- index [[index_nmwolxitfhuokni/SFulx4AYTdmVmqFFonr65Q]]%0A----shard_id [index_nmwolxitfhuokni][0]%0A--------[index_nmwolxitfhuokni][0], node[node_MWGhmlqk], [R], s[STARTED], a[id=hglabTPeRSqLfwz732lilw]%0A--------[index_nmwolxitfhuokni][0], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [R], s[RELOCATING], a[id=NmxnIqVNQ2W2UFomYVen8g, rId=1nCNyVXkTGSWJrvg5sfJ7A]%0A--------[index_nmwolxitfhuokni][0], node[node_xDsDZBSP], [P], s[STARTED], a[id=hb4RuxQbT6SZylv3TssKCg]%0A----shard_id [index_nmwolxitfhuokni][1]%0A--------[index_nmwolxitfhuokni][1], node[node_MWGhmlqk], [R], s[STARTED], a[id=tNj1RJauSX6xOoXhcrIdCg]%0A--------[index_nmwolxitfhuokni][1], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [P], s[RELOCATING], a[id=sfEFP7HjStSBwf9RTNUkiA, rId=NnE0E0U4Sq6J0QRIc7PDNQ]%0A--------[index_nmwolxitfhuokni][1], node[node_xDsDZBSP], [R], s[STARTED], a[id=wLCBEHKSRtebJXSghm3Kfw]%0A----shard_id [index_nmwolxitfhuokni][2]%0A--------[index_nmwolxitfhuokni][2], node[node_MWGhmlqk], [P], s[STARTED], a[id=Q3g6kG7xTsCEs5kEl8xGqg]%0A--------[index_nmwolxitfhuokni][2], node[node_xDsDZBSP], [R], s[STARTED], a[id=ebi7VxumSiu21yqeWRHiLQ]%0A--------[index_nmwolxitfhuokni][2], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [R], s[RELOCATING], a[id=8dquQjI5QAa2uMiOT0vlBQ, rId=jYYkdlIzSKiwxIGLdpL9Pw]%0A%0A-- index [[index_fvmfgcextnrdumg/7j2yilKHS3-DZlPUN-tEQg]]%0A----shard_id [index_fvmfgcextnrdumg][0]%0A--------[index_fvmfgcextnrdumg][0], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [R], s[RELOCATING], a[id=ooZ2hVOfTOa6VyziLbV5Hw, rId=3klTrOhsRuu_UTqdumnSDQ]%0A--------[index_fvmfgcextnrdumg][0], node[node_xDsDZBSP], [P], s[STARTED], a[id=Sowjix0yS2SsauBBpFpu4g]%0A----shard_id [index_fvmfgcextnrdumg][1]%0A--------[index_fvmfgcextnrdumg][1], node[node_iHZwWXkq], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=wxQ-0YGQRDiwrkCVUFyGOg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.007Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_fvmfgcextnrdumg][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.007Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_lldeouktwyjrteu/uYzsT894QtqKQyuf1uvOFw]]%0A----shard_id [index_lldeouktwyjrteu][0]%0A--------[index_lldeouktwyjrteu][0], node[node_iHZwWXkq], [P], s[STARTED], a[id=H_z0eu6PRHWseyF9bC2eeQ]%0A----shard_id [index_lldeouktwyjrteu][1]%0A--------[index_lldeouktwyjrteu][1], node[node_AsNFpLkV], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=gyXfM0vZTYOiz4Bvik-ptQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.003Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_ewiviwcffsvzgdc/ltYnAaveRwGNZf_d09kdbQ]]%0A----shard_id [index_ewiviwcffsvzgdc][0]%0A--------[index_ewiviwcffsvzgdc][0], node[node_AsNFpLkV], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=gZVrm-09SfiltAQ-h7wEZQ, rId=RfJWVdXRS_-a2XdWHuA9zg]%0A%0A-- index [[index_osndjqtyaglnllb/t6nRdeq2S0ytXm8b2SwhpQ]]%0A----shard_id [index_osndjqtyaglnllb][0]%0A--------[index_osndjqtyaglnllb][0], node[node_AsNFpLkV], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=9Kr3Oi45RR6sJYhlWeuwXA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[deciders_throttled]]%0A--------[index_osndjqtyaglnllb][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_osndjqtyaglnllb][1]%0A--------[index_osndjqtyaglnllb][1], node[node_MWGhmlqk], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=bPRy7S8oTEqIxDrcygpW9g], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_osndjqtyaglnllb][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_vnnzvrivikxucyr/s5dQD2K1RmqGvsh4jXHEkA]]%0A----shard_id [index_vnnzvrivikxucyr][0]%0A--------[index_vnnzvrivikxucyr][0], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=c5upNC4aQrKDp08t0j6sTg, rId=CrC5ceXaS-ulFUj2r9K02w]%0A--------[index_vnnzvrivikxucyr][0], node[node_xDsDZBSP], [R], s[STARTED], a[id=tcEosQAFQ42IYIogbhNKyA]%0A----shard_id [index_vnnzvrivikxucyr][1]%0A--------[index_vnnzvrivikxucyr][1], node[node_MWGhmlqk], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=jscGUS9LSRK0WC3iarlTyQ, rId=pW2ifwnWQBuqYEsI2I8wPQ]%0A--------[index_vnnzvrivikxucyr][1], node[node_AsNFpLkV], [R], s[STARTED], a[id=ZcmLR7ZkREC8j0cpLgzWmQ]%0A----shard_id [index_vnnzvrivikxucyr][2]%0A--------[index_vnnzvrivikxucyr][2], node[node_MWGhmlqk], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=TL1JkcXbQYi9C44gdhQ-NQ, rId=XMj2d3HCRXSqCd0UrX-Mng]%0A--------[index_vnnzvrivikxucyr][2], node[node_iHZwWXkq], [R], s[STARTED], a[id=QiXyxcIVSb-EQ_psopj4kw]%0A%0A-- index [[index_cbjgtzxqqhyclem/aBoghLZQSHi1FpQIZF_mMQ]]%0A----shard_id [index_cbjgtzxqqhyclem][0]%0A--------[index_cbjgtzxqqhyclem][0], node[node_iHZwWXkq], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=zQXyPJZLR3eAL-Z8q4z0Rw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[deciders_throttled]]%0A--------[index_cbjgtzxqqhyclem][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_cbjgtzxqqhyclem][1]%0A--------[index_cbjgtzxqqhyclem][1], node[node_iHZwWXkq], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=x4R-8HyeTHOezDfA6qMX1g], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cbjgtzxqqhyclem][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_cbjgtzxqqhyclem][2]%0A--------[index_cbjgtzxqqhyclem][2], node[node_xDsDZBSP], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=5GDCnGyIT8eprS4OO7syjQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cbjgtzxqqhyclem][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- in"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "dex [[index_ckikwuboegbvcrj/fHtnFZ2PTXGsZfrd_JqW-g]]%0A----shard_id [index_ckikwuboegbvcrj][0]%0A--------[index_ckikwuboegbvcrj][0], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [R], s[RELOCATING], a[id=XAhXUeZvTZSNB_1D716h_Q, rId=wRAet8i3QKKQqqEkBctNVg]%0A--------[index_ckikwuboegbvcrj][0], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=8g6jz_7VT_uupe4H6sqS7A, rId=ids8RbDYQRm4LLP-Nd5xlA]%0A--------[index_ckikwuboegbvcrj][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-15T10:37:22.134Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A----shard_id [index_ckikwuboegbvcrj][1]%0A--------[index_ckikwuboegbvcrj][1], node[node_AsNFpLkV], [P], s[STARTED], a[id=HX_DfziCQnSlHLhCROUKmg]%0A--------[index_ckikwuboegbvcrj][1], node[node_xDsDZBSP], [R], s[STARTED], a[id=0rVszwh0TRW5wjdQRzxKIg]%0A--------[index_ckikwuboegbvcrj][1], node[node_iHZwWXkq], [R], s[STARTED], a[id=Ju6JX487TjSLjj_fQjSU-Q]%0A%0A-- index [[index_okttikfpeebioag/XGo9boNZQ4azRSEdtSeRqw]]%0A----shard_id [index_okttikfpeebioag][0]%0A--------[index_okttikfpeebioag][0], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=kfDRndmnR3SzWJwlPx_J7w, rId=J2yz22qUT26QyjkDkPMBNg]%0A----shard_id [index_okttikfpeebioag][1]%0A--------[index_okttikfpeebioag][1], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=QjVh_b-xSgm7-YRfH6ZVDA, rId=YOt3AJNNTwWESrJkHOx9JA]%0A----shard_id [index_okttikfpeebioag][2]%0A--------[index_okttikfpeebioag][2], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=LDfqsj77TcOHd-pDuyk98g, rId=XzbVKAlXRtKL99kYvAZ9ww]%0A%0A-- index [[index_fejsksbytxephzd/D7VBW9keQ3K7SPQGOf2TOw]]%0A----shard_id [index_fejsksbytxephzd][0]%0A--------[index_fejsksbytxephzd][0], node[node_MWGhmlqk], [P], recovery_source[existing recovery], s[INITIALIZING], a[id=AbP1NS_DQUmaCJVTHQAIeg], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-15T10:37:22.520Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_fejsksbytxephzd][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-15T10:37:22.520Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_iggoxzaslqmtkvp/RQtQrnkQRuW6zldGO_T_9A]]%0A----shard_id [index_iggoxzaslqmtkvp][0]%0A--------[index_iggoxzaslqmtkvp][0], node[node_MWGhmlqk], [P], s[STARTED], a[id=BAuzPTIpS8CBdXbuLPG4HQ]%0A--------[index_iggoxzaslqmtkvp][0], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=tfJohva9QaWmun--zxGysw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.805Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_iggoxzaslqmtkvp][0], node[node_xDsDZBSP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=2B-HJmAiTF2xMRhfdGkgkA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.805Z], delayed=false, allocation_status[no_attempt]]%0A%0Arouting_nodes:%0A-----node_id[node_MWGhmlqk][V]%0A--------[index_dioxvjszjiertvz][1], node[node_MWGhmlqk], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=4HsjwbjdREiDGhOG1Rbbyw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.122Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_dioxvjszjiertvz][0], node[node_MWGhmlqk], [R], s[STARTED], a[id=walmO02wQLWN_8DJokVytA]%0A--------[index_qwqovivipdnlamr][0], node[node_MWGhmlqk], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=6G91GildREC_PSYnS-IsyQ, rId=ZdeVVmW2TRqVOyLk_sf2zQ]%0A--------[index_ehhnxkhrbuxbfez][1], node[node_MWGhmlqk], [P], s[STARTED], a[id=e8CbiuSlSea4Gx2hk9HPqg]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_MWGhmlqk], [R], s[STARTED], a[id=kc6Gn7QuSoKOWPW_QqIqbw]%0A--------[index_vkkrmfxvcygnaiy][1], node[node_MWGhmlqk], relocating [node_xDsDZBSP], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=LRtzPOdjRN6VnIz8kdBBag, rId=Cs-vltfpQwGNHJ8EhAmJoQ]%0A--------[index_vkkrmfxvcygnaiy][0], node[node_MWGhmlqk], [P], s[STARTED], a[id=bdJC1CHeQzKPygxXrarYqQ]%0A--------[index_pkdeyczpnmkicwn][1], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [R], s[RELOCATING], a[id=NizXAp_hRM-DcSo6jonHng, rId=MFNAjuCWQ3uC_ErVMreSAA]%0A--------[index_pkdeyczpnmkicwn][0], node[node_MWGhmlqk], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=3mzR9q0zR4qjfxl7PdrR-w, rId=VjVbiG6WTLOarqqYE3o4eQ]%0A--------[index_ukpagpiqkuqofnz][1], node[node_MWGhmlqk], relocating [node_xDsDZBSP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=vJYe0x_MTRy_m-WyG2sv7g, rId=hhn1yd9vTnyPbwfmj0Mr2A]%0A--------[index_ukpagpiqkuqofnz][0], node[node_MWGhmlqk], relocating [node_iHZwWXkq], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=K3tmGfU0SViPePKDBV2zCg, rId=K2g0NBcaT6y4omlzahOrIg]%0A--------[index_jkzyvmaojboecue][1], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=WHkqyghET1ere52dirqq4g, rId=KeR1VxAHSTaH2pRia48Mpg]%0A--------[index_jkzyvmaojboecue][0], node[node_MWGhmlqk], relocating [node_iHZwWXkq], [P], s[RELOCATING], a[id=qaovY10hQ3e0E37MPbjbQQ, rId=GV8BSMCCQsK3LmnNaqXFcQ]%0A--------[index_nmwolxitfhuokni][1], node[node_MWGhmlqk], [R], s[STARTED], a[id=tNj1RJauSX6xOoXhcrIdCg]%0A--------[index_nmwolxitfhuokni][2], node[node_MWGhmlqk], [P], s[STARTED], a[id=Q3g6kG7xTsCEs5kEl8xGqg]%0A--------[index_nmwolxitfhuokni][0], node[node_MWGhmlqk], [R], s[STARTED], a[id=hglabTPeRSqLfwz732lilw]%0A--------[index_fvmfgcextnrdumg][0], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=3klTrOhsRuu_UTqdumnSDQ, rId=ooZ2hVOfTOa6VyziLbV5Hw]%0A--------[index_osndjqtyaglnllb][1], node[node_MWGhmlqk], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=bPRy7S8oTEqIxDrcygpW9g], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_vnnzvrivikxucyr][1], node[node_MWGhmlqk], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=jscGUS9LSRK0WC3iarlTyQ, rId=pW2ifwnWQBuqYEsI2I8wPQ]%0A--------[index_vnnzvrivikxucyr][2], node[node_MWGhmlqk], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=TL1JkcXbQYi9C44gdhQ-NQ, rId=XMj2d3HCRXSqCd0UrX-Mng]%0A--------[index_vnnzvrivikxucyr][0], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=c5upNC4aQrKDp08t0j6sTg, rId=CrC5ceXaS-ulFUj2r9K02w]%0A--------[index_ckikwuboegbvcrj][0], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [R], s[RELOCATING], a[id=XAhXUeZvTZSNB_1D716h_Q, rId=wRAet8i3QKKQqqEkBctNVg]%0A--------[index_okttikfpeebioag][2], node[node_MWGhmlqk], relocating [node_AsNFpLkV], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=XzbVKAlXRtKL99kYvAZ9ww, rId=LDfqsj77TcOHd-pDuyk98g]%0A--------[index_fejsksbytxephzd][0], node[node_MWGhmlqk], [P], recovery_source[existing recovery], s[INITIALIZING], a[id=AbP1NS_DQUmaCJVTHQAIeg], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-15T10:37:22.520Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_iggoxzaslqmtkvp][0], node[node_MWGhmlqk], [P], s[STARTED], a[id=BAuzPTIpS8CBdXbuLPG4HQ]%0A-----node_id[node_AsNFpLkV][V]%0A--------[index_dioxvjszjiertvz][1], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [P], s[RELOCATING], a[id=FRgyYFvyRtKKqTm1XDdayg, rId=oIPZuRYyQryAVpO3UHdjgA]%0A--------[index_dioxvjszjiertvz][0], node[node_AsNFpLkV], [P], s[STARTED], a[id=FFu2asyARYGmFF-AuDYohA]%0A--------[index_ehhnxkhrbuxbfez][1], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=prRth70VTKaIficYdnQcMQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.809Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_AsNFpLkV], [R], s[STARTED], a[id=dmgRzZ-DTzayUJ2mRDBR5Q]%0A--------[index_vkkrmfxvcygnaiy][1], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=CldC-uSaRBidS4-sLsHUMw], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-15T10:37:21.784Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_vkkrmfxvcygnaiy][0], node[node_AsNFpLkV], [R], s[STARTED], a[id=fDX45lrATKKv2MzKPsdibA"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "]%0A--------[index_pkdeyczpnmkicwn][1], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=MFNAjuCWQ3uC_ErVMreSAA, rId=NizXAp_hRM-DcSo6jonHng]%0A--------[index_pkdeyczpnmkicwn][0], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=un7kACRESwqDBS9MU8XmoA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.120Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ukpagpiqkuqofnz][1], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=sykH18CJRJSd6knld6WWQg, rId=WDP2qBn5SViY-48Y7IDeSg]%0A--------[index_ukpagpiqkuqofnz][0], node[node_AsNFpLkV], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=ao6YbYrTS1yzbZTXEZm_ew, rId=b7ogaL9eSH2ikhxjgo2cWQ]%0A--------[index_jkzyvmaojboecue][1], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=KeR1VxAHSTaH2pRia48Mpg, rId=WHkqyghET1ere52dirqq4g]%0A--------[index_nmwolxitfhuokni][1], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [P], s[RELOCATING], a[id=sfEFP7HjStSBwf9RTNUkiA, rId=NnE0E0U4Sq6J0QRIc7PDNQ]%0A--------[index_nmwolxitfhuokni][2], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=jYYkdlIzSKiwxIGLdpL9Pw, rId=8dquQjI5QAa2uMiOT0vlBQ]%0A--------[index_nmwolxitfhuokni][0], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [R], s[RELOCATING], a[id=NmxnIqVNQ2W2UFomYVen8g, rId=1nCNyVXkTGSWJrvg5sfJ7A]%0A--------[index_fvmfgcextnrdumg][0], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [R], s[RELOCATING], a[id=ooZ2hVOfTOa6VyziLbV5Hw, rId=3klTrOhsRuu_UTqdumnSDQ]%0A--------[index_lldeouktwyjrteu][1], node[node_AsNFpLkV], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=gyXfM0vZTYOiz4Bvik-ptQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.003Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ewiviwcffsvzgdc][0], node[node_AsNFpLkV], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=gZVrm-09SfiltAQ-h7wEZQ, rId=RfJWVdXRS_-a2XdWHuA9zg]%0A--------[index_osndjqtyaglnllb][0], node[node_AsNFpLkV], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=9Kr3Oi45RR6sJYhlWeuwXA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[deciders_throttled]]%0A--------[index_vnnzvrivikxucyr][1], node[node_AsNFpLkV], [R], s[STARTED], a[id=ZcmLR7ZkREC8j0cpLgzWmQ]%0A--------[index_vnnzvrivikxucyr][0], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=CrC5ceXaS-ulFUj2r9K02w, rId=c5upNC4aQrKDp08t0j6sTg]%0A--------[index_ckikwuboegbvcrj][1], node[node_AsNFpLkV], [P], s[STARTED], a[id=HX_DfziCQnSlHLhCROUKmg]%0A--------[index_ckikwuboegbvcrj][0], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=wRAet8i3QKKQqqEkBctNVg, rId=XAhXUeZvTZSNB_1D716h_Q]%0A--------[index_okttikfpeebioag][1], node[node_AsNFpLkV], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=YOt3AJNNTwWESrJkHOx9JA, rId=QjVh_b-xSgm7-YRfH6ZVDA]%0A--------[index_okttikfpeebioag][2], node[node_AsNFpLkV], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=LDfqsj77TcOHd-pDuyk98g, rId=XzbVKAlXRtKL99kYvAZ9ww]%0A--------[index_iggoxzaslqmtkvp][0], node[node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=tfJohva9QaWmun--zxGysw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.805Z], delayed=false, allocation_status[no_attempt]]%0A-----node_id[node_xDsDZBSP][V]%0A--------[index_dioxvjszjiertvz][1], node[node_xDsDZBSP], [R], s[STARTED], a[id=FoeOOSwuQHKNrnuSXl8H0Q]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_xDsDZBSP], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=It169HRcR4WFhQvUbZeDVw, rId=JYELKBo2Q9izmeGgZX4oRQ]%0A--------[index_vkkrmfxvcygnaiy][1], node[node_xDsDZBSP], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=Cs-vltfpQwGNHJ8EhAmJoQ, rId=LRtzPOdjRN6VnIz8kdBBag]%0A--------[index_pkdeyczpnmkicwn][1], node[node_xDsDZBSP], [P], s[STARTED], a[id=K99qohXfSeuDP4EHBxxCng]%0A--------[index_ukpagpiqkuqofnz][1], node[node_xDsDZBSP], relocating [node_MWGhmlqk], [R], s[RELOCATING], a[id=hhn1yd9vTnyPbwfmj0Mr2A, rId=vJYe0x_MTRy_m-WyG2sv7g]%0A--------[index_ukpagpiqkuqofnz][0], node[node_xDsDZBSP], relocating [node_AsNFpLkV], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=b7ogaL9eSH2ikhxjgo2cWQ, rId=ao6YbYrTS1yzbZTXEZm_ew]%0A--------[index_jkzyvmaojboecue][1], node[node_xDsDZBSP], relocating [node_iHZwWXkq], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=plCRi7O5TlqFGP5y_zZ87w, rId=GMs5F-HQSySzEEkJvtHtCw]%0A--------[index_jkzyvmaojboecue][0], node[node_xDsDZBSP], [R], s[STARTED], a[id=tLZyzglRQDekhPSGdRJVmw]%0A--------[index_nmwolxitfhuokni][1], node[node_xDsDZBSP], [R], s[STARTED], a[id=wLCBEHKSRtebJXSghm3Kfw]%0A--------[index_nmwolxitfhuokni][2], node[node_xDsDZBSP], [R], s[STARTED], a[id=ebi7VxumSiu21yqeWRHiLQ]%0A--------[index_nmwolxitfhuokni][0], node[node_xDsDZBSP], [P], s[STARTED], a[id=hb4RuxQbT6SZylv3TssKCg]%0A--------[index_fvmfgcextnrdumg][0], node[node_xDsDZBSP], [P], s[STARTED], a[id=Sowjix0yS2SsauBBpFpu4g]%0A--------[index_ewiviwcffsvzgdc][0], node[node_xDsDZBSP], relocating [node_AsNFpLkV], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=RfJWVdXRS_-a2XdWHuA9zg, rId=gZVrm-09SfiltAQ-h7wEZQ]%0A--------[index_vnnzvrivikxucyr][1], node[node_xDsDZBSP], relocating [node_MWGhmlqk], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=pW2ifwnWQBuqYEsI2I8wPQ, rId=jscGUS9LSRK0WC3iarlTyQ]%0A--------[index_vnnzvrivikxucyr][2], node[node_xDsDZBSP], relocating [node_MWGhmlqk], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=XMj2d3HCRXSqCd0UrX-Mng, rId=TL1JkcXbQYi9C44gdhQ-NQ]%0A--------[index_vnnzvrivikxucyr][0], node[node_xDsDZBSP], [R], s[STARTED], a[id=tcEosQAFQ42IYIogbhNKyA]%0A--------[index_cbjgtzxqqhyclem][2], node[node_xDsDZBSP], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=5GDCnGyIT8eprS4OO7syjQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ckikwuboegbvcrj][1], node[node_xDsDZBSP], [R], s[STARTED], a[id=0rVszwh0TRW5wjdQRzxKIg]%0A--------[index_ckikwuboegbvcrj][0], node[node_xDsDZBSP], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=ids8RbDYQRm4LLP-Nd5xlA, rId=8g6jz_7VT_uupe4H6sqS7A]%0A--------[index_okttikfpeebioag][0], node[node_xDsDZBSP], relocating [node_iHZwWXkq], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=J2yz22qUT26QyjkDkPMBNg, rId=kfDRndmnR3SzWJwlPx_J7w]%0A--------[index_iggoxzaslqmtkvp][0], node[node_xDsDZBSP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=2B-HJmAiTF2xMRhfdGkgkA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:21.805Z], delayed=false, allocation_status[no_attempt]]%0A-----node_id[node_iHZwWXkq][V]%0A--------[index_dioxvjszjiertvz][1], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=oIPZuRYyQryAVpO3UHdjgA, rId=FRgyYFvyRtKKqTm1XDdayg]%0A--------[index_dioxvjszjiertvz][0], node[node_iHZwWXkq], [R], s[STARTED], a[id=h-FY0fnhTAaBbezljfK0Gw]%0A--------[index_qwqovivipdnlamr][1], node[node_iHZwWXkq], [P], s[STARTED], a[id=aT0h-mRBR-mDKzU5MLlM0Q]%0A--------[index_qwqovivipdnlamr][0], node[node_iHZwWXkq], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=ZdeVVmW2TRqVOyLk_sf2zQ, rId=6G91GildREC_PSYnS-IsyQ]%0A--------[index_ehhnxkhrbuxbfez][1], node[node_iHZwWXkq], [R], s[STARTED], a[id=sl4VLZpnRomk9rIUj8wiVg]%0A--------[index_ehhnxkhrbuxbfez][0], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=JYELKBo2Q9izmeGgZX4oRQ, rId=It169HRcR4WFhQvUbZeDVw]%0A--------[index_pkdeyczpnmkicwn][0], node[node_iHZwWXkq], relocating [node_MWGhmlqk], [P], s[RELOCATING], a[id=VjVbiG6WTLOarqqYE3o4eQ, rId=3mzR9q0zR4qjfxl7PdrR-w]%0A--------[index_ukpagpiqkuqofnz][1], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=WDP2qBn5SViY-48Y7IDeSg, rId=sykH18CJRJSd6knld6WWQg]%0A--------[index_ukpagpiqkuqofnz][0], node["
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "node_iHZwWXkq], relocating [node_MWGhmlqk], [R], s[RELOCATING], a[id=K2g0NBcaT6y4omlzahOrIg, rId=K3tmGfU0SViPePKDBV2zCg]%0A--------[index_jkzyvmaojboecue][1], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [R], s[RELOCATING], a[id=GMs5F-HQSySzEEkJvtHtCw, rId=plCRi7O5TlqFGP5y_zZ87w]%0A--------[index_jkzyvmaojboecue][0], node[node_iHZwWXkq], relocating [node_MWGhmlqk], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=GV8BSMCCQsK3LmnNaqXFcQ, rId=qaovY10hQ3e0E37MPbjbQQ]%0A--------[index_nmwolxitfhuokni][1], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=NnE0E0U4Sq6J0QRIc7PDNQ, rId=sfEFP7HjStSBwf9RTNUkiA]%0A--------[index_nmwolxitfhuokni][2], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [R], s[RELOCATING], a[id=8dquQjI5QAa2uMiOT0vlBQ, rId=jYYkdlIzSKiwxIGLdpL9Pw]%0A--------[index_nmwolxitfhuokni][0], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=1nCNyVXkTGSWJrvg5sfJ7A, rId=NmxnIqVNQ2W2UFomYVen8g]%0A--------[index_fvmfgcextnrdumg][1], node[node_iHZwWXkq], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=wxQ-0YGQRDiwrkCVUFyGOg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.007Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_lldeouktwyjrteu][0], node[node_iHZwWXkq], [P], s[STARTED], a[id=H_z0eu6PRHWseyF9bC2eeQ]%0A--------[index_vnnzvrivikxucyr][2], node[node_iHZwWXkq], [R], s[STARTED], a[id=QiXyxcIVSb-EQ_psopj4kw]%0A--------[index_cbjgtzxqqhyclem][1], node[node_iHZwWXkq], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=x4R-8HyeTHOezDfA6qMX1g], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cbjgtzxqqhyclem][0], node[node_iHZwWXkq], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=zQXyPJZLR3eAL-Z8q4z0Rw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[deciders_throttled]]%0A--------[index_ckikwuboegbvcrj][1], node[node_iHZwWXkq], [R], s[STARTED], a[id=Ju6JX487TjSLjj_fQjSU-Q]%0A--------[index_ckikwuboegbvcrj][0], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=8g6jz_7VT_uupe4H6sqS7A, rId=ids8RbDYQRm4LLP-Nd5xlA]%0A--------[index_okttikfpeebioag][1], node[node_iHZwWXkq], relocating [node_AsNFpLkV], [P], s[RELOCATING], a[id=QjVh_b-xSgm7-YRfH6ZVDA, rId=YOt3AJNNTwWESrJkHOx9JA]%0A--------[index_okttikfpeebioag][0], node[node_iHZwWXkq], relocating [node_xDsDZBSP], [P], s[RELOCATING], a[id=kfDRndmnR3SzWJwlPx_J7w, rId=J2yz22qUT26QyjkDkPMBNg]%0A---- unassigned%0A--------[index_fvmfgcextnrdumg][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.007Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_osndjqtyaglnllb][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_osndjqtyaglnllb][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.112Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cbjgtzxqqhyclem][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cbjgtzxqqhyclem][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cbjgtzxqqhyclem][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:37:22.491Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ckikwuboegbvcrj][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-15T10:37:22.134Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A--------[index_fejsksbytxephzd][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-15T10:37:22.520Z], delayed=false, allocation_status[no_attempt]]%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
  "startTimestamp": 1473935837616,
  "executionTime": 5035
 }
]

[
 "TEST_STARTED",
 "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
  "startTimestamp": 1473935842651,
  "executionTime": 97
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
  "startTimestamp": 1473935837589,
  "executionTime": 5220
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "children": [
    {
     "id": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testForceAllocatePrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAllocationFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testStoreException",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testAllocateToTheHighestVersionOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testVersionBasedAllocationPrefersShardWithAllocationId",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontForceAllocateOnThrottleDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoProcessPrimaryNotAllocatedBefore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoActiveAllocationIds",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoMatchingAllocationIdFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButNoDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNode",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButThrottlingDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testPreferAllocatingPreviousPrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontAllocateOnNoOrThrottleForceAllocationDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationAndAllocating",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935843021
 }
]

[
 "TEST_STARTED",
 "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843052,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843137,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843149,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843162,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843167,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843173,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843178,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843216,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843227,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843232,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843236,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843241,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843247,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843253,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843257,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843308,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843313,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843316,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843325,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843329,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843333,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843337,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843340,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843351,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1473935843355,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
  "startTimestamp": 1473935843021,
  "executionTime": 355
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935843483
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
  "startTimestamp": 1473935843502,
  "executionTime": 85
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
  "startTimestamp": 1473935843483,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
   "displayName": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "children": [
    {
     "id": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testPrioritizedTasks",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testMasterAwareExecution",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateTasksAreExecutedInOrder",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateBatchedUpdates",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testLongClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testTimeoutUpdateTask",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testSingleBatchSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testDuplicateSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateTaskListenerThrowingExceptionIsOkay",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935844090
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,209][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test setting state]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,210][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,210][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test setting state]%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: TbUBgGTQS3eLwk7xEU902w%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{j4o39UpVS06rSJfohFyy4Q}{local}{local[111]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,211][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{j4o39UpVS06rSJfohFyy4Q}{local}{local[111]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,211][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,211][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,211][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: took [0s] done applying updated cluster_state (version: 2, uuid: TbUBgGTQS3eLwk7xEU902w)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,314][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:24,315 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,318][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:24,320 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,323][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: took [1s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:24,325 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,331][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:24,331 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,332][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,336][TRACE][org.elasticsearch.cluster.service] failed to execute cluster state update in [2s], state:%0Aversion [2], source [test2]%0Anodes: %0A   {node1}{j4o39UpVS06rSJfohFyy4Q}{local}{local[111]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,358][DEBUG][org.elasticsearch.cluster.service] cluster state update task [test2] failed%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,358][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: took [2s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,359][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,359][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,366][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test3]%0Acluster uuid: _na_%0Aversion: 4%0Astate uuid: cbu204NJTrS0uu73w8xszA%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{j4o39UpVS06rSJfohFyy4Q}{local}{local[111]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,366][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,366][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,368][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: took [3s] done applying updated cluster_state (version: 4, uuid: cbu204NJTrS0uu73w8xszA)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,368][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,368][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,368][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: took [0s] no change in cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935844116,
  "executionTime": 254
 }
]

[
 "TEST_STARTED",
 "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,384][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{k0r5Wvh6ReuJuVJ5eQActQ}{local}{local[112]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935844371,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,399][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{n8uTjdnKTW-KaNPpK2vJug}{local}{local[113]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935844388,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,412][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{kvQsbdt0RF2unQbwdUXqgg}{local}{local[115]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935844406,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:24,743][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{Kt_Uz0OwQPm4qoe2g1PE4w}{local}{local[116]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935844634,
  "executionTime": 393
 }
]

[
 "TEST_STARTED",
 "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,097][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:25,099 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,100][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:25,100 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,101][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test3] took [33s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:25,101 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,102][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test4] took [34s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 09:37:25,102 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935845027,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,322][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{iKCSMWAkRM6PgrMXlrI_BA}{local}{local[118]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935845109,
  "executionTime": 310
 }
]

[
 "TEST_STARTED",
 "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,507][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{y6yxVUObR1ORT76Dl4CWZQ}{local}{local[119]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935845419,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,590][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{h6uJtsXNTs-6zzaeT9OgiQ}{local}{local[120]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935845556,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,709][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{gqJS1GGGS1KjzQAwtmabDA}{local}{local[121]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T09:37:25,840][ERROR][org.elasticsearch.cluster.service] exception thrown by listener while notifying of cluster state processed from [testClusterStateTaskListenerThrowingExceptionIsOkay], old cluster state:%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: 4ggMwfL1S4ibfHbVzfak3w%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{gqJS1GGGS1KjzQAwtmabDA}{local}{local[121]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0Anew cluster state:%0Acluster uuid: _na_%0Aversion: 3%0Astate uuid: 3Z2jsVYUQVWw2TEIPeB25w%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{gqJS1GGGS1KjzQAwtmabDA}{local}{local[121]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalStateException: testClusterStateTaskListenerThrowingExceptionIsOkay%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$8.clusterStateProcessed(ClusterServiceTests.java:291) ~[test/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$SafeClusterStateTaskListener.clusterStateProcessed(ClusterService.java:821) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:739) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1473935845661,
  "executionTime": 180
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
  "startTimestamp": 1473935844090,
  "executionTime": 1759
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "children": [
    {
     "id": "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testFailWithSubAgg",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935845896
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:26,031][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{F9ViPmz-TmeOFpL--1kH7A}{local}{local[122]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1473935846050,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1473935846247,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1473935846446,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1473935846626,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.TopHitsTests",
  "startTimestamp": 1473935845896,
  "executionTime": 747
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
   "displayName": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "children": [
    {
     "id": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935846863
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1473935846906,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1473935846976,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1473935847021,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1473935847080,
  "executionTime": 60
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
  "startTimestamp": 1473935846863,
  "executionTime": 279
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935847166
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:27,216][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9qwYgMgNSbyvJQA6Q9ZEig}{local}{local[123]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1473935847273,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1473935847278,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1473935847286,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
  "startTimestamp": 1473935847166,
  "executionTime": 142
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.SortByTests",
   "displayName": "org.elasticsearch.search.suggest.term.SortByTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.SortByTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935847454
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1473935847520,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1473935847545,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1473935847547,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1473935847550,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.SortByTests",
  "startTimestamp": 1473935847454,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
   "displayName": "org.apache.lucene.queries.BlendedTermQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.BlendedTermQueryTests",
   "children": [
    {
     "id": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testExtractTerms",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testDismaxQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBooleanQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935847615
 }
]

[
 "TEST_STARTED",
 "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1473935847658,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1473935847780,
  "executionTime": 465
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1473935848245,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1473935848412,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
  "startTimestamp": 1473935847615,
  "executionTime": 802
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "children": [
    {
     "id": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testAllowNoIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testVerbose",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndexIgnoreUnavailable",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935848441
 }
]

[
 "TEST_STARTED",
 "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:28,493][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:28,616][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:28,616][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:28,620][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:28,624][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:28,624][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,203][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,204][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,206][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,219][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{epEt_IUtQOWhM1feFQkLrg}{9CAaDZd1S2Wl-HdXPjVz7Q}{local}{local[18]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,220][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,257][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,284][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,289][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,291][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:29,544][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:30,849][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8_CzMnt2QkKaV5Zr5wVNGw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,650][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testAllowNoIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1473935848478,
  "executionTime": 14173
 }
]

[
 "TEST_STARTED",
 "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,656][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,661][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,663][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/74G-dovqSCaidiRWGPsoCw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:47,127][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testVerbose]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1473935862651,
  "executionTime": 4530
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:47,187][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:47,191][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:47,193][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:47,270][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:47,298][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/G3tWwSkEQ-OJ7PWOd1lHNg] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,702][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/G3tWwSkEQ-OJ7PWOd1lHNg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,772][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndex]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,774][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,775][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1473935867181,
  "executionTime": 3628
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,817][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,821][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,823][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:50,955][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jwipbSGZTFqqiSHHRoeA1Q] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,208][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/jwipbSGZTFqqiSHHRoeA1Q]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,238][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndexIgnoreUnavailable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,240][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,241][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1473935870810,
  "executionTime": 3465
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,280][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,285][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,287][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,365][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:54,386][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/XKbWzAHUSzCE7dkLCiA2kg] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:56,519][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1473935874275,
  "executionTime": 2295
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:56,570][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:56,571][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:56,571][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:56,574][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
  "startTimestamp": 1473935848441,
  "executionTime": 28154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchModuleTests",
   "displayName": "org.elasticsearch.search.SearchModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchModuleTests",
   "children": [
    {
     "id": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testDoubleRegister",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisteredQueries",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterSuggester",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterHighlighter",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterPipelineAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935876631
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1473935876658,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:56,784][WARN ][org.elasticsearch.deprecation.common] Deprecated field [fuzzy_match] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:56,787][WARN ][org.elasticsearch.deprecation.common] Deprecated field [geo_bbox] used, expected [geo_bounding_box] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:56,788][WARN ][org.elasticsearch.deprecation.common] Deprecated field [in] used, expected [terms] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:56,788][WARN ][org.elasticsearch.deprecation.common] Deprecated field [match_fuzzy] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:37:56,788][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1473935876781,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1473935876789,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1473935876809,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1473935876875,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1473935876910,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchModuleTests",
  "startTimestamp": 1473935876631,
  "executionTime": 326
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
   "displayName": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "children": [
    {
     "id": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testNodesFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionNotSizeLimited",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935877034
 }
]

[
 "TEST_STARTED",
 "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,060][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HGCzaqyKSxyyH2fcM_NSMA}{local}{local[124]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,064][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TPnpu_B8T06MKzv7_1SoxQ}{local}{local[125]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,104][INFO ][org.elasticsearch.test.transport] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,106][INFO ][org.elasticsearch.test.transport] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1473935877053,
  "executionTime": 362
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,423][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{STIQMLfzThuX6Voe87XOWQ}{local}{local[126]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eW7oWeiKT0-4oSfaltnXoQ}{local}{local[127]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,431][INFO ][org.elasticsearch.test.transport] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,433][INFO ][org.elasticsearch.test.transport] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,441][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{Cmrmqt0FQxW0juKMOtHMlQ}{local}{local[22]}, previous {node}{STIQMLfzThuX6Voe87XOWQ}{local}{local[126]}}, removed {{node}{STIQMLfzThuX6Voe87XOWQ}{local}{local[126]},}, added {{TS_B}{TS_B}{Cmrmqt0FQxW0juKMOtHMlQ}{local}{local[22]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:57,542][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{Cmrmqt0FQxW0juKMOtHMlQ}{local}{local[22]}, previous {node}{eW7oWeiKT0-4oSfaltnXoQ}{local}{local[127]}}, removed {{node}{eW7oWeiKT0-4oSfaltnXoQ}{local}{local[127]},}, added {{TS_A}{TS_A}{nQJZu9EVS3aBAsi8GXpE_Q}{local}{local[21]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1473935877416,
  "executionTime": 2234
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:59,693][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aJQhFAQkTJic4pyqTU6Ttw}{local}{local[128]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:59,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NAMM3-QJRX294V_JbxjA1g}{local}{local[129]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:59,699][INFO ][org.elasticsearch.test.transport] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:59,700][INFO ][org.elasticsearch.test.transport] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:59,721][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{9b8sYiOeSaKy2q8asfemLg}{local}{local[24]}, previous {node}{aJQhFAQkTJic4pyqTU6Ttw}{local}{local[128]}}, removed {{node}{aJQhFAQkTJic4pyqTU6Ttw}{local}{local[128]},}, added {{TS_B}{TS_B}{9b8sYiOeSaKy2q8asfemLg}{local}{local[24]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1473935879650,
  "executionTime": 83
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
  "startTimestamp": 1473935877034,
  "executionTime": 2701
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingTableTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingTableTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
   "children": [
    {
     "id": "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testValidations",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testIndex",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllAssignedShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testRoutingTableBuiltMoreThanOnce",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testShardsWithState",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllShards",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllActiveShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllShardsForMultipleIndices",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testHasIndex",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testIndicesRouting",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testActivePrimaryShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935879768
 }
]

[
 "TEST_STARTED",
 "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,853][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 5 shards and 5 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879845,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,916][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 5 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879909,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,925][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 5 shards and 4 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,930][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879917,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,955][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 3 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879940,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,963][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 4 shards and 3 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,963][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 4 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,965][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,968][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,970][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,971][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,972][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][3], [test2][1], [test2][2], [test2][3], [test2][2], [test2][0], [test2][3], [test2][1], [test2][0], [test2][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879956,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:59,980][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 5 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879973,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,001][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 5 shards and 1 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,002][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 2 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,004][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,006][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935879985,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,015][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 5 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,016][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 6 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,020][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,022][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935880009,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,039][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 2 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935880025,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,049][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 4 shards and 1 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935880040,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,057][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 2 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,058][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 3 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,059][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:00,060][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1473935880050,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingTableTests",
  "startTimestamp": 1473935879768,
  "executionTime": 296
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "children": [
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935880076
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,155][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,220][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,221][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,225][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,228][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,228][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,405][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,406][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,406][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,408][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{5R84xFbyQ7Oo4CRCzQPWJA}{DsxVXYyeRXiNzNfPRYwF0A}{local}{local[25]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,409][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,430][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,454][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:00,552][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,420][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935880142,
  "executionTime": 1350
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,504][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,623][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935881493,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,697][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,940][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935881687,
  "executionTime": 300
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:01,996][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,211][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935881987,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,468][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935882267,
  "executionTime": 250
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,577][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,762][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,835][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935882518,
  "executionTime": 424
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:02,951][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,179][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935882943,
  "executionTime": 289
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,252][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,351][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,407][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935883232,
  "executionTime": 224
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,486][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,567][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,611][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935883456,
  "executionTime": 210
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,675][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,798][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,817][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935883667,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,861][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,934][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935883853,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:03,994][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,048][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,071][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935883982,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,115][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,170][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,196][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935884106,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,281][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,356][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,583][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935884273,
  "executionTime": 366
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,647][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:04,724][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,050][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935884639,
  "executionTime": 524
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,173][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,723][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935885164,
  "executionTime": 611
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,783][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,866][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,916][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935885775,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:05,973][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,320][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935885964,
  "executionTime": 432
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,405][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,517][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1473935886396,
  "executionTime": 182
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,578][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,579][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,579][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:06,581][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
  "startTimestamp": 1473935880076,
  "executionTime": 6518
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "children": [
    {
     "id": "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testSwapIndexWithAlias",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testRemoveIndexTwice",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testAddAndRemove",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testAddAliasToRemovedIndex",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935886618
 }
]

[
 "TEST_STARTED",
 "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1473935886652,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1473935886710,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1473935886714,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1473935886719,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
  "startTimestamp": 1473935886618,
  "executionTime": 108
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
   "displayName": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935886750
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
  "startTimestamp": 1473935886780,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
  "startTimestamp": 1473935886750,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "children": [
    {
     "id": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayTooManyValues",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonLatGeoHash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPoint",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonNoLat",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision_String",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointInvalidType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testPrefixTreeCellSizes",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecisionString",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohashWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatNoLon",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange_withOptions",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointExtraField",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935886917
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935886990,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887003,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887007,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887033,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887038,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887059,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887061,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887065,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887069,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887072,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887092,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887094,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887106,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887148,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887151,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887154,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887156,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887159,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887164,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887166,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887168,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887171,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887173,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887196,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887201,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887203,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887206,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887209,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887212,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887215,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887217,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1473935887221,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
  "startTimestamp": 1473935886917,
  "executionTime": 321
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFieldData",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935887289
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935887310,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935887313,
  "executionTime": 1635
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935888949,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935888953,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935888956,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935888962,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935888965,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935889114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935889116,
  "executionTime": 403
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935889520,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1473935889560,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
  "startTimestamp": 1473935887289,
  "executionTime": 2277
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "displayName": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935889621
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
  "startTimestamp": 1473935889660,
  "executionTime": 608
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
  "startTimestamp": 1473935889621,
  "executionTime": 649
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "children": [
    {
     "id": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "displayName": "testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "methodName": "testPreferLocalPrimaryAllocationOverFiltered",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935890337
 }
]

[
 "TEST_STARTED",
 "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with [10] initial primary recoveries and [5] concurrent recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create 2 indices with [14] no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,447][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][8], [test1][6], [test1][12], [test1][10], [test1][13], [test1][11], [test1][9], [test1][7]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,447][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove one of the nodes and apply filter to move everything from another node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,459][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,459][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] [14] primaries should be still started but [14] other primaries should be unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,459][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start node back up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,463][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [10], relocating: [0], need to initialize: 14%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,465][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [10], relocating: [0], need to initialize: 13%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,467][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [10], relocating: [0], need to initialize: 12%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,469][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [10], relocating: [0], need to initialize: 11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,471][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [10], relocating: [0], need to initialize: 10%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,473][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [9], relocating: [0], need to initialize: 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,474][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [8], relocating: [0], need to initialize: 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [7], relocating: [0], need to initialize: 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,477][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [6], relocating: [0], need to initialize: 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,479][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [5], relocating: [0], need to initialize: 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,481][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [4], relocating: [1], need to initialize: 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,482][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [3], relocating: [2], need to initialize: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [3], need to initialize: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [3], need to initialize: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,488][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [3], need to initialize: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,489][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [4], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,560][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [4], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [4], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,564][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [4], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,566][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test1][13]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,566][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [5], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,567][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [5], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,569][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [5], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [5], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [5], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,574][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [4], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,575][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [3], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [2], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:10,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
  "startTimestamp": 1473935890360,
  "executionTime": 224
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
  "startTimestamp": 1473935890337,
  "executionTime": 250
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
   "displayName": "org.elasticsearch.index.analysis.CharMatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharMatcherTests",
   "children": [
    {
     "id": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testLetter",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSymbol",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testPunctuation",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSpace",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testNumber",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935890613
 }
]

[
 "TEST_STARTED",
 "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1473935890689,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1473935890747,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1473935890749,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1473935890751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1473935890753,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
  "startTimestamp": 1473935890613,
  "executionTime": 144
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldTests",
   "children": [
    {
     "id": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testBuildThenParse",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testObjectFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testNestedFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldWithDot",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldsInConsistentOrder",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935890814
 }
]

[
 "TEST_STARTED",
 "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:10,860][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:10,897][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:10,897][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:10,901][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:10,908][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:10,908][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,090][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,090][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,091][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,122][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HkG_EUM2Tn63d_og_kPU7Q}{ClasWUu2Rxiy5rMlkhoJNw}{local}{local[26]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,123][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,145][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,200][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,341][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,373][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testBuildThenParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1473935890847,
  "executionTime": 751
 }
]

[
 "TEST_STARTED",
 "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,622][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:11,929][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testObjectFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1473935891598,
  "executionTime": 392
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,199][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1473935891990,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,249][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,332][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,350][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testNestedFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1473935892242,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,402][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,506][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldWithDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1473935892391,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,613][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,814][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldsInConsistentOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1473935892603,
  "executionTime": 302
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,906][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,906][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,907][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:12,909][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
  "startTimestamp": 1473935890814,
  "executionTime": 2115
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "displayName": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "children": [
    {
     "id": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
     "displayName": "testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
     "methodName": "testIndexingDuringFileRecovery",
     "className": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935893112
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:14,758][INFO ][org.elasticsearch.index.replication] [s2] [test][0] --> blocking recovery on stage [TRANSLOG]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:14,781][INFO ][org.elasticsearch.index.replication] [s2] [test][0] --> recovery continues from stage [TRANSLOG]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
  "startTimestamp": 1473935893164,
  "executionTime": 2524
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
  "startTimestamp": 1473935893112,
  "executionTime": 2619
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935895768
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895792,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895796,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895817,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895819,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895823,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895829,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895832,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895835,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1473935895837,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
  "startTimestamp": 1473935895768,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "children": [
    {
     "id": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testDefaultDisabledIndexMapper",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testBwCompatIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935895877
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:15,908][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:15,956][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:15,957][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:15,960][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:15,963][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:15,963][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,156][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,156][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,157][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,185][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{45nMQ2TJTyKSJYQ-7nXkSA}{ElmoQ4I_RSamuNPBRvWkHQ}{local}{local[27]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,189][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,215][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,247][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,354][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,372][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1473935895898,
  "executionTime": 521
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,446][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,528][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,563][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testDefaultDisabledIndexMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1473935896420,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,621][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,700][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testBwCompatIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1473935896612,
  "executionTime": 120
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,733][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,733][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,734][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:16,735][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
  "startTimestamp": 1473935895877,
  "executionTime": 866
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
   "displayName": "org.elasticsearch.common.hash.MessageDigestsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.hash.MessageDigestsTests",
   "children": [
    {
     "id": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testToHexString",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha256",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha1",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testMd5",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935896785
 }
]

[
 "TEST_STARTED",
 "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1473935896812,
  "executionTime": 366
 }
]

[
 "TEST_STARTED",
 "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1473935897179,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1473935897360,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1473935897554,
  "executionTime": 193
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
  "startTimestamp": 1473935896785,
  "executionTime": 964
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.CommandTests",
   "displayName": "org.elasticsearch.cli.CommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.CommandTests",
   "children": [
    {
     "id": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerboseVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.CommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUserError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUserError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerbositySilentAndVerbose",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUsageError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUsageError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testNormalVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testSilentVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935897813
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935897843,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935897962,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testUserError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935898003,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935898022,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testUsageError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935898042,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935898054,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1473935898056,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.CommandTests",
  "startTimestamp": 1473935897813,
  "executionTime": 248
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TCPTransportTests",
   "displayName": "org.elasticsearch.transport.TCPTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TCPTransportTests",
   "children": [
    {
     "id": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6UnBracketed",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testAddressLimit",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935898089
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898154,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898187,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898200,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898203,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1473935898205,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TCPTransportTests",
  "startTimestamp": 1473935898089,
  "executionTime": 120
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestControllerTests",
   "displayName": "org.elasticsearch.rest.RestControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestControllerTests",
   "children": [
    {
     "id": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterWithDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterAsDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testCanTripCircuitBreaker",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testApplyRelevantHeaders",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935898294
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1473935898391,
  "executionTime": 204
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1473935898595,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1473935898600,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1473935898625,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestControllerTests",
  "startTimestamp": 1473935898294,
  "executionTime": 336
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testParseEnd",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935898654
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,683][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Rh1iNtcORJyC-okcbm23Zw}{local}{local[153]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,693][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,693][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,719][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,720][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,720][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,723][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,723][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,723][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,740][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,740][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,740][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,763][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,764][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,764][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,773][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,774][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,774][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:18,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [vEBR] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898676,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898784,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898800,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898808,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898812,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898859,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898895,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898898,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898924,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1473935898932,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
  "startTimestamp": 1473935898654,
  "executionTime": 287
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935898972
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1473935898998,
  "executionTime": 35
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1473935898972,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ByteUtilsTests",
   "displayName": "org.elasticsearch.common.util.ByteUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ByteUtilsTests",
   "children": [
    {
     "id": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testZigZag",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testVLong",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899064
 }
]

[
 "TEST_STARTED",
 "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1473935899080,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1473935899107,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1473935899135,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1473935899145,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ByteUtilsTests",
  "startTimestamp": 1473935899064,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.SuggestTests",
   "displayName": "org.elasticsearch.search.suggest.SuggestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.SuggestTests",
   "children": [
    {
     "id": "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
     "displayName": "testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
     "methodName": "testSuggestionOrdering",
     "className": "org.elasticsearch.search.suggest.SuggestTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)",
     "displayName": "testFilter(org.elasticsearch.search.suggest.SuggestTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.search.suggest.SuggestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899197
 }
]

[
 "TEST_STARTED",
 "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
  "startTimestamp": 1473935899220,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)",
  "startTimestamp": 1473935899228,
  "executionTime": 76
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.SuggestTests",
  "startTimestamp": 1473935899197,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.FieldSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.FieldSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
   "children": [
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899447
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1473935899498,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1473935899580,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1473935899585,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1473935899657,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1473935899675,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.FieldSortBuilderTests",
  "startTimestamp": 1473935899447,
  "executionTime": 239
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "displayName": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "children": [
    {
     "id": "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testAggsParsing",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEmptyQuery",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testTimeoutWithUnits",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEmptyPostFilter",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testTimeoutWithoutUnits",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseIncludeExclude",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseRescore",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testSearchRequestBuilderSerializationWithIndexBoost",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseSort",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899693
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:19,760][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aMpL1ntgTGKD7HTd2xWDjA}{local}{local[154]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899808,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:19,828][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:13]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899826,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899829,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:19,833][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:19]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899831,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899834,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899837,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899839,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935899914,
  "executionTime": 521
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935900435,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935900447,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935900453,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1473935900456,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.builder.SearchSourceBuilderTests",
  "startTimestamp": 1473935899693,
  "executionTime": 771
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.OperatorTests",
   "displayName": "org.elasticsearch.index.query.OperatorTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.OperatorTests",
   "children": [
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToBooleanClauseOccur",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToQueryParserOperator",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935900501
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1473935900523,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1473935900525,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1473935900527,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1473935900529,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1473935900531,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1473935900535,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.OperatorTests",
  "startTimestamp": 1473935900501,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "children": [
    {
     "id": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleCorruptedIndexOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testWaitForClusterStateOnPrimaryRelocation",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleExceptinoOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935900726
 }
]

[
 "TEST_STARTED",
 "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:21,277][INFO ][test                     ] Corrupting file --  flipping at position 164 from 73 to 74 file: _0.fnm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:21,304][INFO ][test                     ] Checksum before: [779119919] after: [2066989695] checksum value after corruption: 779119919] file: _0.fnm length: 242%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:21,442][WARN ][org.elasticsearch.indices.recovery]  [index][1] 1 Corrupted file detected name [_0.fnm], length [242], checksum [cvv8rz], writtenBy [6.2.0] checksum mismatch%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1473935900756,
  "executionTime": 694
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1473935901453,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1473935901593,
  "executionTime": 495
 }
]

[
 "TEST_STARTED",
 "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1473935902088,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 12:38:22,285 TEST-RecoverySourceHandlerTests.testHandleExceptinoOnSendSendFiles-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.indices.recovery.RecoverySourceHandler.sendFiles(RecoverySourceHandler.java:564)%0D%0A%09at org.elasticsearch.indices.recovery.RecoverySourceHandlerTests.testHandleExceptinoOnSendSendFiles(RecoverySourceHandlerTests.java:235)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1473935902095,
  "executionTime": 214
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
  "startTimestamp": 1473935900726,
  "executionTime": 1618
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "children": [
    {
     "id": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldIndexMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testIndexAndAliasWithSameName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldClusterMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testXContentWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testSerializationWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testMetaDataGlobalStateChangesOnIndexDeletions",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testResolveIndexRouting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935902368
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902380,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902384,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902386,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902412,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902414,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1473935902416,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
  "startTimestamp": 1473935902368,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "children": [
    {
     "id": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "displayName": "testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "methodName": "testBackupIsAllocatedAfterPrimary",
     "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935902499
 }
]

[
 "TEST_STARTED",
 "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:22,525][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:22,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:22,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the primary shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
  "startTimestamp": 1473935902520,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
  "startTimestamp": 1473935902499,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextMixed",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextGeoPoint",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextBasic",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObject",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935902565
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,820][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,847][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,847][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,851][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,853][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,853][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,977][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,977][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,978][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,988][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{c4vxGvx6SUib_TW7JzaOOw}{e_nE1Cm7R2yhK1tijYCinA}{local}{local[28]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:22,989][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,052][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,343][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935902645,
  "executionTime": 724
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,447][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903369,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,466][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,547][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,572][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903449,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,641][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903634,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,666][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextGeoPoint]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903657,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,671][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903668,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,856][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903673,
  "executionTime": 239
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,919][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903912,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,999][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,024][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1473935903920,
  "executionTime": 153
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,073][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,074][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,074][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,076][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
  "startTimestamp": 1473935902565,
  "executionTime": 1517
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.all.SimpleAllTests",
   "displayName": "org.elasticsearch.common.lucene.all.SimpleAllTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
   "children": [
    {
     "id": "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testMultipleTokensAllNoBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testTermMissingFromOneSegment",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testMultipleTokensAllWithBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testSimpleAllWithBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testNoTokens",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testSimpleAllNoBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935904130
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1473935904307,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1473935904371,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1473935904442,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1473935904455,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1473935904501,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1473935904511,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.all.SimpleAllTests",
  "startTimestamp": 1473935904130,
  "executionTime": 396
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "children": [
    {
     "id": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocationsNoLimit",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocations",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testAddNodesAndIndices",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935904645
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,748][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,753][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,753][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,756][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,758][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][1], [test0][2], [test0][0], [test2][1], [test2][2], [test2][0], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1473935904737,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,870][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,870][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,878][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,879][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,993][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:24,993][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1473935904845,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,007][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,009][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,021][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,021][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,047][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,051][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,064][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,068][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,069][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,069][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,118][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,119][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,126][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,127][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,152][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,154][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,156][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,156][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,158][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,159][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,164][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1473935904998,
  "executionTime": 171
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
  "startTimestamp": 1473935904645,
  "executionTime": 526
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "children": [
    {
     "id": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testPatternCaptureTokenFilter",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testNoPatterns",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935905200
 }
]

[
 "TEST_STARTED",
 "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1473935905243,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1473935905430,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
  "startTimestamp": 1473935905200,
  "executionTime": 240
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "children": [
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935905490
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,538][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,591][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,591][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,597][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,600][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,600][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,784][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,785][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,786][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,794][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{b0ucl1gPT1ytuehnZ7W2Dw}{bk5GEAodQLKYk4v2oXEzpA}{local}{local[29]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,795][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,814][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:25,843][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,301][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935905523,
  "executionTime": 841
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,379][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,615][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,721][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935906364,
  "executionTime": 397
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,770][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:26,836][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:27,910][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935906762,
  "executionTime": 1314
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:28,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:28,446][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:28,492][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935908076,
  "executionTime": 450
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:28,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:28,675][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,017][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935908526,
  "executionTime": 540
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,160][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,231][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935909067,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,303][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,518][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,537][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "message": "Only test on non geo_point fields",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:CA97351E122B0BB1]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeFalse(RandomizedTest.java:635)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeFalse(LuceneTestCase.java:849)\r\n\tat org.elasticsearch.index.fielddata.AbstractGeoFieldDataTestCase.testSortMultiValuesFields(AbstractGeoFieldDataTestCase.java:88)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935909295,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,720][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,738][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1473935909599,
  "executionTime": 212
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,811][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,812][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,812][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:29,814][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
  "startTimestamp": 1473935905490,
  "executionTime": 4336
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "displayName": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "children": [
    {
     "id": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testRunnableRunsAtMostOnceAfterCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnNonSchedulerThreadAllowed",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testOnRejectionCausesCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testThatRunnableIsRescheduled",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testDoesNotRescheduleUntilExecutionFinished",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnSchedulerThreadFails",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testCancellingRunnable",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935909873
 }
]

[
 "TEST_STARTED",
 "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935909916,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935909960,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935909989,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:30,019][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1609/344442491@60ee53d0] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1650(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:30,052][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1609/344442491@60ee53d0] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1650(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:30,071][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1609/344442491@60ee53d0] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1650(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:30,091][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1609/344442491@60ee53d0] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1650(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935909996,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935910096,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935910133,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1473935910153,
  "executionTime": 103
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
  "startTimestamp": 1473935909873,
  "executionTime": 385
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "children": [
    {
     "id": "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testSizeShrinkIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testShardSizeAndRelocatingSize",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testCanRemainUsesLeastAvailableSpace",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testCanAllocateUsesMaxAvailableSpace",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910328
 }
]

[
 "TEST_STARTED",
 "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1473935910371,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1473935910380,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:30,392][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1473935910388,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1473935910400,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
  "startTimestamp": 1473935910328,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "children": [
    {
     "id": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testStarMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdOrNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testTagAndGroupMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatching",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910446
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910469,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910472,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910474,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910477,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910479,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910481,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910484,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910486,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910498,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910503,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910505,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910507,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1473935910510,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
  "startTimestamp": 1473935910446,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "displayName": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "children": [
    {
     "id": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testWrappedReaderMustDelegateCoreCacheKey",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testReaderCloseListenerIsCalled",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testNoWrap",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testIsCacheable",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910649
 }
]

[
 "TEST_STARTED",
 "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1473935910703,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1473935910848,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1473935910885,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1473935910892,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
  "startTimestamp": 1473935910649,
  "executionTime": 255
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.ConfigurationUtilsTests",
   "displayName": "org.elasticsearch.ingest.ConfigurationUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
   "children": [
    {
     "id": "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadStringProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testOptional_InvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadProcessors",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadStringPropertyInvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadNullBooleanProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadBooleanProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadBooleanPropertyInvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910965
 }
]

[
 "TEST_STARTED",
 "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911017,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911022,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911024,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911038,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911044,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911047,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1473935911049,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.ConfigurationUtilsTests",
  "startTimestamp": 1473935910965,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "children": [
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDotsConflict",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDeepDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935911070
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,135][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,171][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,171][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,175][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,178][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,178][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,383][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,383][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,388][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,397][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iTJt-j94QtegXlOATi1vGA}{yR_VKubZQUOTYBoLAG03Eg}{local}{local[30]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,398][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,413][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,444][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,637][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,659][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1473935911122,
  "executionTime": 622
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,883][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:31,914][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDotsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1473935911744,
  "executionTime": 295
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,129][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,249][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1473935912039,
  "executionTime": 274
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,331][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,427][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDeepDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1473935912313,
  "executionTime": 159
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,472][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,476][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,476][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:32,480][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
  "startTimestamp": 1473935911070,
  "executionTime": 1425
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsUpdateValidator",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935912804
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,001][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [836503639ms] to [1534060511ms]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935912997,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,007][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.foo.bar] from [0] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,007][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.foo.bar] from [42] to [43]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913002,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913008,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:38:33,069 TEST-IndexSettingsTests.testSettingsUpdateValidator-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.applySettings(AbstractScopedSettings.java:160)%0D%0A%09at org.elasticsearch.index.IndexSettings.updateIndexMetaData(IndexSettings.java:424)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.lambda$testSettingsUpdateValidator$515(IndexSettingsTests.java:86)%0D%0A%09at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2677)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.testSettingsUpdateValidator(IndexSettingsTests.java:86)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:38:33,074 TEST-IndexSettingsTests.testSettingsUpdateValidator-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.applySettings(AbstractScopedSettings.java:169)%0D%0A%09at org.elasticsearch.index.IndexSettings.updateIndexMetaData(IndexSettings.java:424)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.lambda$testSettingsUpdateValidator$515(IndexSettingsTests.java:86)%0D%0A%09at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2677)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.testSettingsUpdateValidator(IndexSettingsTests.java:86)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,077][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.test.setting.int] from [-1] to [41]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913013,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,081][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.ttl.disable_purge] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,081][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.ttl.disable_purge] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913078,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,086][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_result_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,086][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_rescore_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,086][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_result_window] from [42] to [10000]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,086][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_rescore_window] from [42] to [10000]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913082,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,091][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [1.7gb] to [985.5mb]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913088,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,094][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.warmer.enabled] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913092,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,146][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [async] to [request]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913096,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:38:33,152 TEST-IndexSettingsTests.testArchiveBrokenIndexSettings-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.archiveUnknownOrBrokenSettings(AbstractScopedSettings.java:525)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.testArchiveBrokenIndexSettings(IndexSettingsTests.java:355)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,156][WARN ][org.elasticsearch.common.settings] [node_s_0] found unknown setting: index.unknown value: foo - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913148,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,160][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913156,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,165][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1014042856ms] to [1665937687ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,165][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1665937687ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913161,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,264][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:33,264][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.not.updated] from [] to [boom]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1473935913166,
  "executionTime": 98
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1473935912804,
  "executionTime": 464
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "displayName": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "children": [
    {
     "id": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testRetrieveSnapshots",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testReadAndWriteSnapshotsThroughIndexFile",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testIndexGenerationalFiles",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935913396
 }
]

[
 "TEST_STARTED",
 "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:33,768][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:33,794][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:33,795][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:33,798][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:33,801][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:33,801][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,143][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,144][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,144][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,230][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{FhIZxodwRKamNvBpYKsVZw}{fC1EkvC5Q-mlFSpf2dnA6Q}{local}{local[31]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,231][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,273][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,319][INFO ][org.elasticsearch.repositories.blobstore] -->  creating repository%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,656][INFO ][org.elasticsearch.repositories] [node_s_0] put repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,845][INFO ][org.elasticsearch.repositories.blobstore] --> creating an index and indexing documents%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:34,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:35,054][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:35,095][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx/4GtBP2DzRkmZKdFCTnBt7w] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:36,314][INFO ][org.elasticsearch.repositories.blobstore] --> create first snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,231][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-1/Um-agV3nRTSC46-M-yYlkA] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,296][INFO ][org.elasticsearch.repositories.blobstore] --> create second snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,455][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-2/FIAVlXvkTH-kL2q3Y1sxLg] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,487][INFO ][org.elasticsearch.repositories.blobstore] --> make sure the node's repository can resolve the snapshots%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,489][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testRetrieveSnapshots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1473935913756,
  "executionTime": 3774
 }
]

[
 "TEST_STARTED",
 "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,538][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,673][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testReadAndWriteSnapshotsThroughIndexFile]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1473935917530,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,687][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,818][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testIndexGenerationalFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1473935917674,
  "executionTime": 145
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,819][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,822][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,826][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:37,828][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
  "startTimestamp": 1473935913396,
  "executionTime": 4483
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testInvalidConstructorArgs",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935917953
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1473935918002,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1473935918005,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1473935918013,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1473935918052,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.LineStringBuilderTests",
  "startTimestamp": 1473935917953,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptModesTests",
   "displayName": "org.elasticsearch.script.ScriptModesTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptModesTests",
   "children": [
    {
     "id": "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testConflictingScriptTypeAndOpGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testScriptTypeGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testMissingSetting",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testScriptContextGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935918121
 }
]

[
 "TEST_STARTED",
 "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1473935918280,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1473935918325,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1473935918328,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1473935918332,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1473935918337,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptModesTests",
  "startTimestamp": 1473935918121,
  "executionTime": 263
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
   "displayName": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    },
    {
     "id": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testRecoverySourceTypeOrder",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935918443
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1473935918544,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1473935918549,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
  "startTimestamp": 1473935918443,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
   "displayName": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testInternalScrollSearchRequestSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935918582
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1473935918604,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1473935918607,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1473935918610,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
  "startTimestamp": 1473935918582,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935918695
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,748][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,775][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,775][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,779][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,782][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,782][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,936][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,937][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,937][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,938][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xGnbSQJ8Rh2IS-D4Q2otDg}{EJJPJT2GSUuGD9nwcFzkng}{local}{local[32]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,939][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:38,957][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,062][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,078][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1473935918738,
  "executionTime": 365
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,112][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,200][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,252][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,686][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TokenCountFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1473935919103,
  "executionTime": 767
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,875][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1473935919870,
  "executionTime": 6
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,876][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,877][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,877][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:39,880][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
  "startTimestamp": 1473935918695,
  "executionTime": 1192
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testIllegalXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935919959
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1473935920014,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1473935920035,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1473935920039,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1473935920085,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
  "startTimestamp": 1473935919959,
  "executionTime": 136
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testBuildRescoreSearchContext",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testUnknownFieldsExpection",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testRescoreQueryNull",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935920102
 }
]

[
 "TEST_STARTED",
 "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1473935920135,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1473935920273,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1473935920282,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1473935920286,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1473935920289,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1473935920387,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1473935920102,
  "executionTime": 292
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935920465
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:40,486][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6qax93t4Rbu4kRPnr-FsGQ}{local}{local[196]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1473935920497,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1473935920631,
  "executionTime": 278
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1473935920909,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
  "startTimestamp": 1473935920465,
  "executionTime": 450
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "children": [
    {
     "id": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
     "displayName": "testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
     "methodName": "testSingleIndexFirstStartPrimaryThenBackups",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935920978
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,030][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,031][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,032][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary shards not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,032][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,033][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,033][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,034][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Kill node1, backup shard should become primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,034][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:38:41,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start another node, backup shard should start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
  "startTimestamp": 1473935921022,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
  "startTimestamp": 1473935920978,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "children": [
    {
     "id": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testTurkish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testStopwords",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testEnglish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935921084
 }
]

[
 "TEST_STARTED",
 "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1473935921133,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1473935921151,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1473935921163,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1473935921168,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
  "startTimestamp": 1473935921084,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWhileShardFetching",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWithIgnoredUnassignedShards",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testAlways",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive3",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935921349
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,372][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,375][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921364,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,395][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,398][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921377,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,407][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,409][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,409][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,410][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921399,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,418][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,419][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,419][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921410,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,431][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,432][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen (for test1) because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921420,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,455][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,456][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,456][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,457][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921435,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,469][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,471][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,471][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,472][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,472][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921461,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,481][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,487][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test2 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,488][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:41,489][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1473935921473,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
  "startTimestamp": 1473935921349,
  "executionTime": 147
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "children": [
    {
     "id": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "displayName": "testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "methodName": "testRestRecoveryAction",
     "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935921546
 }
]

[
 "TEST_STARTED",
 "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
  "startTimestamp": 1473935921576,
  "executionTime": 572
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
  "startTimestamp": 1473935921546,
  "executionTime": 605
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922265
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:42,621][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5CsIFvKYRNmd5Gv6DkWKNA}{local}{local[222]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1473935922634,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1473935922643,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1473935922647,
  "executionTime": 3
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:38:42 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 1 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
  "startTimestamp": 1473935922265,
  "executionTime": 686
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "children": [
    {
     "id": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "displayName": "testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "methodName": "testNeedsScores",
     "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922990
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,026][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,054][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,054][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,057][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,060][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,060][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,260][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,261][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,261][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,263][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UNIYOJA3QtSzzHwXxPusdA}{mXnf0ZNUSf-5uvEjA1rnjg}{local}{local[33]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,264][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,280][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,369][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,574][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:43,605][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx/jmrcjdSXTnms85zlrabt1g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:45,354][INFO ][org.elasticsearch.search.aggregations] [AggregationCollectorTests#testNeedsScores]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
  "startTimestamp": 1473935923014,
  "executionTime": 2423
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:45,449][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:45,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:45,463][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:45,475][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
  "startTimestamp": 1473935922990,
  "executionTime": 2499
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMultipleFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFilterElement",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testNoArrayAsFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935925520
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,557][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BeRCBrT9REKhsJWr-7HMXA}{local}{local[223]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,566][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,567][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,584][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,584][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,584][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,586][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,586][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,586][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,590][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,590][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,590][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,592][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,592][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,592][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,600][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,600][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,600][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,604][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,605][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:45,605][WARN ][org.elasticsearch.deprecation.index.mapper]  [pCQGBuTBN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925547,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925607,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925674,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "message": "test doesn't apply for query filter queries",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:E9FD172FCDA8348C]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.ConstantScoreQueryBuilderTests.testUnknownField(ConstantScoreQueryBuilderTests.java:98)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925677,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925680,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925837,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925841,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925847,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925851,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935925903,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935926018,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935926021,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:46,037][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:46,037][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935926034,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1473935926041,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
  "startTimestamp": 1473935925520,
  "executionTime": 533
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolTests",
   "children": [
    {
     "id": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBetweenMinAndMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBelowMin",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByAboveMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935926089
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1473935926107,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1473935926109,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1473935926111,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
  "startTimestamp": 1473935926089,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935926146
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,192][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,240][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,241][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,245][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,248][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,248][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,464][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,465][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,465][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,506][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wqwUfK-xTUmFcakR1BnWFg}{44vAU241QjGBjxSQWeTHRQ}{local}{local[34]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,507][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,568][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,690][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,708][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testMergingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935926182,
  "executionTime": 559
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,752][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,869][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935926741,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,902][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:46,970][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testInjectIntoDocDuringParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935926895,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,007][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,053][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,147][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testSeesFieldsFromPlugins]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935926999,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,244][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,259][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935927175,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,303][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,356][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,371][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExplicitEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935927295,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,411][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExtractFieldNames]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1473935927408,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,413][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,413][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,414][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:47,417][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
  "startTimestamp": 1473935926146,
  "executionTime": 1278
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "children": [
    {
     "id": "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testTrigram",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    },
    {
     "id": "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testNgram",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    },
    {
     "id": "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testMultiGenerator",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935927492
 }
]

[
 "TEST_STARTED",
 "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1473935927510,
  "executionTime": 1391
 }
]

[
 "TEST_STARTED",
 "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1473935928901,
  "executionTime": 275
 }
]

[
 "TEST_STARTED",
 "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1473935929176,
  "executionTime": 114
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
  "startTimestamp": 1473935927492,
  "executionTime": 1800
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "children": [
    {
     "id": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testDifferentInnerObjectTokenFailure",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsArrayMultiFieldsShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldPropertiesArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyArrayProperties",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsWithFilledArrayShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArrayMultiFields",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935929323
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,371][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,398][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,398][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,402][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,405][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,405][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,650][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,650][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,651][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,683][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HJbshuGzSOiHe8VQrPexPw}{b9f0YHRjQRmp8uz6V1qHQQ}{local}{local[35]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,684][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,717][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,746][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,847][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,862][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testDifferentInnerObjectTokenFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935929360,
  "executionTime": 556
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:49,931][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,030][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935929916,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,161][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935930063,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,251][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,328][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,354][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsArrayMultiFieldsShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935930243,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,422][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,514][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,549][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldPropertiesArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935930415,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,603][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:50,920][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,085][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,100][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [ObjectMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935930595,
  "executionTime": 867
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,470][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,883][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,897][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyArrayProperties]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935931463,
  "executionTime": 463
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:51,934][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,059][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,072][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsWithFilledArrayShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935931926,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,109][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,271][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArrayMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1473935932102,
  "executionTime": 200
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,302][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,303][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,303][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:52,306][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
  "startTimestamp": 1473935929323,
  "executionTime": 2994
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935932349
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1473935932368,
  "executionTime": 59
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1473935932349,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "children": [
    {
     "id": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded4",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded6",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnassignedShardsWithUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded5",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935932512
 }
]

[
 "TEST_STARTED",
 "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,535][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,542][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,552][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,554][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,554][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> all replicas are allocated and started since we have on node in each zone%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,554][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node in zone 'a' and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,555][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> starting initializing shards on the new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932527,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,565][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded4'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,565][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,566][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,567][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,568][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][3], [test2][1], [test1][2], [test1][4], [test1][0], [test2][4], [test2][2], [test2][0], [test1][1], [test1][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,568][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,570][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,570][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,574][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,575][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,579][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932557,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,588][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,588][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,590][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,591][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,593][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,594][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][3], [test2][4], [test2][1], [test2][2], [test2][0], [test1][2], [test1][4], [test1][1], [test1][3], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,594][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,594][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,595][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,596][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,597][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932580,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,605][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded6'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,605][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,606][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,607][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,607][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0], [test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,607][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,608][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,609][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,609][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,609][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,610][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932598,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,622][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnassignedShardsWithUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 5 nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shard (primary)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932610,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,640][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,640][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,640][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,641][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,641][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,642][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932630,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,650][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,650][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,652][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,652][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,652][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,652][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,652][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,653][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932642,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,661][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,661][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,662][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932653,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,672][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Initializing shards: [[test][4], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=-kikeNJKQRSy5qT4ZeYI_A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][2], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=JGjGHOX2QOCV1elcaIkhBg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=rQEH54uHTK6yNiWW8wgBdQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][3], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=fAMQ3cY_THqSvgXC_R8j1w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][1], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=b-neZ0RmTjm0ZyFHNklBwQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Started shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Relocating shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Unassigned shards: [[test][3], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][4], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]], [test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:38:52.671Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,674][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,675][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,678][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932664,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded5'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,688][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932679,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,695][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,697][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:52,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1473935932689,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
  "startTimestamp": 1473935932512,
  "executionTime": 187
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.DeviceStatsTests",
   "displayName": "org.elasticsearch.monitor.fs.DeviceStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.DeviceStatsTests",
   "children": [
    {
     "id": "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
     "displayName": "testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
     "methodName": "testDeviceStats",
     "className": "org.elasticsearch.monitor.fs.DeviceStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935932726
 }
]

[
 "TEST_STARTED",
 "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
  "startTimestamp": 1473935932743,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.DeviceStatsTests",
  "startTimestamp": 1473935932726,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "children": [
    {
     "id": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testDefaultParsing",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935932784
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:52,822][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uyBPPD-RRvK9bTS269g56g}{local}{local[273]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1473935932835,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1473935932841,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:52,955][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\",%0A      \"model\" : \"holt\",%0A      \"settings\" : {%0A        \"alpha\" : 0.374186630289136,%0A        \"beta\" : 0.7436705597307821%0A      },%0A      \"window\" : 33,%0A      \"predict\" : 7%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:52,955][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\",%0A      \"model\" : \"holt\",%0A      \"settings\" : {%0A        \"alpha\" : 0.374186630289136,%0A        \"beta\" : 0.7436705597307821%0A      },%0A      \"window\" : 33,%0A      \"predict\" : 7%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1473935932844,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1473935932956,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
  "startTimestamp": 1473935932784,
  "executionTime": 178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testAnalyzerBackCompat",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testCoerceOption",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testTermVectorsBackCompat",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testBwCompatIndex",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testUnIndex",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testIgnoreFielddata",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepDefaultsMapped",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testDocValuesOnNested",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepDefaultsDetected",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepExplicit",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935933050
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,290][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,348][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,348][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,352][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,358][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,358][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,584][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,585][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,585][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,587][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{o94la8Z8SXeOY_8wqaZtMw}{RJd8EqqbTNytLNb6xdvrMw}{local}{local[36]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,588][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,599][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,616][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,665][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,751][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:53,807][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,055][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,123][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,251][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,283][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,441][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,458][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,534][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,552][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,752][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,832][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:54,923][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:55,064][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:55,297][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:55,377][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:55,709][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:55,727][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,330][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,345][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2-double] [LegacyNumberFieldMapperTests#testAnalyzerBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935933280,
  "executionTime": 3314
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,603][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,782][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testCoerceOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935936594,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,816][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,879][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:56,952][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,039][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,086][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,103][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,176][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,246][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,268][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,313][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,332][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,379][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,470][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,521][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,542][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,600][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,632][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,711][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2-double] [LegacyNumberFieldMapperTests#testTermVectorsBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935936809,
  "executionTime": 1111
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,927][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,984][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,984][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:57,985][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testBwCompatIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935937920,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,021][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,069][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,083][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testUnIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935938013,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,113][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,196][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,214][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,275][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,327][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,347][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,503][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,523][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,574][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,593][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [LegacyNumberFieldMapperTests#testIgnoreFielddata]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935938108,
  "executionTime": 591
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,706][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,807][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,853][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,866][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyNumberFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935938699,
  "executionTime": 220
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,927][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,004][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepDefaultsMapped]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935938920,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,051][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,118][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,204][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testDocValuesOnNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935939043,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,304][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,317][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,318][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,319][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935939235,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,361][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,416][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,431][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepDefaultsDetected]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935939352,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,471][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,521][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,535][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepExplicit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1473935939462,
  "executionTime": 100
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,563][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,563][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,563][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,565][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
  "startTimestamp": 1473935933050,
  "executionTime": 6527
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "children": [
    {
     "id": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicNestedObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToInnerStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToNestedField",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldMerge",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935939653
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,684][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,710][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,710][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,713][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,716][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,716][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,893][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,894][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,894][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,904][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{pI_aUSVRRtS_lP99fcV-yw}{UDCICJPZTDSGYOQiTwl_3Q}{local}{local[37]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,905][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,921][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,944][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:59,998][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,113][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935939676,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,170][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,303][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,361][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940144,
  "executionTime": 254
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,405][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,460][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,484][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicNestedObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940399,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,520][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,563][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,579][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToInnerStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940514,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,617][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,680][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/4p5CcCZZR6u06wYLYcqdhw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,695][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/4p5CcCZZR6u06wYLYcqdhw] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,706][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940610,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,734][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,784][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940730,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,821][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,868][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,885][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940813,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,922][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:00,998][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToNestedField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935940916,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,036][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,085][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,102][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1473935941029,
  "executionTime": 103
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,132][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,133][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,133][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:01,135][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
  "startTimestamp": 1473935939653,
  "executionTime": 1493
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "children": [
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935941183
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1473935941599,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1473935941602,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1473935941605,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1473935941607,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1473935941609,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
  "startTimestamp": 1473935941183,
  "executionTime": 432
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935941671
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:01,714][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zxuxCv4aT2S9_31Fax6JaA}{local}{local[274]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1473935941759,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1473935941791,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1473935941800,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
  "startTimestamp": 1473935941671,
  "executionTime": 155
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "children": [
    {
     "id": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testRoutingTableSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935941865
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1473935942041,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1473935942052,
  "executionTime": 28
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
  "startTimestamp": 1473935941865,
  "executionTime": 218
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
   "displayName": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "children": [
    {
     "id": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationConflictingPatternsFirstWins",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsWithWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDefaultAutoCreation",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailedMissingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testExistingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultipleIndexNames",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailed",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsNoWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDynamicMappingDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935942158
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942226,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942230,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942234,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942238,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942242,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942276,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942281,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942285,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942289,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:02,296][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [action.auto_create_index] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:02,299][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [action.auto_create_index] from [true] to [logs-*]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942292,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942299,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942303,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942307,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1473935942335,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
  "startTimestamp": 1473935942158,
  "executionTime": 182
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.DocWriteResponseTests",
   "displayName": "org.elasticsearch.action.DocWriteResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.DocWriteResponseTests",
   "children": [
    {
     "id": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testToXContentDoesntIncludeForcedRefreshUnlessForced",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    },
    {
     "id": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testGetLocation",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935942449
 }
]

[
 "TEST_STARTED",
 "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1473935942533,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1473935942536,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.DocWriteResponseTests",
  "startTimestamp": 1473935942449,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935942575
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,607][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,635][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,635][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,639][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,642][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,642][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,770][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,770][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,770][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,776][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{LChEVGZeSIOWdXoL5iYv_A}{4RL_6dBqQr6Js8hzDaRMPw}{local}{local[38]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,776][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,803][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,822][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,870][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,905][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1473935942598,
  "executionTime": 341
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:02,946][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:03,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:03,029][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1473935942939,
  "executionTime": 175
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:03,118][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:03,119][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:03,119][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:09:03,123][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
  "startTimestamp": 1473935942575,
  "executionTime": 556
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "children": [
    {
     "id": "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testThrottleIncomingAndOutgoing",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testReplicaAndPrimaryRecoveryThrottling",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testPrimaryRecoveryThrottling",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testOutgoingThrottlesAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943287
 }
]

[
 "TEST_STARTED",
 "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,383][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 5 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,388][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,389][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][8], [test][5], [test][6], [test][7]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,389][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another 2 nodes, 5 shards should be relocating - at most 5 are allowed per node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,391][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the relocating shards, one more shard should relocate away from node1%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1473935943375,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 2 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,407][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replicas should start being allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,409][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing replicas, all should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,409][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][4]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1473935943391,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,418][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,418][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,421][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 1 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1473935943410,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,430][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,434][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 1 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,434][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,435][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node, first non-primary should start being allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,435][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing non-primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,435][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node, initializing second non-primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,435][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:03,436][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move started non-primary to new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1473935943423,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
  "startTimestamp": 1473935943287,
  "executionTime": 152
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "displayName": "testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "methodName": "testDedup",
     "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943464
 }
]

[
 "TEST_STARTED",
 "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
  "startTimestamp": 1473935943483,
  "executionTime": 3874
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
  "startTimestamp": 1473935943464,
  "executionTime": 3896
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "children": [
    {
     "id": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingBytes",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingOrds",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingGeoPoints",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingLongs",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingDoubles",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935947431
 }
]

[
 "TEST_STARTED",
 "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1473935947464,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1473935947596,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1473935947599,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1473935947602,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1473935947604,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
  "startTimestamp": 1473935947431,
  "executionTime": 178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935947641
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
  "startTimestamp": 1473935947709,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
  "startTimestamp": 1473935947641,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "children": [
    {
     "id": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testAccuracy",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testPrecisionFromThreshold",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testFakeHashes",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testEncodeDecode",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935947754
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1473935947780,
  "executionTime": 585
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1473935948365,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1473935948368,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1473935948371,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1473935948481,
  "executionTime": 221
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
  "startTimestamp": 1473935947754,
  "executionTime": 950
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935948712
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1473935948751,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1473935948754,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1473935948764,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
  "startTimestamp": 1473935948712,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "children": [
    {
     "id": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testToFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testInvalidFieldsInFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testGetPartSize",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935948795
 }
]

[
 "TEST_STARTED",
 "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1473935948814,
  "executionTime": 577
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1473935949391,
  "executionTime": 453
 }
]

[
 "TEST_STARTED",
 "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1473935949845,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
  "startTimestamp": 1473935948795,
  "executionTime": 1054
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935949881
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:09,918][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:09,941][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:09,941][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:09,945][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:09,948][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:09,948][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,129][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,129][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,130][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,131][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{x51wC-jkTxKqtp5DGsAvIA}{JjWQazyZTcmfg20HoklISw}{local}{local[39]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,132][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,144][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,174][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,246][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,275][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/DeyOlFQxSwezU9DxT85_Gw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,773][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473935949909,
  "executionTime": 903
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,813][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,813][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,814][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:10,815][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1473935949881,
  "executionTime": 946
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "children": [
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testTransportRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testParseAndValidate",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935950899
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1473935950915,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1473935951014,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1473935951016,
  "executionTime": 129
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
  "startTimestamp": 1473935950899,
  "executionTime": 248
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "children": [
    {
     "id": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testInitializingHasExpectedSize",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testExpectedSizeOnMove",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935951204
 }
]

[
 "TEST_STARTED",
 "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,319][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,322][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1473935951218,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,346][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,346][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,346][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:11,347][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1473935951323,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
  "startTimestamp": 1473935951204,
  "executionTime": 145
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "displayName": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "children": [
    {
     "id": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterPrefixQuery",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoTermVector",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoStore",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighter",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935951418
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1473935951435,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1473935951663,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1473935951668,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1473935951673,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
  "startTimestamp": 1473935951418,
  "executionTime": 269
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935951726
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,757][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,778][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,778][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,781][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,784][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,784][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,947][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,948][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,948][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,963][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{fQaJ60ZDTBKRdhKT6IOYWQ}{vTUkdqWGR_WFO2T7u0ve7A}{local}{local[40]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:11,964][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,085][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,111][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,434][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,452][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/nGdTpEFhSiq62wngl6rIdw] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,474][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/nGdTpEFhSiq62wngl6rIdw] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,530][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GenericStoreDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
  "startTimestamp": 1473935951747,
  "executionTime": 815
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,563][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,569][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,569][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:39:12,571][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
  "startTimestamp": 1473935951726,
  "executionTime": 852
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "children": [
    {
     "id": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDatelineOGC",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testMultiLineString",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithPointOnDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShape",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testComplexShapeWithHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithEdgeAlongDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithHoleAtEdgeEndPoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithBoundaryHoles",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinate",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithAlternateOrientation",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPoint",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonSelfIntersection",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testInvalidShapeWithConsecutiveDuplicatePoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewRectangle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringBuilder",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinates",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testGeoCircle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935952618
 }
]

[
 "TEST_STARTED",
 "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952706,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952789,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952792,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952796,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952801,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952804,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952808,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952812,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952816,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952819,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952840,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952845,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952847,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952851,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952853,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952856,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952858,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952873,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952875,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935952877,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935953005,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935953007,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935953012,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1473935953014,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
  "startTimestamp": 1473935952618,
  "executionTime": 407
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "displayName": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "children": [
    {
     "id": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testNoDelayedUnassigned",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935953100
 }
]

[
 "TEST_STARTED",
 "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,147][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,148][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1473935953120,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,161][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0], [bar][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,162][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [fake node left]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,196][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [29.9s] (1 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,248][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [39ms] (2 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1473935953149,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,262][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[short_delay][0], [long_delay][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,263][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,264][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [32.6ms] (2 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:13,300][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [813.6ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1473935953250,
  "executionTime": 865
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:14,123][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:14,124][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:39:14,125][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [81.9ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1473935954115,
  "executionTime": 94
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
  "startTimestamp": 1473935953100,
  "executionTime": 1112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.regex.RegexTests",
   "displayName": "org.elasticsearch.common.regex.RegexTests",
   "methodName": null,
   "className": "org.elasticsearch.common.regex.RegexTests",
   "children": [
    {
     "id": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testFlags(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testFlags",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testDoubleWildcardMatch",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954268
 }
]

[
 "TEST_STARTED",
 "ID#testFlags(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1473935954288,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1473935954339,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.regex.RegexTests",
  "startTimestamp": 1473935954268,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954397
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1473935954417,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1473935954418,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1473935954421,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1473935954423,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1473935954427,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1473935954429,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1473935954397,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsFilterTests",
   "displayName": "org.elasticsearch.common.settings.SettingsFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsFilterTests",
   "children": [
    {
     "id": "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
     "displayName": "testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
     "methodName": "testSettingsFiltering",
     "className": "org.elasticsearch.common.settings.SettingsFilterTests",
     "children": []
    },
    {
     "id": "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
     "displayName": "testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
     "methodName": "testAddingAndRemovingFilters",
     "className": "org.elasticsearch.common.settings.SettingsFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954468
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
  "startTimestamp": 1473935954495,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
  "startTimestamp": 1473935954501,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsFilterTests",
  "startTimestamp": 1473935954468,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "displayName": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "children": [
    {
     "id": "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
     "displayName": "testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
     "methodName": "testScriptScoresReturnsNaN",
     "className": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954536
 }
]

[
 "TEST_STARTED",
 "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
  "startTimestamp": 1473935954553,
  "executionTime": 140
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
  "startTimestamp": 1473935954536,
  "executionTime": 159
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "displayName": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "children": [
    {
     "id": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testPipelineFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testNoFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testBulkRequestModifier",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954725
 }
]

[
 "TEST_STARTED",
 "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1473935954740,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1473935954815,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1473935954823,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
  "startTimestamp": 1473935954725,
  "executionTime": 126
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954881
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:14,904][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wdqPZYf-TdOa8oGR3_2BEQ}{local}{local[310]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1473935954916,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1473935954919,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1473935954922,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
  "startTimestamp": 1473935954881,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "displayName": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "children": [
    {
     "id": "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
     "displayName": "testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
     "methodName": "testBytesAndNumericRepresentation",
     "className": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935954970
 }
]

[
 "TEST_STARTED",
 "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:14,994][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,021][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,021][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,025][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,028][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,028][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,181][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,181][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,182][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,186][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{5ednEU5SSIaoe_l2ECeHXA}{230opUuOR1KVsJ3Rz3a3Xg}{local}{local[41]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,187][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,201][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,223][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,290][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,329][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StoredNumericValuesTests#testBytesAndNumericRepresentation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
  "startTimestamp": 1473935954986,
  "executionTime": 381
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,367][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,369][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,369][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:15,371][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StoredNumericValuesTests",
  "startTimestamp": 1473935954970,
  "executionTime": 408
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
   "displayName": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "children": [
    {
     "id": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testIsHidden",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    },
    {
     "id": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testAppend",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935955422
 }
]

[
 "TEST_STARTED",
 "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1473935955462,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1473935955468,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
  "startTimestamp": 1473935955422,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "children": [
    {
     "id": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSigmaFromInt",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935955540
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:15,560][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UX97t-_sQDWXpBU_7ERteA}{local}{local[311]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1473935955571,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1473935955574,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:15,579][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"sigma\" : 4.3818552407979166%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:15,581][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"sigma\" : 4.3818552407979166%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1473935955577,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1473935955581,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
  "startTimestamp": 1473935955540,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "displayName": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "children": [
    {
     "id": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testTermVectorStringGenerationWithoutPositions",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRestRequestParsing",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParserFilter",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testFieldTypeToTermVectorString",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamRequest",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRequestParsingThrowsException",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParser",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935955629
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955650,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955731,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955733,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955774,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955815,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955817,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955820,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1473935955822,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
  "startTimestamp": 1473935955629,
  "executionTime": 227
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935955891
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1473935955908,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1473935955911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1473935955913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1473935955915,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1473935955917,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1473935955919,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
  "startTimestamp": 1473935955891,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.SpecialPermissionTests",
   "displayName": "org.elasticsearch.SpecialPermissionTests",
   "methodName": null,
   "className": "org.elasticsearch.SpecialPermissionTests",
   "children": [
    {
     "id": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testImplies(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testImplies",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testEquals(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935955973
 }
]

[
 "TEST_STARTED",
 "ID#testImplies(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1473935955987,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1473935955990,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.SpecialPermissionTests",
  "startTimestamp": 1473935955973,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "children": [
    {
     "id": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "displayName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "methodName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956042
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:16,066][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:16,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:16,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:16,068][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replica will start recovering form primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:16,069][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, make sure the primary is not relocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
  "startTimestamp": 1473935956058,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
  "startTimestamp": 1473935956042,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "displayName": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "children": [
    {
     "id": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "displayName": "testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "methodName": "testHumanReadableSettings",
     "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956123
 }
]

[
 "TEST_STARTED",
 "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
  "startTimestamp": 1473935956139,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
  "startTimestamp": 1473935956123,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956179
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1473935956196,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1473935956220,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1473935956233,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1473935956257,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1473935956179,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "children": [
    {
     "id": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRerouteAfterRemovingNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRemovingNonExistentNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testNotEnoughMasterNodesAfterRemove",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956473
 }
]

[
 "TEST_STARTED",
 "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935956494,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935956533,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935956542,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
  "startTimestamp": 1473935956473,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.TimeValueTests",
   "displayName": "org.elasticsearch.common.unit.TimeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.TimeValueTests",
   "children": [
    {
     "id": "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testParseTimeValue",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testNonFractionalTimeValues",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testSerialize",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testSimple(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFormat(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFormat",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testMinusOne",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testToString(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFractionalTimeValues",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testToStringRep",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFailOnMissingUnits",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFailOnUnknownUnits",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testNoDotsAllowed",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956567
 }
]

[
 "TEST_STARTED",
 "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956603,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956607,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956610,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956612,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956614,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956679,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956682,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956684,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956687,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956689,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956691,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956693,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1473935956696,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.TimeValueTests",
  "startTimestamp": 1473935956567,
  "executionTime": 133
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "children": [
    {
     "id": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "displayName": "testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "methodName": "testNestedChildrenFilter",
     "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956728
 }
]

[
 "TEST_STARTED",
 "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
  "startTimestamp": 1473935956745,
  "executionTime": 65
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
  "startTimestamp": 1473935956728,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "children": [
    {
     "id": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testSvValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testMvOrdinalsTrigger",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935956844
 }
]

[
 "TEST_STARTED",
 "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1473935956861,
  "executionTime": 267
 }
]

[
 "TEST_STARTED",
 "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1473935957128,
  "executionTime": 289
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
  "startTimestamp": 1473935956844,
  "executionTime": 575
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "children": [
    {
     "id": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testBytes",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testTB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testGB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testPB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testKB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testMB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935957456
 }
]

[
 "TEST_STARTED",
 "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1473935957472,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1473935957474,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1473935957476,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1473935957478,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1473935957479,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1473935957481,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
  "startTimestamp": 1473935957456,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "children": [
    {
     "id": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testSlowGcLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    },
    {
     "id": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testGcOverheadLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935957523
 }
]

[
 "TEST_STARTED",
 "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1473935957541,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1473935957727,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
  "startTimestamp": 1473935957523,
  "executionTime": 210
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "children": [
    {
     "id": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "displayName": "testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "methodName": "testSubAggCollectMode",
     "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935957772
 }
]

[
 "TEST_STARTED",
 "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,802][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,827][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,828][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,832][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,835][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,835][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,967][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,968][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,968][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,969][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{8Gfg2sFwQpGj3S32GQacgw}{2xJ_I0dXSUGA6-vmImd9eg}{local}{local[42]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,970][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:17,984][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:18,000][INFO ][org.elasticsearch.search.aggregations.bucket.terms] [TermsAggregatorFactoryTests#testSubAggCollectMode]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
  "startTimestamp": 1473935957788,
  "executionTime": 214
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:18,002][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:18,003][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:18,003][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:18,005][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
  "startTimestamp": 1473935957772,
  "executionTime": 240
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestServiceTests",
   "displayName": "org.elasticsearch.ingest.IngestServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestServiceTests",
   "children": [
    {
     "id": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPluginDuplicate",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    },
    {
     "id": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPlugin",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958043
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1473935958057,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1473935958089,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestServiceTests",
  "startTimestamp": 1473935958043,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineFactoryTests",
   "displayName": "org.elasticsearch.ingest.PipelineFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineFactoryTests",
   "children": [
    {
     "id": "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateUnusedProcessorOptions",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineIgnoreFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineEmptyOnFailureInProcessor",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithEmptyProcessorsField",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreate",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineEmptyOnFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testFlattenProcessors",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineOnFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithNoProcessorsField",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateProcessorsWithOnFailureProperties",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958122
 }
]

[
 "TEST_STARTED",
 "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958138,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958147,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958154,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958156,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958158,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958162,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958165,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958167,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958169,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1473935958171,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineFactoryTests",
  "startTimestamp": 1473935958122,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "displayName": "testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "methodName": "testFilterInitialAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958205
 }
]

[
 "TEST_STARTED",
 "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,227][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,228][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
  "startTimestamp": 1473935958220,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
  "startTimestamp": 1473935958205,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "displayName": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "children": [
    {
     "id": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownName",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownCategory",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testDuplicates",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958262
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1473935958280,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1473935958313,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1473935958315,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1473935958317,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1473935958320,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
  "startTimestamp": 1473935958262,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958384
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,414][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{f2rlwwJoS1ydemcpwozWzQ}{local}{local[342]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,423][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,423][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,443][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,443][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,445][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,445][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,445][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,449][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,449][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,449][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,450][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,451][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,451][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,457][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,457][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,457][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,463][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,463][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,463][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,480][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,480][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:18,480][WARN ][org.elasticsearch.deprecation.index.mapper]  [CRAlBAK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958406,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958483,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958490,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958494,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958497,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958500,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958518,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958522,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958539,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1473935958547,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
  "startTimestamp": 1473935958384,
  "executionTime": 170
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.FsDirectoryServiceTests",
   "displayName": "org.elasticsearch.index.store.FsDirectoryServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
   "children": [
    {
     "id": "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testPreload",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    },
    {
     "id": "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testHasSleepWrapperOnSharedFS",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    },
    {
     "id": "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testHasNoSleepWrapperOnNormalFS",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958585
 }
]

[
 "TEST_STARTED",
 "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1473935958606,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1473935958637,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1473935958649,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.FsDirectoryServiceTests",
  "startTimestamp": 1473935958585,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testMalformedJson",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testDefaultValuesSet",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958687
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1473935958759,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1473935958767,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1473935958771,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1473935958807,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1473935958818,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1473935958822,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
  "startTimestamp": 1473935958687,
  "executionTime": 139
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "children": [
    {
     "id": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testRoutingMapper",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935958868
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:18,914][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:18,948][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:18,948][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:18,952][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:18,955][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:18,955][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,125][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,125][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,126][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,129][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ui-g07peTcmEjYPpg76bag}{snWsU-wISm2qinNXnW6cgg}{local}{local[43]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,129][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,153][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,171][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,240][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,254][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testRoutingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1473935958905,
  "executionTime": 381
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,294][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,359][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1473935959286,
  "executionTime": 103
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,389][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,390][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,390][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:19,391][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
  "startTimestamp": 1473935958868,
  "executionTime": 530
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "children": [
    {
     "id": "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
     "displayName": "testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
     "methodName": "testGetIndexedScriptRequestSerialization",
     "className": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935959418
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
  "startTimestamp": 1473935959439,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
  "startTimestamp": 1473935959418,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
   "displayName": "org.elasticsearch.recovery.RecoverySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoverySettingsTests",
   "children": [
    {
     "id": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "displayName": "testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "methodName": "testAllSettingsAreDynamicallyUpdatable",
     "className": "org.elasticsearch.recovery.RecoverySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935959596
 }
]

[
 "TEST_STARTED",
 "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,622][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,647][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,647][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,651][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,654][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,654][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,811][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,812][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,812][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,824][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{A0yTEKZ4RsCbS69pFdkUYg}{-R25FC7GQgikf_NlJ_6ELw}{local}{local[44]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,825][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,840][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,878][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.max_bytes_per_sec] from [40mb] to [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,881][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_state_sync] from [500ms] to [30ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,883][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_network] from [5s] to [88ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,886][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.recovery_activity_timeout] from [30m] to [90ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,889][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_timeout] from [15m] to [107ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,889][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [30m] to [214ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,891][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [214ms] to [129ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,892][INFO ][org.elasticsearch.recovery] [RecoverySettingsTests#testAllSettingsAreDynamicallyUpdatable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,893][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,894][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,895][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,896][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,905][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,927][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,928][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,931][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,934][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:19,934][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,063][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,064][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,064][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,065][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{1WjHZjpcTD-mC-XDh8xVMA}{2TbvMAyeT7-h7Uch29yPdQ}{local}{local[45]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,066][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,079][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
  "startTimestamp": 1473935959615,
  "executionTime": 481
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,096][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,097][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,097][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:20,098][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
  "startTimestamp": 1473935959596,
  "executionTime": 514
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "children": [
    {
     "id": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFiltersFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testWeightOnlyCreatesBoostFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testPropagatesApproximations",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testMinScoreExplain",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testSimpleWeightedFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFilterFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935960209
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960385,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960532,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960551,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960567,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960596,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960608,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960621,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960640,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1473935960681,
  "executionTime": 107
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
  "startTimestamp": 1473935960209,
  "executionTime": 581
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "children": [
    {
     "id": "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardYesDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardThrottleDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardNoDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935960837
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1473935960855,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,875][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,875][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1473935960864,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,881][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:20,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1473935960876,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
  "startTimestamp": 1473935960837,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935960896
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960910,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960915,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960917,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960919,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960981,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960984,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960987,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1473935960989,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
  "startTimestamp": 1473935960896,
  "executionTime": 98
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935961029
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1473935961040,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1473935961051,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
  "startTimestamp": 1473935961029,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.TableTests",
   "displayName": "org.elasticsearch.common.TableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.TableTests",
   "children": [
    {
     "id": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndHeadersWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "displayName": "testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "methodName": "testOnLessCellsThanDeclaredUnchecked",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnStartRowWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndRowWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnMoreCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
     "displayName": "testWithTimestamp(org.elasticsearch.common.TableTests)",
     "methodName": "testWithTimestamp",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.TableTests)",
     "displayName": "testSimple(org.elasticsearch.common.TableTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnLessCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutRow",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935961095
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961111,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961113,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961115,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961117,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961119,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961120,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithTimestamp(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961122,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961125,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961127,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1473935961129,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.TableTests",
  "startTimestamp": 1473935961095,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
   "displayName": "org.elasticsearch.common.geo.GeoDistanceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoDistanceTests",
   "children": [
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testGeoDistanceSerialization",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testDistanceCheck",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testArcDistanceVsPlaneInEllipsis",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935961169
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1473935961187,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1473935961209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1473935961211,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1473935961241,
  "executionTime": 149
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
  "startTimestamp": 1473935961169,
  "executionTime": 223
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "children": [
    {
     "id": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimpleWithXContentTraverse",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testMatchTypeOnly",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935961431
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,457][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,485][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,485][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,489][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,492][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,492][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,646][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,647][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,647][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,649][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{9jjyAU9uSym3dEpQWW6rLA}{BCfHff95Tvu2SLCCd8ruTQ}{local}{local[46]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,649][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,665][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,698][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,768][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8Do_RWdBSiGyM49I0PvOsQ] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,814][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8Do_RWdBSiGyM49I0PvOsQ] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,829][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimpleWithXContentTraverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1473935961447,
  "executionTime": 417
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,873][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/85446s_gRQWy6YH6exN3JQ] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,979][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/85446s_gRQWy6YH6exN3JQ] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:21,991][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1473935961864,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,033][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,094][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,111][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/R_HPZaULQIuDlpJqWknDYg] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/R_HPZaULQIuDlpJqWknDYg] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,143][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testMatchTypeOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1473935962026,
  "executionTime": 153
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,180][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,180][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,181][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:22,182][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
  "startTimestamp": 1473935961431,
  "executionTime": 760
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.BytesArrayTests",
   "displayName": "org.elasticsearch.common.bytes.BytesArrayTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.BytesArrayTests",
   "children": [
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935962228
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962255,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962378,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962394,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962399,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962402,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962419,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962454,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962490,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962502,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962514,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962530,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962541,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962551,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962568,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962597,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962610,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962614,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962656,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962659,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962676,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962679,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962684,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962688,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962692,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962706,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962727,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962744,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962767,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935962830,
  "executionTime": 239
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935963069,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1473935963081,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.BytesArrayTests",
  "startTimestamp": 1473935962228,
  "executionTime": 860
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935963161
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963183,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963237,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963241,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963244,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963247,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963249,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963252,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963255,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963258,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963260,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963263,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963266,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963269,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963272,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963281,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963283,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963286,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963288,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963291,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963293,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963295,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963300,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963304,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963306,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963309,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963311,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963315,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963317,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963319,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1473935963322,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
  "startTimestamp": 1473935963161,
  "executionTime": 165
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935963387
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,415][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,443][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,443][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,448][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,451][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,451][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,604][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,604][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,605][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,606][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xGnbSQJ8Rh2IS-D4Q2otDg}{JYWW0AdFQtSZvHPKUTkK7Q}{local}{local[47]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,607][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,621][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,691][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,709][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyTokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
  "startTimestamp": 1473935963405,
  "executionTime": 332
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,740][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyTokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
  "startTimestamp": 1473935963737,
  "executionTime": 4
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,742][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,742][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,742][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:23,744][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
  "startTimestamp": 1473935963387,
  "executionTime": 363
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "children": [
    {
     "id": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "displayName": "testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "methodName": "testMergingListValuesAreMapsOfOne",
     "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935963778
 }
]

[
 "TEST_STARTED",
 "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
  "startTimestamp": 1473935963848,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
  "startTimestamp": 1473935963778,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.main.MainActionTests",
   "displayName": "org.elasticsearch.action.main.MainActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.main.MainActionTests",
   "children": [
    {
     "id": "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainResponseXContent",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    },
    {
     "id": "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainResponseSerialization",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    },
    {
     "id": "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainActionClusterAvailable",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935963891
 }
]

[
 "TEST_STARTED",
 "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1473935963939,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1473935963943,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1473935963945,
  "executionTime": 54
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.main.MainActionTests",
  "startTimestamp": 1473935963891,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "children": [
    {
     "id": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testNoMatchSize",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testCustomPostingsHighlighter",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964031
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1473935964048,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1473935964144,
  "executionTime": 25
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
  "startTimestamp": 1473935964031,
  "executionTime": 140
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.RestMainActionTests",
   "displayName": "org.elasticsearch.rest.action.RestMainActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.RestMainActionTests",
   "children": [
    {
     "id": "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "displayName": "testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "methodName": "testHeadResponse",
     "className": "org.elasticsearch.rest.action.RestMainActionTests",
     "children": []
    },
    {
     "id": "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "displayName": "testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "methodName": "testGetResponse",
     "className": "org.elasticsearch.rest.action.RestMainActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964213
 }
]

[
 "TEST_STARTED",
 "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
  "startTimestamp": 1473935964230,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
  "startTimestamp": 1473935964250,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.RestMainActionTests",
  "startTimestamp": 1473935964213,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "children": [
    {
     "id": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testPercentsFromMixedArray",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964273
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:24,296][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Hf3pCfPrTK60LO7OLlzZyQ}{local}{local[350]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1473935964308,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1473935964329,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:24,334][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"MJKzaSc\",%0A      \"gap_policy\" : \"skip\",%0A      \"percents\" : [%0A        74.22394617080354,%0A        26.75666589005913,%0A        13.37663632793924,%0A        48.56232944687796,%0A        38.69025413327702,%0A        0.42639308655073593,%0A        61.980062772243386,%0A        37.4186630289136,%0A        74.36705597307821,%0A        93.82288590638812,%0A        6.153211274457759,%0A        87.2033090340428,%0A        99.15229430666558,%0A        50.88257717928786,%0A        4.622623674956228,%0A        80.05170887810004,%0A        70.0798535217634,%0A        77.46572144848861,%0A        31.188687197717357,%0A        18.913401274481224%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:24,337][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"MJKzaSc\",%0A      \"gap_policy\" : \"skip\",%0A      \"percents\" : [%0A        74.22394617080354,%0A        26.75666589005913,%0A        13.37663632793924,%0A        48.56232944687796,%0A        38.69025413327702,%0A        0.42639308655073593,%0A        61.980062772243386,%0A        37.4186630289136,%0A        74.36705597307821,%0A        93.82288590638812,%0A        6.153211274457759,%0A        87.2033090340428,%0A        99.15229430666558,%0A        50.88257717928786,%0A        4.622623674956228,%0A        80.05170887810004,%0A        70.0798535217634,%0A        77.46572144848861,%0A        31.188687197717357,%0A        18.913401274481224%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1473935964332,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1473935964340,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
  "startTimestamp": 1473935964273,
  "executionTime": 82
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "displayName": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "children": [
    {
     "id": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtException",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtError",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testIsFatalCause",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964403
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1473935964495,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1473935964598,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1473935964670,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
  "startTimestamp": 1473935964403,
  "executionTime": 272
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "children": [
    {
     "id": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "displayName": "testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "methodName": "testLoadGlobal_neverCacheIfFieldIsMissing",
     "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964725
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
  "startTimestamp": 1473935964771,
  "executionTime": 103
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
  "startTimestamp": 1473935964725,
  "executionTime": 151
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964897
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:24,925][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MDLRFcTTSSa2UpWygyFipw}{local}{local[351]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1473935964936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:24,941][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"tWDgqHpqFeggWznWEA\" : \"Eaj\",%0A        \"AoyLTjaMzjuTavAOHByY\" : \"jnxyGhnLFbjKSjRuJlAxGkuTa\",%0A        \"AGFRBl\" : \"mRiqlkxKQNuwzykiCKUwBQlgFmA\",%0A        \"ochWRwJmQpCJv\" : \"APheLsRzGaCDQ\",%0A        \"TQ\" : \"LqDXpmPwOMJKzaScP\",%0A        \"oHhRUfwOEjeBTPVSLy\" : \"NbmtGkVwszvXcfjjn\"%0A      },%0A      \"script\" : {%0A        \"inline\" : \"script\"%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:24,942][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"tWDgqHpqFeggWznWEA\" : \"Eaj\",%0A        \"AoyLTjaMzjuTavAOHByY\" : \"jnxyGhnLFbjKSjRuJlAxGkuTa\",%0A        \"AGFRBl\" : \"mRiqlkxKQNuwzykiCKUwBQlgFmA\",%0A        \"ochWRwJmQpCJv\" : \"APheLsRzGaCDQ\",%0A        \"TQ\" : \"LqDXpmPwOMJKzaScP\",%0A        \"oHhRUfwOEjeBTPVSLy\" : \"NbmtGkVwszvXcfjjn\"%0A      },%0A      \"script\" : {%0A        \"inline\" : \"script\"%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1473935964938,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1473935964945,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
  "startTimestamp": 1473935964897,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935964977
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,012][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Zrtt4a57TT6wYCyL_WEX6g}{local}{local[352]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,020][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,020][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,038][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,038][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,038][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,040][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,040][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,040][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,043][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,043][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,043][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,045][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,045][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,045][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,047][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,048][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,048][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,051][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,051][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,051][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,055][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,055][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,056][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,058][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,058][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,058][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,072][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,072][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,072][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,074][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,074][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,074][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,077][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,077][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,077][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,082][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,082][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,082][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,084][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,084][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,084][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,087][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,088][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,088][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,092][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,093][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,093][WARN ][org.elasticsearch.deprecation.index.mapper]  [oUzNDMJwiQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965005,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965119,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965122,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965125,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965153,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,268][WARN ][org.elasticsearch.deprecation.common] Deprecated field [type] used, expected [parent_type] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965265,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965269,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965272,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965275,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965314,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965317,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965320,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,337][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:25,337][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965334,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1473935965338,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
  "startTimestamp": 1473935964977,
  "executionTime": 383
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.RetryTests",
   "displayName": "org.elasticsearch.action.bulk.RetryTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.RetryTests",
   "children": [
    {
     "id": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryFailsAfterBackoff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryFailsAfterBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935965499
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1473935965516,
  "executionTime": 213
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1473935965730,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1473935965745,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1473935965804,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.RetryTests",
  "startTimestamp": 1473935965499,
  "executionTime": 321
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testPhrasePrefixMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935965871
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,902][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8a-0m_VuS2KV1ieA1xQaWA}{local}{local[353]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,911][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,917][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,939][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,939][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,939][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,942][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,942][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,943][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,946][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,946][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,946][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,949][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,949][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,949][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,952][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,952][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,952][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,964][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,964][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,964][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,970][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,982][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,982][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,982][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,986][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,986][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,986][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,990][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,990][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,991][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,996][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,996][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:25,996][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,007][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,007][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,007][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:39:26,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [sQIVx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935965894,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966021,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966025,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966041,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966045,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966048,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966060,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966063,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966066,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966069,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966072,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1473935966085,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
  "startTimestamp": 1473935965871,
  "executionTime": 232
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "displayName": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "children": [
    {
     "id": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIds",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoBoundingBox",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatchAll",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFuzzy",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBoosting",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBool",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testScript",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testWildcard",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testDisMax",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanOr",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoPolygon",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanWithin",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasParent",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testNested",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMultiMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistanceRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRegExp",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testCommonTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasChild",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testType",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMLT",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNot",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanMultiTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSimpleQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNear",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testPrefix",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanFirst",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanContaining",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testConstantScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoHashCell",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFunctionScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testExists",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIndices",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoShape",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935966133
 }
]

[
 "TEST_STARTED",
 "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966213,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966215,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966219,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966221,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966223,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966224,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966226,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966228,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966230,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966232,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966235,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966237,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966238,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966241,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966243,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966245,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966248,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966250,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966252,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966254,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966258,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966261,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966263,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966273,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966275,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966277,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966279,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966281,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966283,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966285,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966287,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966294,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966296,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966300,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966304,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966319,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966371,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:09:26,376][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:09:26,376][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966373,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1473935966377,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
  "startTimestamp": 1473935966133,
  "executionTime": 247
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.IteratorsTests",
   "displayName": "org.elasticsearch.common.collect.IteratorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.IteratorsTests",
   "children": [
    {
     "id": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testConcatentation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyBeforeSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyAfterSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testTwoEntries",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNoConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNull",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomIterators",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testMultipleEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNullIterator",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935966403
 }
]

[
 "TEST_STARTED",
 "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966430,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966432,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966448,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966450,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966453,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966455,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966458,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966460,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966505,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966507,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966509,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1473935966511,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.IteratorsTests",
  "startTimestamp": 1473935966403,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "children": [
    {
     "id": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testCompletionAnalyzerSettings",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testRegexQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMinimal",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValued",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMixed",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testTypeParsing",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValueWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testPrefixQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFuzzyQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testNonContextEnabledParsingWithContexts",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFieldValueValidation",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingFull",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935966544
 }
]

[
 "TEST_STARTED",
 "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,570][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,598][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,598][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,602][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,604][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,604][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,729][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,729][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,730][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,731][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rPLEflPGQk-XH0t450leVg}{lYV2-0BNRHWJ0jRv0UzQWA}{local}{local[48]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,732][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,753][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,772][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,822][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,837][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testCompletionAnalyzerSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935966561,
  "executionTime": 340
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,909][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:26,972][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935966901,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,011][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,217][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testRegexQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935967004,
  "executionTime": 360
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,521][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,549][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935967364,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,592][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,647][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,663][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMinimal]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935967585,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,701][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,766][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValued]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935967694,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,806][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,879][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,896][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935967798,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:27,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,017][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,031][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testTypeParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935967961,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,072][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,138][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValueWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968065,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,177][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,224][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,239][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testPrefixQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968169,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,339][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968270,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,374][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,423][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,442][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFuzzyQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968367,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,480][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,529][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,544][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testNonContextEnabledParsingWithContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968472,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,618][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,696][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFieldValueValidation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968611,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,746][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,808][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingFull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1473935968739,
  "executionTime": 98
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,837][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,838][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,838][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:28,839][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
  "startTimestamp": 1473935966544,
  "executionTime": 2308
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935968877
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968893,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968896,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968898,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968900,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968902,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968906,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968908,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1473935968910,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
  "startTimestamp": 1473935968877,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.cache.CacheTests",
   "displayName": "org.elasticsearch.common.cache.CacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.cache.CacheTests",
   "children": [
    {
     "id": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testDependentKeyDeadlock",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeigher",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentCallsOnce",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testTorture(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testTorture",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCount(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterWrite",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testPromotion",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentLoadsSuccessfully",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheStats",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeight(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeight",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheEvictions",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterAccess",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnReplace",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testReplaceRecomputesSize",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCachePollution",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935968991
 }
]

[
 "TEST_STARTED",
 "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935969011,
  "executionTime": 2171
 }
]

[
 "TEST_STARTED",
 "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971182,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971226,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971247,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testTorture(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971356,
  "executionTime": 326
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971683,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971702,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971760,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971814,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971881,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971889,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971947,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935971961,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testWeight(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972020,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972046,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972088,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972168,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972190,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972193,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1473935972214,
  "executionTime": 265
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.cache.CacheTests",
  "startTimestamp": 1473935968991,
  "executionTime": 3490
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935972506
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,623][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5UVKGamKR5WMr90mB0mIrw}{local}{local[354]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,631][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,631][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,700][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,700][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,700][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,702][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,702][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,702][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,704][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,705][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,705][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,706][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,706][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,706][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,709][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,709][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,709][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,712][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,713][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,713][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,714][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,714][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,714][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,717][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,717][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,717][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,743][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,743][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:32,743][WARN ][org.elasticsearch.deprecation.index.mapper]  [Ur] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972587,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972746,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972754,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972767,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972771,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972774,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972779,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972805,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972808,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972812,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1473935972822,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
  "startTimestamp": 1473935972506,
  "executionTime": 328
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "children": [
    {
     "id": "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesExplicitAll",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesExplicitAll",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingSingleExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsStrict",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsFailClosedIndicesAndAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesAllMissing",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesOnlyWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesAllPatternRandom",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesExplicitList",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesWildcardNoMatch",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesNull",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsWildcardExpansion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingSingleExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsEmptyCluster",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesNormalIndexes",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesWildcardExpansion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsAllowUnavailableDisallowEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testDedupConcreteIndices",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesExplicitAllPlusOther",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testFilterClosedIndicesOnAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testFilteringAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesEmptyRequest",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsNoExpandWildcards",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesNull",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesNormalIndexes",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsLenient",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsSingleIndexNoExpandWildcards",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesExplicitAllPlusOther",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesOneMissingIndex",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935972884
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972913,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972917,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972919,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972922,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972924,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972926,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972959,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972961,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972967,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972970,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972972,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972976,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972983,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972986,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972993,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935972998,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973001,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973003,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973006,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973007,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973010,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973012,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973015,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973017,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973019,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973022,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973027,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973029,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973031,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973034,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973036,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973039,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973042,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973045,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1473935973047,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
  "startTimestamp": 1473935972884,
  "executionTime": 167
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndexingMemoryControllerTests",
   "displayName": "org.elasticsearch.indices.IndexingMemoryControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
   "children": [
    {
     "id": "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testTranslogRecoveryWorksWithIMC",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeMinIndexBufferSize",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testMaxBufferSizes",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testShardAdditionAndRemoval",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testThrottling",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testMinBufferSizes",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testDeletesAloneCanTriggerRefresh",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeInterval",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeMaxIndexBufferSize",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeShardInactiveTime",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testActiveInactive",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935973115
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,141][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,166][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,166][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,170][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,172][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,173][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,328][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,328][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,329][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,330][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{qh8rVIJCRrO6fWXAwXhcNA}{D27dzBdMTOiuvXTUEFeMrQ}{local}{local[49]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,331][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,346][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,364][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:33,440][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/T8OC-My3Q4CIymIFqAUbtQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:34,457][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:34,802][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testTranslogRecoveryWorksWithIMC]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935973133,
  "executionTime": 1700
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:34,963][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeMinIndexBufferSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935974834,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:34,979][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testMaxBufferSizes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935974974,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:34,994][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,211][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,225][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testShardAdditionAndRemoval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935974981,
  "executionTime": 323
 }
]

[
 "TEST_STARTED",
 "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,311][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,444][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,470][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][1]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,470][INFO ][org.elasticsearch.indices] [node_s_0] --> Indexing more data%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,470][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,470][INFO ][org.elasticsearch.indices] [node_s_0] stop throttling indexing for shard [[test][1]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,470][INFO ][org.elasticsearch.indices] [node_s_0] stop throttling indexing for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,470][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testThrottling]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935975304,
  "executionTime": 225
 }
]

[
 "TEST_STARTED",
 "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,533][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testMinBufferSizes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935975529,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,541][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:35,607][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/jwi-4ZQwQ7epmS48HNBFkg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,372][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[index][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,390][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testDeletesAloneCanTriggerRefresh]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935975534,
  "executionTime": 1899
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,437][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeInterval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935977433,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,442][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeMaxIndexBufferSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935977438,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,447][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeShardInactiveTime]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935977443,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,453][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,552][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][1]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,552][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testActiveInactive]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1473935977447,
  "executionTime": 147
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,594][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,594][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,595][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:37,596][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndexingMemoryControllerTests",
  "startTimestamp": 1473935973115,
  "executionTime": 4491
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "children": [
    {
     "id": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSelectNextStateToProcess_empty",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testDroppingStatesAtCapacity",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testQueueStats",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSimpleQueueSameMaster",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testProcessedStateCleansStatesFromOtherMasters",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailAllAndClear",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailedStateCleansSupersededStatesOnly",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935977653
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977670,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,696][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[NZHjdErkQFuMY383_KI2kQ], v[11], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,696][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[F4-PdkbpQva_MppVjJZm9g], v[1], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,696][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[e5Bxf7e0Ra-XGJM6ubKiXw], v[3], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,696][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[dFwoiY50QGKvgVYVzT8Xjw], v[34], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,696][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[FSCuI1SvRz-WB-8ONZvH6w], v[23], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,696][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[TWod1DmZRdO7AN_QPBXwuQ], v[33], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[4eQ9qV1LSVS6fb1KUbZi3w], v[7], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Sr8ukoC8ROyj-5H8bxfOGA], v[6], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[sa1p6fOBREymK48sa_tfNg], v[13], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[QHoFDHcKSDSVUzltZaA7TA], v[31], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ImzSm23dRFeY22YO9yKREQ], v[16], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[9GN3XBMCQfOcyNZO-SiFPA], v[41], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[GgDZGO6xQnqwVp90bhxSQQ], v[30], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[0EKTkfJuREyB073ddzPNlw], v[17], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[AOOgYryDTx-VTj-JO16B1w], v[27], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[_lA7Ek_vT7m4EV25JA2ciQ], v[38], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[wpbAqXslT1-BZ1DWLjWowA], v[8], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[nzVc4c17R9Walm4cyGjLVw], v[27], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[YbRHGXLpQIKuY4_evwH-3g], v[11], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,697][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[XLXFAutqQYmQLA11JsyTUg], v[16], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Ae1Jj1ezSdy1Y2SxsdddqQ], v[18], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[vbCiiXa_RsC3hSykJmzVWA], v[25], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[oePCflLqSqSQb9rTvgctKg], v[28], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Z8Pe_nk6QvSHZJT4JmaOeA], v[32], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[vIngzOxsTWGOOC0AFImVjA], v[22], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ZYXtwgZvS1G_L_OlGEZT0w], v[19], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[hOYwBJUgSeS7o4_oeAJWjw], v[25], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Cs-Cz7y7RYC9TyiWAPWmqQ], v[2], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[op968RhjQLuBfhe4NXcJCA], v[17], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[qQaaQOvhTayZSYPTpJnvZg], v[31], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[bmNLqIQLRwe7kXBsUltS_A], v[30], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[x-A0oJVEQKS8hkREkNGDkQ], v[32], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[t3SndJDbReS-4vwLrfRYPA], v[6], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[kMbRbcbGRrWsNHJ1hGnTOg], v[28], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,698][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[XouDtrPqRhaOR9o3Hpecnw], v[35], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[BOjy0ZvdR129JkSMYjZMKA], v[21], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[XroU7cWQQKmeWZXDtJpaGw], v[7], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[uDni86PjS8mTF4NGSJzuZQ], v[26], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[4dD557z0RRObRk6HdGH28g], v[38], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[3czE4tTcQieS4J7WvAGlZg], v[40], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[l6qPMCgoSRSQFmrOAkWMEQ], v[3], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[EruK-eQfTc2F5emd9W6Gkg], v[9], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[HATND4CVQLyS-BKau08sPA], v[26], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[sRbousYBS12wamaV4Azx2w], v[36], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[cDK0u6usTl-6ZwItpv8DBw], v[10], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[uUWR1rEoTMekiLYt0gGiSg], v[30], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,699][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[lC5UUdjSRM2fBceP-X4VCw], v[13], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[q-cUtlN3SmOFWdqsg-iFjw], v[8], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[O-hNGXhgTYq436tFE6nKqg], v[35], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[HIPRysX2Si6c_77lt7RnJw], v[0], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[raqLOAabSqu_Y-nznb1OKQ], v[32], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[PHTR1nhpSUWoVehxhoy2Og], v[12], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[5VwspV0IS3GDpUtePLSAJg], v[4], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[knldoOzsQBWhKLP8khfwLw], v[3], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[x_VPkvBxSQCrlzAPlrCByQ], v[42], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[SQJIPGgARS215PyfShMViA], v[12], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[O8NM052oT9a_KnFixB9RoA], v[36], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[D32yRS_PTJuDivNvntzeQA], v[29], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[VIywNXmlSvGipTv-Hwj9_Q], v[13], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[maVll8HjT4q_nPsDFPbrdA], v[37], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,700][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[9aqVtDdSRradfS8nORUjrA], v[6], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[FlQfweNGT5-41Wnn_268Sg], v[5], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[sl94Y0YbQ6y4OQ9TAUpE2A], v[23], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[X2Ze_owXRQi985t49zhX2Q], v[29], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[2zBZ3LYoRQK9HMf6rI1xkg], v[6], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[SMGZ8zfzShiXjm0IhGubtw], v[23], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[7EMe4-rnR_WclbUkR977Tg], v[1], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Y6Fm3zjjQGKCjPdQVs0j9g], v[4], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ZI1VeNZZRIqYuWbFFvK32Q], v[10], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[0oG1mJ_ORA-Gen2OfqE78Q], v[31], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[QROJYRVSStWe8BwhpxVzbQ], v[35], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[9EZOlWw1Q7O0sdi0vFUW-Q], v[36], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[zDou_2dxRsGYu1R1BCYSTA], v[20], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Okgkx6xUQHSbFVidua8qng], v[27], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,701][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[MV-Mq9tYQIau146bees-tA], v[37], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[weKlXU8bTDqUnjEwPLyHZA], v[11], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[1kGBuQy9Q3i-inEthu0J-A], v[12], m[master2]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[nIozfAGxQlGf3wrPy1aCGw], v[15], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[mIB6AaZ6SU24tusGuSPSew], v[5], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[rs5-KsyjSn-SrFCIjGDETQ], v[24], m[master1]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[hZhIZ6z2Sg-ekb8R4H8pEw], v[43], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[yMecyBAkRfSWb1w6sjZqvA], v[0], m[master4]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,702][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Yq2HGy8BTveIfYfMSwXs5g], v[9], m[master3]]]. more than [83] pending states.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977672,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977704,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977727,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,732][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[J2SRAOP9SPWmISAtb4nqng]/v[0]) from a different master than the current one, rejecting (received {master2}{NbQ5pvKOTLe6R5l_zO2grg}{local}{local[364]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,732][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[4cL6emLwSTe3awt4jBo4HQ]/v[2]) from a different master than the current one, rejecting (received {master4}{a6SkHbZgQZuSAB9K3b5uKA}{local}{local[362]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,732][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[FftK7iOuRhquqHIyuP5dWw]/v[1]) from a different master than the current one, rejecting (received {master2}{NbQ5pvKOTLe6R5l_zO2grg}{local}{local[364]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,732][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[14BhULIgQRCz2A9bttbDVQ]/v[3]) from a different master than the current one, rejecting (received {master2}{NbQ5pvKOTLe6R5l_zO2grg}{local}{local[364]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,732][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[kBMtnWDXQJ6lk2sAg-Dc1w]/v[4]) from a different master than the current one, rejecting (received {master2}{NbQ5pvKOTLe6R5l_zO2grg}{local}{local[364]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,732][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[3OwuJl6eTfGu60hZp2GoJw]/v[0]) from a different master than the current one, rejecting (received {master3}{uuP9Y5l4QvunyRbLUW7mog}{local}{local[365]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:37,733][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[4L7Bze90QZ-5eRxOVu1kqQ]/v[5]) from a different master than the current one, rejecting (received {master2}{NbQ5pvKOTLe6R5l_zO2grg}{local}{local[364]}, current {master1}{pgwo72RQT8ad7RZOp0-HNw}{local}{local[363]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977730,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977733,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1473935977739,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
  "startTimestamp": 1473935977653,
  "executionTime": 94
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "children": [
    {
     "id": "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testBlocks",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testReplicaProxy",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testStalePrimaryShardOnReroute",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testDefaultWaitForActiveShardsUsesIndexSetting",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testCounterOnPrimary",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryReference",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testRoutePhaseExecutesRequest",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testUnknownIndexOrShardOnReroute",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testNoRerouteOnStaleClusterState",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testShadowIndexDisablesReplication",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testReplicasCounter",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935977850
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:37,871][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZRvVyxNDRBe150Z5L0k6NQ}{local}{local[374]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:37,874][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{smhW6XruSrWbWUB9aHWEqA}{local}{local[376]}, previous {node}{ZRvVyxNDRBe150Z5L0k6NQ}{local}{local[374]}}, removed {{node}{ZRvVyxNDRBe150Z5L0k6NQ}{local}{local[374]},}, added {{node_4}{qCqQJzwOSHWggKQb12pt0Q}{local}{local[379]},{node_3}{1Eoi0kOSTMmHNuD2Kzv8bg}{local}{local[378]},{node_1}{smhW6XruSrWbWUB9aHWEqA}{local}{local[376]},{node_5}{gmKGhNdTSL2FHyq1hSbywQ}{local}{local[380]},{node_6}{6RX20zLSSPqZ-Egi7gNv4w}{local}{local[381]},{node_2}{OWVRpBDXTOanyYQl7UQD-Q}{local}{local[377]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935977868,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:37,940][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vsEIxKGNTxeDyDqbx4CPZg}{local}{local[385]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935977935,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,000][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2_zPDxV7RC6PHeEixct-kA}{local}{local[386]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,003][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{J9mrsZwTT1qiTWJvjzXmng}{local}{local[388]}, previous {node}{2_zPDxV7RC6PHeEixct-kA}{local}{local[386]}}, removed {{node}{2_zPDxV7RC6PHeEixct-kA}{local}{local[386]},}, added {{node_0}{jBp2YcoiTweV56GKmjvdhw}{local}{local[387]},{node_2}{rI9ualTQQTKbjUnBbrCG6w}{local}{local[389]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935977995,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,048][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{KnWmFB_6SfC6zC7AZZdDoQ}{local}{local[393]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,050][INFO ][org.elasticsearch.action.support.replication] using state: cluster uuid: qru8zj8RQcaceJH6xnVNbA%0Aversion: 0%0Astate uuid: NGXD754uSuieKdJPG3jjOg%0Afrom_diff: false%0Ameta data version: 0%0A   [test]: v[1]%0A      0: p_term [184], a_ids []%0Anodes: %0A   {node_2}{mUxQjfzVREW9r4js6kUXHw}{local}{local[396]}%0A   {node_6}{3clEQ5ywQF6IhCSEo_xnvQ}{local}{local[400]}%0A   {node_1}{wfhqd28BTcurmKsVCePo0w}{local}{local[395]}, master%0A   {node_5}{l_jtL_fBTymEPzZ-PHQJSQ}{local}{local[399]}%0A   {node_4}{EjJSKLaHS2uiw8fb3Ucg6A}{local}{local[398]}%0A   {node_0}{4gFUEi_hTsuO4VSkcZsLjw}{local}{local[394]}, local%0A   {node_3}{rY0xdic-RP6jbnJB6lwwJg}{local}{local[397]}%0Arouting_table (version 0):%0A-- index [[test]]%0A----shard_id [test][0]%0A--------[test][0], node[node_0], [P], s[STARTED], a[id=bBHUqbTtQgSYtwU9S0x2yA]%0A--------[test][0], node[node_3], [R], s[STARTED], a[id=YvTypMUQQDSJJKqm-AXHqA]%0A--------[test][0], node[node_6], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=HPRI6LW3Qz-3oB_o5DZ2xw]%0A--------[test][0], node[node_2], [R], s[STARTED], a[id=uYrAn2VRT9ylYaNXdjc_5w]%0A--------[test][0], node[node_5], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=hZmQZViSSqeQaNq7u4EMSQ]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:39:38.050Z], delayed=false, allocation_status[no_attempt]]%0A%0Arouting_nodes:%0A-----node_id[node_0][V]%0A--------[test][0], node[node_0], [P], s[STARTED], a[id=bBHUqbTtQgSYtwU9S0x2yA]%0A-----node_id[node_1][V]%0A-----node_id[node_2][V]%0A--------[test][0], node[node_2], [R], s[STARTED], a[id=uYrAn2VRT9ylYaNXdjc_5w]%0A-----node_id[node_3][V]%0A--------[test][0], node[node_3], [R], s[STARTED], a[id=YvTypMUQQDSJJKqm-AXHqA]%0A-----node_id[node_4][V]%0A-----node_id[node_5][V]%0A--------[test][0], node[node_5], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=hZmQZViSSqeQaNq7u4EMSQ]%0A-----node_id[node_6][V]%0A--------[test][0], node[node_6], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=HPRI6LW3Qz-3oB_o5DZ2xw]%0A---- unassigned%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-15T10:39:38.050Z], delayed=false, allocation_status[no_attempt]]%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,051][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{wfhqd28BTcurmKsVCePo0w}{local}{local[395]}, previous {node}{KnWmFB_6SfC6zC7AZZdDoQ}{local}{local[393]}}, removed {{node}{KnWmFB_6SfC6zC7AZZdDoQ}{local}{local[393]},}, added {{node_2}{mUxQjfzVREW9r4js6kUXHw}{local}{local[396]},{node_6}{3clEQ5ywQF6IhCSEo_xnvQ}{local}{local[400]},{node_1}{wfhqd28BTcurmKsVCePo0w}{local}{local[395]},{node_5}{l_jtL_fBTymEPzZ-PHQJSQ}{local}{local[399]},{node_4}{EjJSKLaHS2uiw8fb3Ucg6A}{local}{local[398]},{node_3}{rY0xdic-RP6jbnJB6lwwJg}{local}{local[397]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978042,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,088][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{x4I1KXz_TVeI6y9Fs7orlQ}{local}{local[404]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,090][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{E8ecec1MS82BHiXHH3zrnw}{local}{local[406]}, previous {node}{x4I1KXz_TVeI6y9Fs7orlQ}{local}{local[404]}}, removed {{node}{x4I1KXz_TVeI6y9Fs7orlQ}{local}{local[404]},}, added {{node_1}{E8ecec1MS82BHiXHH3zrnw}{local}{local[406]},{node_2}{CtlRzJfLT2GeUZ7nhvgX5g}{local}{local[407]},{node_3}{2CEOxGOxSOq7Q7a4DtNp1A}{local}{local[408]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978085,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,115][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ef62aTftThK45_BPznlMtQ}{local}{local[412]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,118][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Rr9kX0oVTemitE60Q8qw_A}{local}{local[414]}, previous {node}{Ef62aTftThK45_BPznlMtQ}{local}{local[412]}}, removed {{node}{Ef62aTftThK45_BPznlMtQ}{local}{local[412]},}, added {{node_9}{qPyA4-ruRKqchR2GnmnmuQ}{local}{local[422]},{node_6}{03lvWvRKQoGQTXB-f3j7nA}{local}{local[419]},{node_4}{P5VFZSrwTdSsQIjXcYXbzA}{local}{local[417]},{node_7}{CDOoyMgRRUOdmyfWiqYmxw}{local}{local[420]},{node_5}{c3qIK7liRE213zb8PDF4-Q}{local}{local[418]},{node_3}{qiloDrx9RSGho3B0vrGwdg}{local}{local[416]},{node_2}{Y2e-pHITSjCZ6gAHr8gY4w}{local}{local[415]},{node_1}{Rr9kX0oVTemitE60Q8qw_A}{local}{local[414]},{node_8}{eemOfRapSIuROiZ_Nt0sfg}{local}{local[421]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978096,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,124][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SVXMkv_jSui9TxK19FKX6g}{local}{local[426]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,127][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{1OoqIvJTQhezgDEj0CHsUQ}{local}{local[428]}, previous {node}{SVXMkv_jSui9TxK19FKX6g}{local}{local[426]}}, removed {{node}{SVXMkv_jSui9TxK19FKX6g}{local}{local[426]},}, added {{node_1}{1OoqIvJTQhezgDEj0CHsUQ}{local}{local[428]},{node_2}{sjLHODt9QLylMeLR8R5gjw}{local}{local[429]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978118,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,187][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AePx3AHVQIKleuENhcb2RA}{local}{local[433]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978182,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,198][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gK4N5Ng9TyOozyt9eC8RhA}{local}{local[434]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,200][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{PMG6Lpr7Q-i1zrvLUGr0eA}{local}{local[436]}, previous {node}{gK4N5Ng9TyOozyt9eC8RhA}{local}{local[434]}}, removed {{node}{gK4N5Ng9TyOozyt9eC8RhA}{local}{local[434]},}, added {{node_1}{PMG6Lpr7Q-i1zrvLUGr0eA}{local}{local[436]},{node_2}{nCScVovcR--wj3k0ohlFBQ}{local}{local[437]},{node_3}{UGwrGZzUQACoSr-pkS0_zg}{local}{local[438]},{node_4}{NwRfrOzwRkaKnI6qj-Nfow}{local}{local[439]},{node_5}{5-IOpTMRSiiQbihCEo6LDg}{local}{local[440]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,201][INFO ][org.elasticsearch.action.support.replication] --> primary is assigned to [node_0], checking request forwarded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978193,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,208][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VjhN-_kQS_67nd4Bedi34w}{local}{local[444]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,210][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{3S_OAHHfTRm8BVexjDohlg}{local}{local[446]}, previous {node}{VjhN-_kQS_67nd4Bedi34w}{local}{local[444]}}, removed {{node}{VjhN-_kQS_67nd4Bedi34w}{local}{local[444]},}, added {{node_1}{3S_OAHHfTRm8BVexjDohlg}{local}{local[446]},{node_2}{-xEcRxTdTjWyHuOMfupAuQ}{local}{local[447]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978201,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,220][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GHyfZ3xGRSiL9Uw1r8EnVA}{local}{local[450]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,222][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{ZNJVNqfSRgaugKiBfs1TVA}{local}{local[452]}, previous {node}{GHyfZ3xGRSiL9Uw1r8EnVA}{local}{local[450]}}, removed {{node}{GHyfZ3xGRSiL9Uw1r8EnVA}{local}{local[450]},}, added {{node_0}{IqmWJ6zgTCSO1kn1Q34nkw}{local}{local[451]},{node_2}{JaHUtKhqRRO1b9CgzyIXqA}{local}{local[453]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978215,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,237][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_eV1-anJRwSdjYdefxanTw}{local}{local[457]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,239][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{DaoztHkCRJq_cLtG80srkg}{local}{local[459]}, previous {node}{_eV1-anJRwSdjYdefxanTw}{local}{local[457]}}, removed {{node}{_eV1-anJRwSdjYdefxanTw}{local}{local[457]},}, added {{node_1}{DaoztHkCRJq_cLtG80srkg}{local}{local[459]},{node_2}{EdX7Dp_MRgmQGcxO5AP_TQ}{local}{local[460]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978232,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,251][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{h1r8FJOTQQCyMMkmmA7q4A}{local}{local[464]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,252][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{46MXu-LwTM6ieIDdvKRKRg}{local}{local[466]}, previous {node}{h1r8FJOTQQCyMMkmmA7q4A}{local}{local[464]}}, removed {{node}{h1r8FJOTQQCyMMkmmA7q4A}{local}{local[464]},}, added {{node_1}{46MXu-LwTM6ieIDdvKRKRg}{local}{local[466]},{node_2}{uOQGHlSBSh-7ukToSZUeHQ}{local}{local[467]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,255][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{jgaCFE3nTJS7lRDA1dzV-A}{local}{local[465]},{node_1}{46MXu-LwTM6ieIDdvKRKRg}{local}{local[466]},{node_2}{uOQGHlSBSh-7ukToSZUeHQ}{local}{local[467]},}, added {{node_1}{_84grk8zRf2OJY1w2nvRUA}{local}{local[471]},{node_2}{NuDUTBHQS_C08cufFArn4w}{local}{local[472]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978247,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,259][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tALwFuP5TtKh1s8EHYK01g}{local}{local[476]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,260][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{ENNSiAVgQom0FB73HnOF6Q}{local}{local[478]}, previous {node}{tALwFuP5TtKh1s8EHYK01g}{local}{local[476]}}, removed {{node}{tALwFuP5TtKh1s8EHYK01g}{local}{local[476]},}, added {{node_1}{ENNSiAVgQom0FB73HnOF6Q}{local}{local[478]},{node_2}{bSkV_DSOTZ2VLRhEInVn9A}{local}{local[479]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,261][WARN ][org.elasticsearch.transport] [node_s_0] registered two transport handlers for action internal:cluster/shard/started, handlers: org.elasticsearch.cluster.action.shard.ShardStateAction$ShardStartedTransportHandler@d1cb3be, org.elasticsearch.cluster.action.shard.ShardStateAction$ShardStartedTransportHandler@61376654%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:38,261][WARN ][org.elasticsearch.transport] [node_s_0] registered two transport handlers for action internal:cluster/shard/failure, handlers: org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler@a57bfde, org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler@65093e94%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1473935978256,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportReplicationActionTests",
  "startTimestamp": 1473935977850,
  "executionTime": 434
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "children": [
    {
     "id": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "displayName": "testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "methodName": "testShardExplain",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978312
 }
]

[
 "TEST_STARTED",
 "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,335][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,356][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,356][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,360][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,363][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,363][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,472][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,473][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,473][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,474][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{1aLlUCcfSWKKGdnz3S08FQ}{MGX_xXURTLOXPi_qXZm05A}{local}{local[50]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,475][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,486][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,699][INFO ][org.elasticsearch.action.admin.cluster.allocation] [node_s_0] [ClusterAllocationExplainTests#testShardExplain]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
  "startTimestamp": 1473935978328,
  "executionTime": 398
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,726][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,727][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,727][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:38,729][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
  "startTimestamp": 1473935978312,
  "executionTime": 425
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkUtilsTests",
   "displayName": "org.elasticsearch.common.network.NetworkUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkUtilsTests",
   "children": [
    {
     "id": "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKeySiteLocal",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKeyLinkLocal",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKey",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978761
 }
]

[
 "TEST_STARTED",
 "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1473935978779,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1473935978781,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1473935978782,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1473935978784,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkUtilsTests",
  "startTimestamp": 1473935978761,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StopTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.StopTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
   "children": [
    {
     "id": "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testThatSuggestStopFilterWorks",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testPositionIncrementSetting",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testCorrectPositionIncrementSetting",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978850
 }
]

[
 "TEST_STARTED",
 "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1473935978861,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1473935978869,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1473935978874,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StopTokenFilterTests",
  "startTimestamp": 1473935978850,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978919
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978933,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978935,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978939,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978941,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978942,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978944,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978947,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978949,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978952,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1473935978954,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
  "startTimestamp": 1473935978919,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.SearchOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.SearchOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.SearchOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.SearchOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978980
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
  "startTimestamp": 1473935978998,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.SearchOperationListenerTests",
  "startTimestamp": 1473935978980,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.TermsLookupTests",
   "displayName": "org.elasticsearch.indices.TermsLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.TermsLookupTests",
   "children": [
    {
     "id": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testTermsLookup",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979045
 }
]

[
 "TEST_STARTED",
 "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1473935979055,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1473935979057,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1473935979059,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.TermsLookupTests",
  "startTimestamp": 1473935979045,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "displayName": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "children": [
    {
     "id": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
     "displayName": "testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
     "methodName": "testIfMapEmptyAfterLotsOfAcquireAndReleases",
     "className": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979085
 }
]

[
 "TEST_STARTED",
 "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
  "startTimestamp": 1473935979099,
  "executionTime": 313
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.KeyedLockTests",
  "startTimestamp": 1473935979085,
  "executionTime": 329
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "displayName": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "children": [
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979427
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
  "startTimestamp": 1473935979446,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
  "startTimestamp": 1473935979427,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "displayName": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "children": [
    {
     "id": "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
     "displayName": "testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
     "methodName": "testTook",
     "className": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979480
 }
]

[
 "TEST_STARTED",
 "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,538][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,564][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,564][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,568][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,570][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,570][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,691][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,691][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,692][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,693][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Ao-8s2UWQ8aXdYdpVgA8Ug}{g30oR8pDSiinjL70_1Ms6g}{local}{local[51]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,695][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,764][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:39,857][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:40,030][INFO ][org.elasticsearch.index.termvectors] [TermVectorsServiceTests#testTook]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
  "startTimestamp": 1473935979496,
  "executionTime": 558
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:40,055][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:40,055][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:40,056][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:39:40,058][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.termvectors.TermVectorsServiceTests",
  "startTimestamp": 1473935979480,
  "executionTime": 585
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testJava8Compat",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935980113
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1473935980127,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1473935980129,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1473935980131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1473935980133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1473935980135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1473935980137,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1473935980113,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "displayName": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "children": [
    {
     "id": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStatsEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935980419
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,441][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,458][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,458][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,461][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,463][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,463][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,662][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,662][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,663][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,703][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iloEPQFYTnKlM8c47-RbsA}{ruO-WlZiQoSg8yI7lv6vzw}{local}{local[52]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,703][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,735][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,756][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,845][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,870][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStatsEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1473935980434,
  "executionTime": 465
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,909][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [doc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:40,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,314][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1473935980899,
  "executionTime": 478
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,385][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,466][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,482][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testCommitStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1473935981377,
  "executionTime": 150
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,527][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,527][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,528][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:41,529][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
  "startTimestamp": 1473935980419,
  "executionTime": 1117
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "displayName": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "children": [
    {
     "id": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterFailoverAfterStepDown",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterNotAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithoutBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testForceLocalOperation",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToFailingMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterBecomesAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935981795
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,812][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BfdyZVmQQv6F5DXvei1-vQ}{local}{local[483]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,814][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{U5oEVeVVQ56jCqk0VKjtVQ}{local}{local[484]}, previous {node}{BfdyZVmQQv6F5DXvei1-vQ}{local}{local[483]}}, removed {{node}{BfdyZVmQQv6F5DXvei1-vQ}{local}{local[483]},}, added {{remote_node}{gzfC5SLPQqa1OTHBhHllyA}{local}{local[485]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,833][INFO ][org.elasticsearch.cluster.service] [node_s_0] detected_master {remote_node}{gzfC5SLPQqa1OTHBhHllyA}{local}{local[485]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981810,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,871][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HqYByEu0SraPjE8FpMFYVQ}{local}{local[486]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,872][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{HqYByEu0SraPjE8FpMFYVQ}{local}{local[486]},}, added {{remote_node}{SUbyv66KSiyOtuHODMjLhQ}{local}{local[488]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981866,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,911][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RMQD-aTpQIKuzjpf7S3_KQ}{local}{local[489]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,912][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{DKWGH8p4T4WU2PAXGukQPw}{local}{local[490]}, previous {node}{RMQD-aTpQIKuzjpf7S3_KQ}{local}{local[489]}}, removed {{node}{RMQD-aTpQIKuzjpf7S3_KQ}{local}{local[489]},}, added {{remote_node}{hXB0Dw5xQveJGG1PlDIl7Q}{local}{local[491]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981908,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,924][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{t0UKQQX2QtOMKArVAaisMg}{local}{local[492]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,925][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{dgOLfcHvR12RbrNEXRB7gQ}{local}{local[494]}, previous {node}{t0UKQQX2QtOMKArVAaisMg}{local}{local[492]}}, removed {{node}{t0UKQQX2QtOMKArVAaisMg}{local}{local[492]},}, added {{remote_node}{dgOLfcHvR12RbrNEXRB7gQ}{local}{local[494]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981921,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,941][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_f0nxKAYTR-pqbS_gdm0og}{local}{local[495]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,942][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{yDXE_U3rR1iLKdeyGd229A}{local}{local[497]}, previous {node}{_f0nxKAYTR-pqbS_gdm0og}{local}{local[495]}}, removed {{node}{_f0nxKAYTR-pqbS_gdm0og}{local}{local[495]},}, added {{remote_node}{yDXE_U3rR1iLKdeyGd229A}{local}{local[497]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981936,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,948][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BK9d8zfOROSfYOJi-blgNA}{local}{local[498]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,949][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{BK9d8zfOROSfYOJi-blgNA}{local}{local[498]},}, added {{remote_node}{Ontz9GevQdGXdZOrMGXBRg}{local}{local[500]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,950][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {local_node}{lN-T-cj_SUeeaWup2GzLXw}{local}{local[499]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981944,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,957][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cGcn32VIT7WlKF-0ShrdKQ}{local}{local[501]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,958][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{mJb4NtFPReaiWpzKx8kQjg}{local}{local[502]}, previous {node}{cGcn32VIT7WlKF-0ShrdKQ}{local}{local[501]}}, removed {{node}{cGcn32VIT7WlKF-0ShrdKQ}{local}{local[501]},}, added {{remote_node}{9m2cr3gVSdyJpBvDLZ1t4Q}{local}{local[503]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981951,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,976][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hk-mkH-ySFG9URORejBG7Q}{local}{local[504]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:39:41,977][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{oU69Y4bfTUG36nBIyEUF-A}{local}{local[506]}, previous {node}{hk-mkH-ySFG9URORejBG7Q}{local}{local[504]}}, removed {{node}{hk-mkH-ySFG9URORejBG7Q}{local}{local[504]},}, added {{remote_node}{oU69Y4bfTUG36nBIyEUF-A}{local}{local[506]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1473935981967,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
  "startTimestamp": 1473935981795,
  "executionTime": 187
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
   "displayName": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "children": [
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935982080
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1473935982095,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1473935982157,
  "executionTime": 37
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
  "startTimestamp": 1473935982080,
  "executionTime": 118
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "children": [
    {
     "id": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testListenerFailures",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testConnectedNodes",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935982334
 }
]

[
 "TEST_STARTED",
 "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1473935982346,
  "executionTime": 326
 }
]

[
 "TEST_STARTED",
 "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1473935982672,
  "executionTime": 264
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
  "startTimestamp": 1473935982334,
  "executionTime": 604
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterInfoTests",
   "displayName": "org.elasticsearch.cluster.ClusterInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterInfoTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.ClusterInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983104
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
  "startTimestamp": 1473935983117,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterInfoTests",
  "startTimestamp": 1473935983104,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterStateTests",
   "displayName": "org.elasticsearch.cluster.ClusterStateTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterStateTests",
   "children": [
    {
     "id": "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
     "displayName": "testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
     "methodName": "testSupersedes",
     "className": "org.elasticsearch.cluster.ClusterStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983369
 }
]

[
 "TEST_STARTED",
 "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
  "startTimestamp": 1473935983392,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterStateTests",
  "startTimestamp": 1473935983369,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "displayName": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "children": [
    {
     "id": "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "displayName": "testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "methodName": "testReconnect",
     "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "displayName": "testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "methodName": "testConnectAndDisconnect",
     "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983691
 }
]

[
 "TEST_STARTED",
 "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
  "startTimestamp": 1473935983703,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
  "startTimestamp": 1473935983735,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.NodeConnectionsServiceTests",
  "startTimestamp": 1473935983691,
  "executionTime": 49
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "children": [
    {
     "id": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testMasterChannelException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testUnhandledFailure",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoLongerPrimaryShardException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testSuccess",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoMaster",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testShardNotFound",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983995
 }
]

[
 "TEST_STARTED",
 "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,033][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ROhfEg0eQnmY_AvmTo4ztQ}{local}{local[571]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,036][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{_eF98aqsRb6cdhGCNCiQ3A}{local}{local[573]}, previous {node}{ROhfEg0eQnmY_AvmTo4ztQ}{local}{local[571]}}, removed {{node}{ROhfEg0eQnmY_AvmTo4ztQ}{local}{local[571]},}, added {{node_1}{_eF98aqsRb6cdhGCNCiQ3A}{local}{local[573]},{node_2}{ZbTekaIEQwC217nwr6QXBw}{local}{local[574]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,064][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_0}{XoEedVZ0SzSOAiGE3rONDw}{local}{local[572]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1473935984029,
  "executionTime": 537
 }
]

[
 "TEST_STARTED",
 "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,681][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5I4-f74mQHaAnwu1urlLnw}{local}{local[578]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,683][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Bn5dMU-hTm68eBYR_a6X7A}{local}{local[580]}, previous {node}{5I4-f74mQHaAnwu1urlLnw}{local}{local[578]}}, removed {{node}{5I4-f74mQHaAnwu1urlLnw}{local}{local[578]},}, added {{node_7}{tZV-fazFSxWrn2YxL6joQg}{local}{local[586]},{node_2}{_ZMN_cmTTGWW1dLTCh55-g}{local}{local[581]},{node_3}{57wUXmrkRP62HvLDz4d5Cw}{local}{local[582]},{node_6}{RBuu3PZzRR-QdINPcbhN-w}{local}{local[585]},{node_5}{rX-1VVi_RMSMZXcuKmgm_w}{local}{local[584]},{node_1}{Bn5dMU-hTm68eBYR_a6X7A}{local}{local[580]},{node_4}{TzS5LlDJSeenPwGOIiObVw}{local}{local[583]},{node_8}{ZxSa2fakSg228DxFv_7yig}{local}{local[587]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1473935984566,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9WKJpNtbSKWw6YKAc9XQOg}{local}{local[591]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,703][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{kWqXizOjSMuKvdONhaLSSA}{local}{local[593]}, previous {node}{9WKJpNtbSKWw6YKAc9XQOg}{local}{local[591]}}, removed {{node}{9WKJpNtbSKWw6YKAc9XQOg}{local}{local[591]},}, added {{node_4}{NwapllorSc61eNEgt92pwQ}{local}{local[596]},{node_2}{2CBtMNZXTmyD54x-ceR_tg}{local}{local[594]},{node_10}{KeB_n6fHQIujcazfeJIZHg}{local}{local[602]},{node_5}{rzzAnwQ1SYmglzylKP-JXw}{local}{local[597]},{node_6}{v61vDnxKSueFZcwpy2m4Dw}{local}{local[598]},{node_7}{vFAnSYMRRsCye1CC1pGABg}{local}{local[599]},{node_3}{9DCPLylYQ0GnpIh9kD6e8g}{local}{local[595]},{node_1}{kWqXizOjSMuKvdONhaLSSA}{local}{local[593]},{node_9}{EpP0wYSyR3qd0-fVD7eVeQ}{local}{local[601]},{node_8}{_xueProgTyWptsVnIacZLQ}{local}{local[600]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1473935984695,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,734][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{y7GrCWxkRROd7KD8pWCJYg}{local}{local[606]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,736][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{BrzT1iUhSUiwZQfkivXCDg}{local}{local[608]}, previous {node}{y7GrCWxkRROd7KD8pWCJYg}{local}{local[606]}}, removed {{node}{y7GrCWxkRROd7KD8pWCJYg}{local}{local[606]},}, added {{node_1}{BrzT1iUhSUiwZQfkivXCDg}{local}{local[608]},{node_2}{kJk5UyeKQQyQBduLthwclA}{local}{local[609]},{node_3}{8Pkef4EWRoCNmvRGSl33Bw}{local}{local[610]},{node_4}{PrMgVavjR4yhlrxs-licHA}{local}{local[611]},{node_5}{SlEt8NTFRDOT7ZbBBLxtYg}{local}{local[612]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1473935984724,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,785][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EbM1I0jaSGCvwTVeoo66AA}{local}{local[616]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,786][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{i4wOzhGDTk-R3qLUTuaLBA}{local}{local[618]}, previous {node}{EbM1I0jaSGCvwTVeoo66AA}{local}{local[616]}}, removed {{node}{EbM1I0jaSGCvwTVeoo66AA}{local}{local[616]},}, added {{node_2}{FACqumtKSW-pfiiR6WEqmg}{local}{local[619]},{node_6}{m5ix_r-IQGuPZ9ekbH2yYg}{local}{local[623]},{node_5}{hlpr-USCQPyi6WKYcZi0JA}{local}{local[622]},{node_1}{i4wOzhGDTk-R3qLUTuaLBA}{local}{local[618]},{node_4}{sHFnkRwCQHKcwga343tq2g}{local}{local[621]},{node_3}{_rh9Iw29Tf-m2jo1ZNYsgw}{local}{local[620]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,804][WARN ][org.elasticsearch.cluster.action.shard] [node_s_0] [test][0] no master known for action [internal:cluster/shard/failure] for shard entry [shard id [[test][0]], allocation id [YFqGBF_jSTeGVxxy1Qn4hw], primary term [0], message [test], failure [CorruptIndexException[simulated (resource=null)]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,805][INFO ][org.elasticsearch.cluster.service] [node_s_0] detected_master {node_6}{m5ix_r-IQGuPZ9ekbH2yYg}{local}{local[623]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1473935984779,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,836][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1e7YEy2DSViK0X-QHuYYcQ}{local}{local[627]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:44,838][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{XPziX4e-SOC9yTZEbeNiCA}{local}{local[629]}, previous {node}{1e7YEy2DSViK0X-QHuYYcQ}{local}{local[627]}}, removed {{node}{1e7YEy2DSViK0X-QHuYYcQ}{local}{local[627]},}, added {{node_7}{XGJ2SMv7QvGAqlALKjr_dw}{local}{local[635]},{node_6}{g3YVZA57TQKjKSA-OtiU9A}{local}{local[634]},{node_5}{Xf7SVRDzQXmSEPiHxs_pIw}{local}{local[633]},{node_1}{XPziX4e-SOC9yTZEbeNiCA}{local}{local[629]},{node_4}{P5knDNFqSaeQj2vQn6aNfA}{local}{local[632]},{node_3}{5mjs3_pSRRypmwsy-bJScA}{local}{local[631]},{node_2}{coZZMmp1T-WqJ3dgGKNkEA}{local}{local[630]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1473935984805,
  "executionTime": 60
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
  "startTimestamp": 1473935983995,
  "executionTime": 875
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "children": [
    {
     "id": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreationWithFailedAllocations",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthWaitsForClusterStateApplication",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealth",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreation",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecovery",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985030
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,115][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6RfKF51dQ8yTpxzE4oin-A}{local}{local[639]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985083,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,163][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3RS3yo0FTuuUP24M8IqosA}{local}{local[640]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,165][INFO ][org.elasticsearch.cluster.health] --> waiting for listener to be called and cluster state being blocked%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985134,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,176][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{18gz4Sr9STWPHBQJo5On5g}{local}{local[641]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985170,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,182][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TARBxcAgTcaPkAbUqgnBlg}{local}{local[642]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985178,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,189][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{baWKejv_QiWivCsvl8xPzA}{local}{local[643]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,191][INFO ][org.elasticsearch.cluster.health] cluster status: GREEN, expected GREEN%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985184,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,196][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{St9pWVTmTDW8cFTAWfFMCA}{local}{local[644]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985192,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,202][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NEcTWklhQ8GxX-BZJShK4A}{local}{local[645]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985198,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:45,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uTMYrYwkS6agicDZ5co0ow}{local}{local[646]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1473935985205,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
  "startTimestamp": 1473935985030,
  "executionTime": 186
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
   "children": [
    {
     "id": "ID#testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testPrimaryFailureBatchedWithReplicaFailure",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testInSyncIdsNotGrowingWithoutBounds",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testInSyncAllocationIdsUpdated",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testDeadNodesBeforeReplicaFailed",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985303
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,380][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,381][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,382][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,382][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,382][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,383][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Failing [shard id [[test][0]], allocation id [powffRvRShC-MP-vjPekNg], primary term [1], message [dummy], shard id [[test][0]], allocation id [apQag8ECRWCjNUI6ai152A], primary term [0], message [dummy]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,383][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1473935985372,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,424][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,425][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,429][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,430][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,430][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,430][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove a node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,451][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,456][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,456][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,457][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,457][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,457][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,457][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,458][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,458][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,458][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,460][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,462][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,462][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,466][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,467][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,467][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,468][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,468][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,468][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,469][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,469][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,470][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1473935985384,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,482][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 2 replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,482][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding three nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,484][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove a node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,485][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,485][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove all remaining nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,485][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,486][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,487][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,487][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1473935985474,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,498][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,498][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,499][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,499][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove replica node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,499][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:45,499][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail replica (for which there is no shard routing in the CS anymore)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1473935985488,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
  "startTimestamp": 1473935985303,
  "executionTime": 201
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "displayName": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "children": [
    {
     "id": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testReplicaShardPreferenceIters",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testShardsAndPreferNodeRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testNodeSelectorRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator1",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testAttributePreferenceRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testRandomRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator2",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testEmptyIterator",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985582
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,618][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985602,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,640][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985619,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985643,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985652,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,777][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985659,
  "executionTime": 196
 }
]

[
 "TEST_STARTED",
 "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985855,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985857,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1473935985860,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
  "startTimestamp": 1473935985582,
  "executionTime": 282
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.BooleansTests",
   "displayName": "org.elasticsearch.common.BooleansTests",
   "methodName": null,
   "className": "org.elasticsearch.common.BooleansTests",
   "children": [
    {
     "id": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBooleanExact",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsExplicit",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985899
 }
]

[
 "TEST_STARTED",
 "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1473935985923,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1473935985926,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1473935985928,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1473935985936,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.BooleansTests",
  "startTimestamp": 1473935985899,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ChannelsTests",
   "displayName": "org.elasticsearch.common.ChannelsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ChannelsTests",
   "children": [
    {
     "id": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithoutException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThoughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935986228
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1473935986249,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1473935986277,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1473935986323,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1473935986340,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1473935986444,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1473935986458,
  "executionTime": 51
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ChannelsTests",
  "startTimestamp": 1473935986228,
  "executionTime": 288
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ParseFieldTests",
   "displayName": "org.elasticsearch.common.ParseFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ParseFieldTests",
   "children": [
    {
     "id": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testParse(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    },
    {
     "id": "ID#testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testGetAllNamesIncludedDeprecated",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    },
    {
     "id": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testAllDeprecated",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935986789
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.common.ParseFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:46,808][WARN ][org.elasticsearch.deprecation.common] Deprecated field [barFoo] used, expected [foo_bar] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:46,809][WARN ][org.elasticsearch.deprecation.common] Deprecated field [bar_foo] used, expected [foo_bar] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:46,809][WARN ][org.elasticsearch.deprecation.common] Deprecated field [Foobar] used, expected [foo_bar] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1473935986806,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1473935986810,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:39:46,813][WARN ][org.elasticsearch.deprecation.common] Deprecated field [like_text] used, replaced by [like]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1473935986811,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ParseFieldTests",
  "startTimestamp": 1473935986789,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PidFileTests",
   "displayName": "org.elasticsearch.common.PidFileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PidFileTests",
   "children": [
    {
     "id": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testPidFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testPidFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    },
    {
     "id": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testParentIsFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935987091
 }
]

[
 "TEST_STARTED",
 "ID#testPidFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1473935987104,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1473935987192,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PidFileTests",
  "startTimestamp": 1473935987091,
  "executionTime": 116
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.UUIDTests",
   "displayName": "org.elasticsearch.common.UUIDTests",
   "methodName": null,
   "className": "org.elasticsearch.common.UUIDTests",
   "children": [
    {
     "id": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935987421
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1473935987491,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1473935987565,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1473935987699,
  "executionTime": 347
 }
]

[
 "TEST_STARTED",
 "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1473935988046,
  "executionTime": 119
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.UUIDTests",
  "startTimestamp": 1473935987421,
  "executionTime": 746
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.BlobPathTests",
   "displayName": "org.elasticsearch.common.blobstore.BlobPathTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.BlobPathTests",
   "children": [
    {
     "id": "ID#testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)",
     "displayName": "testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)",
     "methodName": "testBuildAsString",
     "className": "org.elasticsearch.common.blobstore.BlobPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935988260
 }
]

[
 "TEST_STARTED",
 "ID#testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)",
  "startTimestamp": 1473935988278,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.BlobPathTests",
  "startTimestamp": 1473935988260,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "children": [
    {
     "id": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testWriteRead",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testVerifyOverwriteFails",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testMoveAndList",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testDeleteBlob",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935988546
 }
]

[
 "TEST_STARTED",
 "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1473935988578,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1473935988607,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1473935988623,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1473935988757,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
  "startTimestamp": 1473935988546,
  "executionTime": 239
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935989056
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1473935989072,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1473935989074,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1473935989087,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
  "startTimestamp": 1473935989056,
  "executionTime": 43
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testInvalidBuilderException",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935989338
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1473935989364,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1473935989367,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1473935989371,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1473935989391,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
  "startTimestamp": 1473935989338,
  "executionTime": 62
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935989601
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1473935989615,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1473935989714,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1473935989833,
  "executionTime": 126
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1473935989601,
  "executionTime": 361
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.StreamTests",
   "displayName": "org.elasticsearch.common.io.stream.StreamTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.StreamTests",
   "children": [
    {
     "id": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testFilterStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testWritableArrays",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testInputStreamStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testSpecificVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testLinkedHashMap",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testRandomVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935990078
 }
]

[
 "TEST_STARTED",
 "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1473935990097,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1473935990099,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1473935990103,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1473935990106,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1473935990108,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1473935990124,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.StreamTests",
  "startTimestamp": 1473935990078,
  "executionTime": 77
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.joda.DateMathParserTests",
   "displayName": "org.elasticsearch.common.joda.DateMathParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.joda.DateMathParserTests",
   "children": [
    {
     "id": "ID#testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testOnlyCallsNowIfNecessary",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testNow(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testNow(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testNow",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testRoundingDoesNotAffectExactDate",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testThatUnixTimestampMayNotHaveTimeZone",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testIllegalDateFormat",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testLenientEmptyMath",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testTimestamps",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testIllegalMathFormat",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testTimezone(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testBasicDates",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testRounding(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testRounding(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testRounding",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testBasicMath",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testMultipleAdjustments",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935990324
 }
]

[
 "TEST_STARTED",
 "ID#testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990374,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testNow(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNow(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990387,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990485,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990491,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990498,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990503,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990507,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990510,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990517,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRounding(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRounding(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990532,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990541,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1473935990546,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.joda.DateMathParserTests",
  "startTimestamp": 1473935990324,
  "executionTime": 227
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
   "displayName": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "children": [
    {
     "id": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testIgnoresClosedThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testSafeWithoutThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenRemovingUnknownThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testCanRemoveThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsCombinedHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWithoutThreadContextSet",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenDoubleSettingSameThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935990611
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,663][WARN ][org.elasticsearch.deprecation.common.logging] Ignored logger message%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990661,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,666][WARN ][org.elasticsearch.deprecation.common.logging] Ignored%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990664,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990666,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,672][WARN ][org.elasticsearch.deprecation.common.logging] testCanRemoveThreadContext%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,675][WARN ][org.elasticsearch.deprecation.common.logging] testCannotRemoveThreadContext%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990669,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,678][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [J]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,678][WARN ][org.elasticsearch.deprecation.common.logging] zRqMxt%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990675,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990678,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990684,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:50,689][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [Jo]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1473935990687,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
  "startTimestamp": 1473935990611,
  "executionTime": 80
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935990920
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
  "startTimestamp": 1473935990950,
  "executionTime": 66
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
  "startTimestamp": 1473935990920,
  "executionTime": 97
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "children": [
    {
     "id": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "displayName": "testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "methodName": "testTopN",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935991198
 }
]

[
 "TEST_STARTED",
 "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
  "startTimestamp": 1473935991214,
  "executionTime": 330
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
  "startTimestamp": 1473935991198,
  "executionTime": 347
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.CidrsTests",
   "displayName": "org.elasticsearch.common.network.CidrsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.CidrsTests",
   "children": [
    {
     "id": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidSpecificCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificOctetCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingSlash",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingDot",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testRandomValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificNetworkMaskCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testNullCidr",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935991774
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991784,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991838,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991841,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991848,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991850,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991854,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935991856,
  "executionTime": 1964
 }
]

[
 "TEST_STARTED",
 "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1473935993820,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.CidrsTests",
  "startTimestamp": 1473935991774,
  "executionTime": 2051
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "displayName": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "children": [
    {
     "id": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testCircularReference",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testDefaultValue",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testVariousPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedShorterPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNotIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldIgnoreMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedSameLengthPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedLongerPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testRecursive",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldRemoveMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935994143
 }
]

[
 "TEST_STARTED",
 "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994161,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994190,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994193,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994194,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994196,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994198,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994202,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994208,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994212,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1473935994214,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
  "startTimestamp": 1473935994143,
  "executionTime": 75
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
   "displayName": "org.elasticsearch.common.settings.SettingsModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsModuleTests",
   "children": [
    {
     "id": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testLoggerSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testOldMaxClauseCountSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testSpecialTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterShared",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettingsFilter",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testMutuallyExclusiveScopes",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935994467
 }
]

[
 "TEST_STARTED",
 "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994516,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:54,563][WARN ][org.elasticsearch.common.settings] [node_s_0] %0D%0A*************************************************************************************%0D%0AFound index level settings on node level configuration.%0D%0A%0D%0ASince elasticsearch 5.x index level settings can NOT be set on the nodes %0D%0Aconfiguration like the elasticsearch.yaml, in system properties or command line %0D%0Aarguments.In order to upgrade all indices the settings must be updated via the %0D%0A/${index}/_settings API. Unless all settings are dynamic all indices must be closed %0D%0Ain order to apply the upgradeIndices created in the future should use index templates %0D%0Ato set default values. %0D%0A%0D%0APlease ensure all required values are updated on all indices by executing: %0D%0A%0D%0Acurl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{%0A  \"index.foo.bar\" : \"1\"%0A}'%0D%0A*************************************************************************************%0D%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994525,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994584,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994616,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994626,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994660,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994674,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994683,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1473935994691,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
  "startTimestamp": 1473935994467,
  "executionTime": 235
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsTests",
   "displayName": "org.elasticsearch.common.settings.SettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsTests",
   "children": [
    {
     "id": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testNames(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testNames",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemProperty",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testPrefixNormalization",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testFallbackToFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoresPrompt",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testUnFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testThatArraysAreOverriddenCorrectly",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderByEnvironmentVariables",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testGetAsSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935995092
 }
]

[
 "TEST_STARTED",
 "ID#testNames(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995113,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995115,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995118,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995124,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995126,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995128,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995131,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995137,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1473935995140,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsTests",
  "startTimestamp": 1473935995092,
  "executionTime": 52
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ExtensionPointTests",
   "displayName": "org.elasticsearch.common.util.ExtensionPointTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ExtensionPointTests",
   "children": [
    {
     "id": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "displayName": "testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "methodName": "testClassSet",
     "className": "org.elasticsearch.common.util.ExtensionPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935995387
 }
]

[
 "TEST_STARTED",
 "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
  "startTimestamp": 1473935995410,
  "executionTime": 69
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ExtensionPointTests",
  "startTimestamp": 1473935995387,
  "executionTime": 94
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongHashTests",
   "displayName": "org.elasticsearch.common.util.LongHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongHashTests",
   "children": [
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testKey(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testKey",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935995641
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,689][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,724][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,724][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,727][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,730][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,730][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,900][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,900][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,900][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,901][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{MmI3typ9QamrwBvBOytUxg}{TjwpaWxAQbWsk9ryK8dHgA}{local}{local[53]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,902][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:55,915][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,047][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1473935995676,
  "executionTime": 372
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,313][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1473935996049,
  "executionTime": 266
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,343][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1473935996315,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testKey(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,360][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testKey]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1473935996345,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,518][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1473935996361,
  "executionTime": 158
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,519][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,520][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,520][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:39:56,523][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongHashTests",
  "startTimestamp": 1473935995641,
  "executionTime": 896
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935996568
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,585][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,608][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,609][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,613][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,615][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,615][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,752][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,752][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,753][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,756][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yWRlp7eyQLqQakY0OR739Q}{0JepDoI1RtC4-NiY7zLieA}{local}{local[54]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,756][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:56,774][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:58,087][INFO ][org.elasticsearch.common.util] [node_s_0] [LongObjectHashMapTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1473935996579,
  "executionTime": 1510
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:58,089][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:58,090][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:58,090][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:58,092][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1473935996568,
  "executionTime": 1530
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.URIPatternTests",
   "displayName": "org.elasticsearch.common.util.URIPatternTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.URIPatternTests",
   "children": [
    {
     "id": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "displayName": "testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "methodName": "testURIPattern",
     "className": "org.elasticsearch.common.util.URIPatternTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935998371
 }
]

[
 "TEST_STARTED",
 "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
  "startTimestamp": 1473935998385,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.URIPatternTests",
  "startTimestamp": 1473935998371,
  "executionTime": 19
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
   "children": [
    {
     "id": "ID#testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testIsForceExecutuonDefaultsFalse",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testRunSuccess",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testOnAfterFailure",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testRunFailure",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testOnAfterSuccess",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testOnRejection",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935998761
 }
]

[
 "TEST_STARTED",
 "ID#testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1473935998776,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1473935998779,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1473935998784,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1473935998787,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1473935998789,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1473935998919,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
  "startTimestamp": 1473935998761,
  "executionTime": 166
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "children": [
    {
     "id": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeout",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testExecutePrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeoutCleanup",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithMixed",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testPriorityQueue",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithCallables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935999078
 }
]

[
 "TEST_STARTED",
 "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999113,
  "executionTime": 336
 }
]

[
 "TEST_STARTED",
 "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999449,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999463,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999467,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999492,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999537,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1473935999539,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
  "startTimestamp": 1473935999078,
  "executionTime": 465
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "displayName": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "children": [
    {
     "id": "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerializeInDifferentContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerialize",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashAndMerge",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashAndMergeWithModifiedDefaults",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testCopyHeaders",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testPreserveContextKeepsOriginalContextWhenCalledTwice",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testPreserveContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStoreContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testAccessClosed",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerializeInDifferentContextNoDefaults",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testCanResetDefault",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testResponseHeaders",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935999851
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999874,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999877,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999880,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999882,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999884,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999886,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999897,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999899,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999904,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999907,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999909,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1473935999911,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.ThreadContextTests",
  "startTimestamp": 1473935999851,
  "executionTime": 64
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "displayName": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "children": [
    {
     "id": "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testBadParam",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testCalledOneTime",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testRandomOrder",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testBadParamBeforeObjectBuilt",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testRepeatedConstructorParam",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingAllConstructorArgsButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingFirstConstructorArg",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingSecondConstructorArg",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingAllConstructorArgs",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testConstructorArgsMustBeConfigured",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingFirstConstructorArgButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingSecondConstructorArgButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000129
 }
]

[
 "TEST_STARTED",
 "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000173,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000202,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000206,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000209,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000212,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000216,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000219,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000221,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000223,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000225,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000227,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1473936000229,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
  "startTimestamp": 1473936000129,
  "executionTime": 102
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentFactoryTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
   "children": [
    {
     "id": "ID#testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testCBORBasedOnMagicHeaderDetection",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testJsonFromBytesOptionallyPrecededByUtf8Bom",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testEmptyStream",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessYaml",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessSmile",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessJson",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testCBORBasedOnMajorObjectDetection",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testInvalidStream",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessCbor",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000381
 }
]

[
 "TEST_STARTED",
 "ID#testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000403,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000405,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000407,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000408,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000410,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000411,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000416,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1473936000418,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentFactoryTests",
  "startTimestamp": 1473936000381,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentParserTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentParserTests",
   "children": [
    {
     "id": "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
     "displayName": "testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
     "methodName": "testReadListThrowsException",
     "className": "org.elasticsearch.common.xcontent.XContentParserTests",
     "children": []
    },
    {
     "id": "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
     "displayName": "testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
     "methodName": "testReadList",
     "className": "org.elasticsearch.common.xcontent.XContentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000636
 }
]

[
 "TEST_STARTED",
 "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
  "startTimestamp": 1473936000651,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
  "startTimestamp": 1473936000659,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentParserTests",
  "startTimestamp": 1473936000636,
  "executionTime": 30
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "displayName": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "children": [
    {
     "id": "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testSimpleGenerator",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testOverloadedList",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testByteConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testReuseJsonGenerator",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteMapWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_StringName",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWritingBinaryToStream",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_absolute",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testDateTypesConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testPrettyWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testCopyCurrentStructure",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfCollectionOfPaths",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testIndentIsPlatformIndependent",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteMapValueWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_relative",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testRaw",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testRenderGeoPoint",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteFieldMapWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000894
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000942,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000944,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000946,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000949,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000951,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000954,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000956,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000958,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000961,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000965,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936000968,
  "executionTime": 543
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001511,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001521,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001524,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001526,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001592,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001662,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001664,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001666,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001668,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1473936001671,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
  "startTimestamp": 1473936000894,
  "executionTime": 783
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002075
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002160,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002162,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002166,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002168,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002171,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002173,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002175,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002177,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002179,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002182,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002192,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002195,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002199,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002325,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002327,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002367,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1473936002373,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1473936002075,
  "executionTime": 321
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002660
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002692,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002721,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002724,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002730,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002737,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002750,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002773,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002789,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002792,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002795,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002797,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002800,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002810,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002813,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002816,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002818,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002827,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002829,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002831,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002834,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002836,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002839,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002843,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002848,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002851,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002854,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002857,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002861,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1473936002865,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
  "startTimestamp": 1473936002660,
  "executionTime": 212
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
   "displayName": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "children": [
    {
     "id": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "displayName": "testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "methodName": "testLocationExtraction",
     "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002932
 }
]

[
 "TEST_STARTED",
 "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
  "startTimestamp": 1473936002952,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
  "startTimestamp": 1473936002932,
  "executionTime": 24
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
   "displayName": "org.elasticsearch.fieldstats.FieldStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.fieldstats.FieldStatsTests",
   "children": [
    {
     "id": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testByte",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testShort",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering_optionalFormat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testInteger",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge_notAvailable",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testLong",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testString",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testNumberFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMetaFieldsNotIndexed",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testHalfFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936003269
 }
]

[
 "TEST_STARTED",
 "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,497][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,570][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,570][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,574][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,577][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,577][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,983][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,983][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,984][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,986][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7qbByACDQymrQgn6qOk6GA}{LfLq2k9FScmalIHZs6gkcg}{local}{local[55]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:03,987][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,008][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,140][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,231][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,259][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,354][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:04,957][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,053][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,138][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,206][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,522][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,591][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,678][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,695][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:05,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,027][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testByte]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936003467,
  "executionTime": 2561
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,034][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,087][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,126][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/ASQjj8rgTLezvvCZ87-9EA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,154][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,227][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,245][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/hoigAdvjRV-4ARgPIvrqkQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,611][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936006028,
  "executionTime": 653
 }
]

[
 "TEST_STARTED",
 "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,692][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,939][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:06,964][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,068][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,520][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,588][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,616][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,698][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,729][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:07,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,005][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,087][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,178][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,233][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,605][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testShort]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936006682,
  "executionTime": 1924
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,614][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:08,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,306][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering_optionalFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936008606,
  "executionTime": 749
 }
]

[
 "TEST_STARTED",
 "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,364][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,430][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,451][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,509][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,525][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:09,979][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,083][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,195][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,244][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,342][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,792][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,844][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,861][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,919][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:10,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,270][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936009355,
  "executionTime": 1916
 }
]

[
 "TEST_STARTED",
 "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,275][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge_notAvailable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936011271,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,284][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,357][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,375][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,470][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,518][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,832][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,886][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,905][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:11,992][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,012][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,138][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,589][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,680][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,767][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:12,841][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,232][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936011276,
  "executionTime": 1957
 }
]

[
 "TEST_STARTED",
 "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,305][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,506][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936013234,
  "executionTime": 307
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,545][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936013541,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,555][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,610][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,628][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/v1T44TQlSfqXV7nHb3hwDw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,653][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,721][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:13,738][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/kjE5zmDOQ6m-p13b-3Mhvg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,028][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testNumberFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936013546,
  "executionTime": 524
 }
]

[
 "TEST_STARTED",
 "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,121][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,134][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/VASOFjQNRBasY8ahOo9zAA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,466][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMetaFieldsNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936014070,
  "executionTime": 482
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,568][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,693][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,715][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936014552,
  "executionTime": 207
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,779][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:14,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:15,367][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936014759,
  "executionTime": 655
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:15,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:15,498][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:15,822][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDouble]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936015414,
  "executionTime": 450
 }
]

[
 "TEST_STARTED",
 "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:15,873][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:15,929][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:16,217][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testHalfFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1473936015864,
  "executionTime": 383
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:16,247][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:16,247][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:16,248][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:16,250][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
  "startTimestamp": 1473936003269,
  "executionTime": 12997
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.LiveVersionMapTests",
   "displayName": "org.elasticsearch.index.engine.LiveVersionMapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.LiveVersionMapTests",
   "children": [
    {
     "id": "ID#testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)",
     "displayName": "testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)",
     "methodName": "testRamBytesUsed",
     "className": "org.elasticsearch.index.engine.LiveVersionMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936016522
 }
]

[
 "TEST_STARTED",
 "ID#testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)",
  "startTimestamp": 1473936016540,
  "executionTime": 1476
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.LiveVersionMapTests",
  "startTimestamp": 1473936016522,
  "executionTime": 1496
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
   "displayName": "org.elasticsearch.index.engine.ShadowEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.ShadowEngineTests",
   "children": [
    {
     "id": "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testRefreshListenersFails",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testNoTranslog",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testDocStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineCreationRetry",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailEngineOnCorruption",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineIgnoresWriteOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936018346
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936018365,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936018485,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936018789,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936018846,
  "executionTime": 1283
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936020129,
  "executionTime": 1052
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936021181,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936021238,
  "executionTime": 558
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936021796,
  "executionTime": 358
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936022154,
  "executionTime": 1115
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936023270,
  "executionTime": 677
 }
]

[
 "TEST_STARTED",
 "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936023947,
  "executionTime": 389
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936024337,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936024639,
  "executionTime": 1308
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1473936025947,
  "executionTime": 91
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
  "startTimestamp": 1473936018346,
  "executionTime": 7838
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
   "children": [
    {
     "id": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMistypedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappers",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testNoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMisplacedMappingAsRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersWithOffsetsTermQuery",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithStore",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testDocValuesNotAllowed",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersNoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testBoostWithOmitPositions",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersTermQuery",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMultiField_defaults",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMultiField_includeInAllSetToFalse",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithReparse",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testRootObjectMapperPropertiesDoNotCauseException",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMisplacedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithReparseWithStore",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAutoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936026326
 }
]

[
 "TEST_STARTED",
 "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,348][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,370][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,370][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,373][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,376][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,376][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,498][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,498][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,499][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,500][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{h-Q3c2ZqQRKEFFNY7pupdw}{YO9J9yF_R2WhbFX5cQeobA}{local}{local[56]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,501][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,513][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,593][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,605][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMistypedTypeInRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936026340,
  "executionTime": 292
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,639][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,710][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,745][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936026632,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,819][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,861][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,886][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936026773,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,932][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:26,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,001][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testNoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936026911,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,049][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,123][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMisplacedMappingAsRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027029,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,178][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,252][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersWithOffsetsTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027161,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,309][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,357][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,372][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027282,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,408][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,455][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,483][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testDocValuesNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027401,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,513][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,547][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,569][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersNoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027508,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,615][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,655][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,672][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testBoostWithOmitPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027591,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,727][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027696,
  "executionTime": 203
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,913][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:27,991][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMultiField_defaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936027899,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,039][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,084][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,095][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMultiField_includeInAllSetToFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028016,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,128][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,183][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,201][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithReparse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028123,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,295][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,332][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testRootObjectMapperPropertiesDoNotCauseException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028236,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,373][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,424][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,441][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMisplacedTypeInRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028357,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,478][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,530][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,552][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithReparseWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028471,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,704][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,753][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,767][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] Mapping: {\"test\":{\"_all\":{\"store_term_vector_positions\":false}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,769][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testRandom]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028697,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,817][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_false] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:28,891][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_false][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_true] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_true][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,230][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_true] [AllFieldMapperTests#testAutoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1473936028805,
  "executionTime": 471
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,276][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,276][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,277][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:29,278][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperTests",
  "startTimestamp": 1473936026326,
  "executionTime": 2963
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "displayName": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "children": [
    {
     "id": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "displayName": "testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "methodName": "testDoubleIndexingSameDoc",
     "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936029401
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,446][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,469][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,470][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,473][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,488][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,488][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,658][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,658][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,658][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,667][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{F4_gkyRKS5inUIL_FbgJtQ}{hPN-34SkT_Sy2QpG3pF7Vg}{local}{local[57]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,668][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,688][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,710][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,795][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Qr3SAwIxSiaV1bFkf6SeSA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,811][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Qr3SAwIxSiaV1bFkf6SeSA] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,867][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DoubleIndexingDocTests#testDoubleIndexingSameDoc]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
  "startTimestamp": 1473936029431,
  "executionTime": 463
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,894][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,896][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,896][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:29,897][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
  "startTimestamp": 1473936029401,
  "executionTime": 503
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "children": [
    {
     "id": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "displayName": "testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "methodName": "testDynamicDisabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936030189
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,211][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,239][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,240][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,243][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,244][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,245][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,370][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,370][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,370][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,371][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{EJbmMffXThG9Xnr0b0E0aQ}{7G2LlnjfTpmcXwBFfR1NsQ}{local}{local[58]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,371][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,383][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,404][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{A_z2qzqWSdKWMBUslxrmoQ}{local}{local[671]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,426][INFO ][org.elasticsearch.index.mapper] [node_s_0] [tBQIECVfQT-f-9pqaNOOhQ] [DynamicMappingDisabledTests#testDynamicDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
  "startTimestamp": 1473936030203,
  "executionTime": 224
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,428][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,428][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,428][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:40:30,429][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
  "startTimestamp": 1473936030189,
  "executionTime": 250
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoEncodingTests",
   "displayName": "org.elasticsearch.index.mapper.GeoEncodingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoEncodingTests",
   "children": [
    {
     "id": "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)",
     "displayName": "test(org.elasticsearch.index.mapper.GeoEncodingTests)",
     "methodName": "test",
     "className": "org.elasticsearch.index.mapper.GeoEncodingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936030699
 }
]

[
 "TEST_STARTED",
 "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)",
  "startTimestamp": 1473936030716,
  "executionTime": 87
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoEncodingTests",
  "startTimestamp": 1473936030699,
  "executionTime": 106
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "children": [
    {
     "id": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearchWithPrefix",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueWithGeohash",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testNoValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testMultiField",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayArrayStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testNormalizeLatLonValuesDefault",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testOptionDeprecation",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoPointMapperMerge",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashIndexValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayDynamic",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesWithGeohash",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearch",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArray",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testArrayLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueArray",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936030969
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,015][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,052][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,052][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,056][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,059][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,059][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,207][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,207][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,208][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{L_aXALsMS4G8zo-oBtGe8Q}{8kJUTvJySbKqPBjVfwAu6Q}{local}{local[59]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,210][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,244][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,263][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,311][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,321][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,322][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936031005,
  "executionTime": 362
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,373][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,374][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,375][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,375][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,375][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,375][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,379][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,379][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,379][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,380][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,380][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,380][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,423][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,546][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashSearchWithPrefix]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936031367,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,585][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,630][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,645][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,646][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,646][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueWithGeohash]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936031578,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,682][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,764][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,765][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936031674,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,814][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,883][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,904][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,906][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testNoValidateLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936031796,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:31,951][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,044][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,060][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,061][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936031942,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,109][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,195][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,196][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValuesStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936032103,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,263][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,263][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,263][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,265][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,265][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,265][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,267][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,276][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,276][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,276][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,277][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,278][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,278][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:32,371][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:39,712][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936032255,
  "executionTime": 7664
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:39,928][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:39,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:39,992][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:39,997][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,060][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test_old] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,061][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [GeoPointFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936039920,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,106][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,182][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,225][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,226][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayArrayStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936040101,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,264][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,352][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,365][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testNormalizeLatLonValuesDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936040255,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,393][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,502][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,514][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,515][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936040387,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,544][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,699][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,812][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,812][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,813][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,813][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,813][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,814][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,814][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,814][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,814][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,815][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,815][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,815][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,815][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testOptionDeprecation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936040538,
  "executionTime": 301
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,846][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,892][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,960][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,960][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,962][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,962][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,963][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,963][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,964][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,964][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,967][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,967][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:40,967][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoPointMapperMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936040839,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,019][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,097][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,107][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,107][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,108][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041012,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,182][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,193][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,193][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayDynamic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041131,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,222][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,301][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,301][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,301][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValuesWithGeohash]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041216,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,343][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,343][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,344][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,345][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,345][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,351][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,351][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,352][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,353][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,395][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,529][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashSearch]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041334,
  "executionTime": 220
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,560][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,603][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,616][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,617][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041554,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,678][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,778][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,789][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,790][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testArrayLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041670,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,841][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,895][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,895][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041836,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,977][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:41,979][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testValidateLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936041921,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,028][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,081][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,082][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1473936042022,
  "executionTime": 84
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,106][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,107][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,107][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:42,109][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
  "startTimestamp": 1473936030969,
  "executionTime": 11151
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "children": [
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936042352
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042362,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042363,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042365,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042366,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042368,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042370,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1473936042372,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
  "startTimestamp": 1473936042352,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936042623
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042642,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042643,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042645,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042646,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042648,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042649,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1473936042651,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
  "startTimestamp": 1473936042623,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936042970
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042983,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042985,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042988,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042989,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042991,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1473936042992,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
  "startTimestamp": 1473936042970,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "children": [
    {
     "id": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldNotSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0LazyLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testNoParentNullFieldCreatedIfNoParentSpecified",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936043250
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,267][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,288][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,288][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,291][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,292][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,292][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,387][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,387][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,387][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,388][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ELSkH2ehRm-TaVhVGeaNuw}{22wtQgHSSMGMp7Goc1VyIg}{local}{local[60]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,388][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,396][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,410][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,446][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,457][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldNotSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1473936043261,
  "executionTime": 217
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,481][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testPost2Dot0LazyLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1473936043478,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,487][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,520][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,535][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1473936043481,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,558][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testPost2Dot0EagerLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1473936043556,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,564][INFO ][org.elasticsearch.index.mapper]  [_index] [ParentFieldMapperTests#testNoParentNullFieldCreatedIfNoParentSpecified]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1473936043559,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,571][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,612][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,643][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testParentSetInDocNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1473936043565,
  "executionTime": 102
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,667][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,667][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,668][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:43,669][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
  "startTimestamp": 1473936043250,
  "executionTime": 423
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMapperTests",
   "displayName": "org.elasticsearch.index.mapper.PathMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMapperTests",
   "children": [
    {
     "id": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "displayName": "testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "methodName": "testPathMapping",
     "className": "org.elasticsearch.index.mapper.PathMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936043727
 }
]

[
 "TEST_STARTED",
 "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,748][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,769][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,769][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,772][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,774][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,774][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,903][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,904][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,904][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,905][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{90LtgIrER8-Q8H4SsRXtDw}{V1X-CVKpR4WsKRIAHrCchg}{local}{local[61]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,906][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,916][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:43,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:44,002][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:44,013][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMapperTests#testPathMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
  "startTimestamp": 1473936043741,
  "executionTime": 298
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:44,039][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:44,039][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:44,040][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:44,041][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMapperTests",
  "startTimestamp": 1473936043727,
  "executionTime": 319
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.StringFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936044337
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1473936044357,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1473936044360,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1473936044362,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1473936044365,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1473936044367,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringFieldTypeTests",
  "startTimestamp": 1473936044337,
  "executionTime": 35
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "displayName": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "children": [
    {
     "id": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTextIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeRandomMapping",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradePositionGap",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIndexOptions",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeDefaults",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeFielddataSettings",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testNotSupportedUpgrade",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotIndexedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeKeywordIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testIllegalIndexValue",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936044554
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,574][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,595][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,595][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,598][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,601][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,601][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,753][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,754][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,754][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,755][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nsSpxaK3S0OmKdVSlKC1cg}{ZorJZQmQRjSqbSebViovlQ}{local}{local[62]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,755][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,764][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,785][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,826][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,835][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,836][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936044568,
  "executionTime": 287
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,941][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936044855,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:44,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,082][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,082][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936044976,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,142][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,197][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,210][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,211][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTextIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936045135,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,249][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,305][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,318][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test0] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,323][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,392][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,419][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,458][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,467][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,471][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,540][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,582][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,593][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test4] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,596][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,644][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,658][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,707][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,720][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,771][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test7] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,833][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test8] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,895][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test9] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,895][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test9] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,898][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,945][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,959][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test10] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:45,964][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,014][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,025][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test11] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,070][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,082][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test12] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,083][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test12] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,088][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,158][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,173][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test13] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,176][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,225][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,238][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test14] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,295][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,310][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test15] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,314][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,376][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,392][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test16] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,443][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,454][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,502][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,524][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,595][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,609][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test19] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:46,610][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test19] [StringMappingUpgradeTests#testUpgradeRandomMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936045241,
  "executionTime": 1952
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,198][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,286][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,295][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,295][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradePositionGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047193,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,357][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,366][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,366][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047318,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,393][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,432][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,443][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,443][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047389,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,469][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,506][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,516][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,558][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047464,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,584][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,630][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,630][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047578,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,661][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,710][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,720][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,721][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047656,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,770][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,872][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,874][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeFielddataSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047762,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:47,962][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,036][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936047954,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,109][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,204][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,234][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testNotSupportedUpgrade]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936048101,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,285][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,355][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,356][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotIndexedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936048269,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,543][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,564][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,565][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeKeywordIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936048389,
  "executionTime": 229
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,625][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,733][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,752][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testIllegalIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936048618,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,808][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,859][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,872][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,873][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1473936048801,
  "executionTime": 107
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,908][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,912][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,912][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:48,915][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:40:48 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 1 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
  "startTimestamp": 1473936044554,
  "executionTime": 4630
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testStrictnessDefault",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullFieldname",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCanBeFlippedOnIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCannotBeSet",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullType",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testLeftRightCanBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testExceptionOnMissingTypes",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullTypeString",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testNormalization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCannotBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936049278
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,318][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7scf-OloSkSQYzB9dvUNCQ}{local}{local[672]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,328][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,328][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,348][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,348][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,348][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,352][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,356][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,356][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,356][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,358][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,358][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,358][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,360][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,360][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,360][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,362][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,363][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,363][WARN ][org.elasticsearch.deprecation.index.mapper]  [QChCo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049310,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049393,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049395,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049469,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049472,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049476,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049482,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049504,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049507,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049510,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049514,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049517,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049605,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049614,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049617,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049620,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049622,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049627,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:5BEBDB019FC78B72]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testExceptionOnMissingTypes(GeoBoundingBoxQueryBuilderTests.java:123)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049630,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049634,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049636,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049639,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049643,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049645,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049698,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049701,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049708,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049715,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:49,720][INFO ][org.elasticsearch.index.query] top: -27.507245019078255 bottom: -30.964787621051073%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1473936049718,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
  "startTimestamp": 1473936049278,
  "executionTime": 462
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsNotProvided",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJsonDeprecatedSyntax",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsQueryWithInvalidValues",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936049804
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:40:49,834][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0iHS-L5ATiqwrClXiPgD8A}{local}{local[673]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:40:49,844][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:40:49,844][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049826,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049871,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049874,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049877,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049881,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049883,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049886,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "message": "test requires at least one type",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test requires at least one type\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:48151A8B0F150713]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.IdsQueryBuilderTests.testFromJsonDeprecatedSyntax(IdsQueryBuilderTests.java:124)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test requires at least one type",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049896,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049900,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049904,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049916,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1473936049920,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
  "startTimestamp": 1473936049804,
  "executionTime": 123
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
   "displayName": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testFromAndToXContent",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasChildQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasParentQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936050079
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050100,
  "executionTime": 300
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050400,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050403,
  "executionTime": 397
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050800,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050803,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050806,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936050811,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936051017,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936051024,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936051027,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1473936051030,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
  "startTimestamp": 1473936050079,
  "executionTime": 956
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScoreModeTests",
   "displayName": "org.elasticsearch.index.query.ScoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScoreModeTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936051186
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1473936051226,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1473936051228,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1473936051230,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1473936051233,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScoreModeTests",
  "startTimestamp": 1473936051186,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJsonVerbose",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936051485
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,512][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GL1wQUdpTAWB3sEex-puug}{local}{local[674]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,521][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,521][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,537][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,537][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,537][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,538][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,538][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,538][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,540][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,540][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:51,540][WARN ][org.elasticsearch.deprecation.index.mapper]  [nnHjMBq] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051503,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051541,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051552,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051554,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051557,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051573,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051582,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051585,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051595,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051599,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1473936051602,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
  "startTimestamp": 1473936051485,
  "executionTime": 125
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testClausesUnmodifiable",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936051747
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:51,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Lwd-mKRST9ql-BEiudTLKw}{local}{local[675]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:51,770][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:51,770][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051760,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051781,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051798,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051803,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051817,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051842,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051848,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051853,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051856,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051872,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1473936051875,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanOrQueryBuilderTests",
  "startTimestamp": 1473936051747,
  "executionTime": 137
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052014
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,033][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xxkNi2jZTzaCBxZWzOS7qg}{local}{local[676]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,038][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,038][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052030,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052047,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052061,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052069,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052072,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052075,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052107,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052113,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052129,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1473936052157,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
  "startTimestamp": 1473936052014,
  "executionTime": 155
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNullValues",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testGeo",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyFieldName",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testTermsQueryWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyTermsLookup",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testBothValuesAndLookupSet",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052283
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,302][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Y68RePCIRjWg1DFy9ft9Wg}{local}{local[677]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,309][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,309][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,325][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,328][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,328][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:52,328][WARN ][org.elasticsearch.deprecation.index.mapper]  [KvRUWl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052299,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052343,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052347,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052350,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052354,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052358,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052361,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052364,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052367,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052385,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052464,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052469,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052510,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052514,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052517,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1473936052520,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
  "startTimestamp": 1473936052283,
  "executionTime": 248
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmInfoTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmInfoTests",
   "children": [
    {
     "id": "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
     "displayName": "testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
     "methodName": "testUseG1GC",
     "className": "org.elasticsearch.monitor.jvm.JvmInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052609
 }
]

[
 "TEST_STARTED",
 "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
  "startTimestamp": 1473936052619,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmInfoTests",
  "startTimestamp": 1473936052609,
  "executionTime": 13
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmStatsTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmStatsTests",
   "children": [
    {
     "id": "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
     "displayName": "testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
     "methodName": "testJvmStats",
     "className": "org.elasticsearch.monitor.jvm.JvmStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052863
 }
]

[
 "TEST_STARTED",
 "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
  "startTimestamp": 1473936052875,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmStatsTests",
  "startTimestamp": 1473936052863,
  "executionTime": 17
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginInfoTests",
   "displayName": "org.elasticsearch.plugins.PluginInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginInfoTests",
   "children": [
    {
     "id": "ID#testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testPluginListSorted",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesBadJavaVersionFormat",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesOldElasticsearchVersion",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromProperties",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesVersionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesElasticsearchVersionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesJavaVersionIncompatible",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesJvmMissingClassname",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesDescriptionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesBogusElasticsearchVersion",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesJavaVersionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesNameMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053187
 }
]

[
 "TEST_STARTED",
 "ID#testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053199,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053201,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053252,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053265,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053275,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053284,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053296,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053307,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053317,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053324,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053332,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1473936053340,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginInfoTests",
  "startTimestamp": 1473936053187,
  "executionTime": 183
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.NativeScriptTests",
   "displayName": "org.elasticsearch.script.NativeScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.NativeScriptTests",
   "children": [
    {
     "id": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testNativeScript",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testFineGrainedSettingsDontAffectNativeScripts",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053425
 }
]

[
 "TEST_STARTED",
 "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1473936053436,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1473936053449,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.NativeScriptTests",
  "startTimestamp": 1473936053425,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextTests",
   "displayName": "org.elasticsearch.script.ScriptContextTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextTests",
   "children": [
    {
     "id": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownPluginScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownCustomScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomGlobalScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053698
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1473936053715,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1473936053722,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1473936053753,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1473936053762,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextTests",
  "startTimestamp": 1473936053698,
  "executionTime": 78
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
   "displayName": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
   "children": [
    {
     "id": "ID#testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053939
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1473936053950,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1473936053951,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1473936053953,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1473936053954,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
  "startTimestamp": 1473936053939,
  "executionTime": 18
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054200
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:40:54,219][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MpCR9zijTYa3wQ8LsDgnUw}{local}{local[678]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1473936054227,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1473936054229,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1473936054302,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
  "startTimestamp": 1473936054200,
  "executionTime": 109
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054455
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:40:54,475][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jDP5XaDxQQ2oSeUlKReJFA}{local}{local[679]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1473936054484,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1473936054489,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1473936054491,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
  "startTimestamp": 1473936054455,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054715
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:40:54,728][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{mt7_KW8gTmK85mJ5JblslQ}{local}{local[680]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
  "startTimestamp": 1473936054737,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
  "startTimestamp": 1473936054740,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
  "startTimestamp": 1473936054745,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
  "startTimestamp": 1473936054715,
  "executionTime": 35
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054975
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:54,989][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NeWzKDleQdiRfOOhcHUf6w}{local}{local[681]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1473936054996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1473936054998,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1473936055000,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
  "startTimestamp": 1473936054975,
  "executionTime": 29
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936055232
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:55,248][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{epNCl1WjSQ2vtFn7FnB3gw}{local}{local[682]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1473936055254,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1473936055257,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1473936055258,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
  "startTimestamp": 1473936055232,
  "executionTime": 32
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "children": [
    {
     "id": "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testHighlightPhrase",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointInPolygonQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointInBBoxQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointDistanceQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936055493
 }
]

[
 "TEST_STARTED",
 "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1473936055503,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1473936055650,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1473936055664,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1473936055669,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
  "startTimestamp": 1473936055493,
  "executionTime": 178
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "children": [
    {
     "id": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortDeprecatedSortModeException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortCanBeParsedFromGeoHash",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testIgnoreMalformedIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInJSON",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortParserManyPointsNoException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenNonStringField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInSetter",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenStringFieldButResetting",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testCoerceIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsBuildWhenInvalidGeoHashString",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936055762
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055832,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055834,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055856,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055858,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055860,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055862,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055884,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055891,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055894,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055896,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055898,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055904,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1473936055906,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
  "startTimestamp": 1473936055762,
  "executionTime": 158
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "children": [
    {
     "id": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testParseOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testIllegalOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936056026
 }
]

[
 "TEST_STARTED",
 "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056054,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056063,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056067,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056075,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056077,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056079,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1473936056084,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
  "startTimestamp": 1473936056026,
  "executionTime": 65
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "children": [
    {
     "id": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptionsOnStartObject",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseUnexpectedToken",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortType",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBadSortMode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeIllegalArgument",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeNull",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson_simple",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptions",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936056352
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056405,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056414,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056416,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056421,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056440,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056442,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056444,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056448,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056450,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056463,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056465,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1473936056469,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
  "startTimestamp": 1473936056352,
  "executionTime": 126
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.SortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortBuilderTests",
   "children": [
    {
     "id": "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testSingleFieldSort",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testRandomSortBuilders",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testMultiFieldSort",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936056617
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1473936056658,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1473936056661,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1473936056669,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortBuilderTests",
  "startTimestamp": 1473936056617,
  "executionTime": 57
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortModeTests",
   "displayName": "org.elasticsearch.search.sort.SortModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortModeTests",
   "children": [
    {
     "id": "ID#testSortMode(org.elasticsearch.search.sort.SortModeTests)",
     "displayName": "testSortMode(org.elasticsearch.search.sort.SortModeTests)",
     "methodName": "testSortMode",
     "className": "org.elasticsearch.search.sort.SortModeTests",
     "children": []
    },
    {
     "id": "ID#testParseNull(org.elasticsearch.search.sort.SortModeTests)",
     "displayName": "testParseNull(org.elasticsearch.search.sort.SortModeTests)",
     "methodName": "testParseNull",
     "className": "org.elasticsearch.search.sort.SortModeTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.search.sort.SortModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936056901
 }
]

[
 "TEST_STARTED",
 "ID#testSortMode(org.elasticsearch.search.sort.SortModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMode(org.elasticsearch.search.sort.SortModeTests)",
  "startTimestamp": 1473936056932,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNull(org.elasticsearch.search.sort.SortModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNull(org.elasticsearch.search.sort.SortModeTests)",
  "startTimestamp": 1473936056934,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)",
  "startTimestamp": 1473936056936,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortModeTests",
  "startTimestamp": 1473936056901,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortOrderTests",
   "displayName": "org.elasticsearch.search.sort.SortOrderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortOrderTests",
   "children": [
    {
     "id": "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testReadWrite",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testFromString(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    },
    {
     "id": "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testDistanceUnitNames",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936057198
 }
]

[
 "TEST_STARTED",
 "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1473936057227,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1473936057229,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1473936057231,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortOrderTests",
  "startTimestamp": 1473936057198,
  "executionTime": 37
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingMixed",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingBasic",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObject",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testParsingContextFromDocument",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936057479
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,513][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,555][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,556][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,559][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[11072], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,563][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,563][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,743][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,743][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,744][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,748][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{fVl6iTe7SsyovAn_kb4eAA}{_Wg8koihTfKpVpDTLwfYpQ}{local}{local[63]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,749][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,765][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,785][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:57,961][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936057502,
  "executionTime": 490
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,008][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936057993,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,015][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058011,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,023][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,104][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,124][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058016,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,184][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,566][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,677][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058176,
  "executionTime": 543
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,722][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058719,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,727][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058723,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,731][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058728,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,735][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testParsingContextFromDocument]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058732,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:58,743][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:59,108][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:59,274][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1473936058736,
  "executionTime": 610
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:59,346][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:59,349][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:59,349][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:59,399][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
  "startTimestamp": 1473936057479,
  "executionTime": 1930
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "children": [
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testNullCategoryIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936059658
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1473936059711,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1473936059715,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1473936059719,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
  "startTimestamp": 1473936059658,
  "executionTime": 65
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936059974
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1473936060027,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1473936060051,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1473936060144,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
  "startTimestamp": 1473936059974,
  "executionTime": 179
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
   "displayName": "org.elasticsearch.tasks.ListTasksResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.ListTasksResponseTests",
   "children": [
    {
     "id": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testNonEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936060370
 }
]

[
 "TEST_STARTED",
 "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1473936060432,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1473936060444,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
  "startTimestamp": 1473936060370,
  "executionTime": 79
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskIdTests",
   "displayName": "org.elasticsearch.tasks.TaskIdTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskIdTests",
   "children": [
    {
     "id": "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
     "displayName": "testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
     "methodName": "testSerializationOfEmpty",
     "className": "org.elasticsearch.tasks.TaskIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)",
     "displayName": "testSerialization(org.elasticsearch.tasks.TaskIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.tasks.TaskIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936060615
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
  "startTimestamp": 1473936060631,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)",
  "startTimestamp": 1473936060633,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskIdTests",
  "startTimestamp": 1473936060615,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskResultTests",
   "displayName": "org.elasticsearch.tasks.TaskResultTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskResultTests",
   "children": [
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    },
    {
     "id": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testBinaryRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936060865
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1473936060880,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1473936060886,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskResultTests",
  "startTimestamp": 1473936060865,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportModuleTests",
   "displayName": "org.elasticsearch.transport.TransportModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportModuleTests",
   "children": []
  },
  "startTimestamp": 1473936061174
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportModuleTests",
  "startTimestamp": 1473936061174,
  "executionTime": 1
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportServiceHandshakeTests",
   "displayName": "org.elasticsearch.transport.TransportServiceHandshakeTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
   "children": [
    {
     "id": "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testMismatchedClusterName",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testIncompatibleVersions",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testIgnoreMismatchedClusterName",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testConnectToNodeLight",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936061438
 }
]

[
 "TEST_STARTED",
 "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:01,821][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:02,181][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1473936061452,
  "executionTime": 835
 }
]

[
 "TEST_STARTED",
 "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:02,741][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:03,321][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1473936062287,
  "executionTime": 1042
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:03,758][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:04,181][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1473936063329,
  "executionTime": 865
 }
]

[
 "TEST_STARTED",
 "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:04,611][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:41:05,082][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1473936064194,
  "executionTime": 894
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportServiceHandshakeTests",
  "startTimestamp": 1473936061438,
  "executionTime": 3652
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "displayName": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "children": [
    {
     "id": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testSendRandomRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testBlockingIncomingRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTracerLog",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorldCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVoidMessageCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHostOnMessages",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testDisconnectListener",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testThreadContext",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testConcurrentSendRespondAndDisconnect",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testNotifyOnShutdown",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testErrorMessage",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockFailToSendNoConnectRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testLocalNodeConnection",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithDelayedResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorld",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithNeverSendingBackResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockUnresponsiveRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936065283
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,450][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,453][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,455][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936065441,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,509][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,510][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,510][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:05,512][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936065506,
  "executionTime": 895
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,406][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,407][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,407][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,427][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066401,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,447][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,449][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,449][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,464][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent to [{TS_B}{YpKp1H9cT1mMcH0egs63DQ}{local}{local[73]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,465][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,466][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,466][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received response from [{TS_B}{YpKp1H9cT1mMcH0egs63DQ}{local}{local[73]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,467][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] sent to [{TS_B}{YpKp1H9cT1mMcH0egs63DQ}{local}{local[73]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,468][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,469][TRACE][org.elasticsearch.test.transport.tracer] [1][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,470][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received response from [{TS_B}{YpKp1H9cT1mMcH0egs63DQ}{local}{local[73]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,472][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.include] from [[]] to [[\"test\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,472][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.exclude] from [[\"internal:discovery/zen/fd*\",\"cluster:monitor/nodes/liveness\"]] to [[\"DOESN'T_MATCH\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,472][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent to [{TS_B}{YpKp1H9cT1mMcH0egs63DQ}{local}{local[73]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,473][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,473][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,474][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received response from [{TS_B}{YpKp1H9cT1mMcH0egs63DQ}{local}{local[73]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,474][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [3][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,475][TRACE][org.elasticsearch.test.transport.tracer] [3][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066441,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,486][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,487][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,487][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066480,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,523][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,524][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,524][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066519,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,552][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,552][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,552][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066549,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,562][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,564][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,564][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066558,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,576][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,577][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,577][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066571,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,594][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,595][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,595][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066589,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,606][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,607][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,608][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,619][INFO ][org.elasticsearch.test.transport] [TS_B_0] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,621][INFO ][org.elasticsearch.test.transport] [TS_B_3] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,623][INFO ][org.elasticsearch.test.transport] [TS_B_6] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,625][INFO ][org.elasticsearch.test.transport] [TS_B_9] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066602,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,651][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,653][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,653][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,657][INFO ][org.elasticsearch.transport.local] [node_s_0] Stop ServiceB now%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066648,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,664][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[94]}, bound_addresses {local[94]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,665][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[95]}, bound_addresses {local[95]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,666][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066661,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,679][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[96]}, bound_addresses {local[96]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,681][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[97]}, bound_addresses {local[97]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:06,681][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936066675,
  "executionTime": 361
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,040][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[98]}, bound_addresses {local[98]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,041][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[99]}, bound_addresses {local[99]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,041][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936067036,
  "executionTime": 237
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,278][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[100]}, bound_addresses {local[100]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,280][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[101]}, bound_addresses {local[101]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,280][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936067273,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,306][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[102]}, bound_addresses {local[102]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,307][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[103]}, bound_addresses {local[103]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,307][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,533][WARN ][org.elasticsearch.test.transport] [TS_B] Received response for a request that has timed out, sent [214ms] ago, timed out [105ms] ago, action [sayHelloTimeoutDelayedResponse], node [{TS_A}{E1-yrkbuQEWr3A68JBlnjQ}{local}{local[102]}], id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936067302,
  "executionTime": 235
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,541][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[104]}, bound_addresses {local[104]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,542][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[105]}, bound_addresses {local[105]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,542][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936067537,
  "executionTime": 369
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,910][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[106]}, bound_addresses {local[106]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,911][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[107]}, bound_addresses {local[107]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:07,911][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936067906,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:08,115][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[108]}, bound_addresses {local[108]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:08,116][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[109]}, bound_addresses {local[109]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:08,117][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936068112,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:08,224][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[110]}, bound_addresses {local[110]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:08,225][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[111]}, bound_addresses {local[111]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:41:08,225][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1473936068219,
  "executionTime": 433
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
  "startTimestamp": 1473936065283,
  "executionTime": 3371
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tribe.TribeServiceTests",
   "displayName": "org.elasticsearch.tribe.TribeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.tribe.TribeServiceTests",
   "children": [
    {
     "id": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testPassthroughSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testMinimalSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testEnvironmentSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936068849
 }
]

[
 "TEST_STARTED",
 "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1473936068882,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1473936068889,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1473936068892,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tribe.TribeServiceTests",
  "startTimestamp": 1473936068849,
  "executionTime": 47
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.FileWatcherTests",
   "displayName": "org.elasticsearch.watcher.FileWatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.FileWatcherTests",
   "children": [
    {
     "id": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testEmptyDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoFileOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleFileOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoDirectoryOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testFileReplacingDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNestedDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936069122
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069153,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069197,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069211,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069217,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069231,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069241,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1473936069258,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.FileWatcherTests",
  "startTimestamp": 1473936069122,
  "executionTime": 185
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "displayName": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    },
    {
     "id": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testHandle",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936069385
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1473936069400,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1473936069405,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
  "startTimestamp": 1473936069385,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

