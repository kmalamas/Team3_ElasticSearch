[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "12196@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0",
   "junit4.childvm.id": "0",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "12196@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160918_131412_265.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160918_131412_265.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "DB64F96F238DCA2A",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.CidrsTests",
   "displayName": "org.elasticsearch.common.network.CidrsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.CidrsTests",
   "children": [
    {
     "id": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidSpecificCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingDot",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingSlash",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testNullCidr",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testRandomValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificNetworkMaskCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificOctetCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197253913
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197260245,
  "executionTime": 544
 }
]

[
 "TEST_STARTED",
 "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197260789,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197260807,
  "executionTime": 2630
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197263437,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197263446,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197263458,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197263465,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197263494,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474197263505,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.CidrsTests",
  "startTimestamp": 1474197253913,
  "executionTime": 9723
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "displayName": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "children": [
    {
     "id": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "displayName": "testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "methodName": "testCloseDeleteCallback",
     "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197263743
 }
]

[
 "TEST_STARTED",
 "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:24,569][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:25,041][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:25,043][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:25,050][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:25,068][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:25,068][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:36,681][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:36,682][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:36,704][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:36,824][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Rufc5gj2TDyAA8v6uHoSbA}{RkoC_6W8QLuQBIeO8_YdFA}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:36,869][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:37,087][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:37,630][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:38,341][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:38,508][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesLifecycleListenerSingleNodeTests#testCloseDeleteCallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
  "startTimestamp": 1474197263801,
  "executionTime": 14731
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:38,533][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:38,537][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:38,537][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:14:38,552][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
  "startTimestamp": 1474197263743,
  "executionTime": 14821
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "displayName": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedValues",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedAPIs",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testCollision",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197278574
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474197278628,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474197278675,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474197278678,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474197278682,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
  "startTimestamp": 1474197278574,
  "executionTime": 116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "displayName": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "children": [
    {
     "id": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testBlockIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsDelayedIfBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testActiveOperationsCount",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testAllOperationsInvoked",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsInvokedImmediatelyIfNoBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197278709
 }
]

[
 "TEST_STARTED",
 "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474197278775,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474197278783,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474197278798,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474197278847,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474197278859,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474197279011,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
  "startTimestamp": 1474197278709,
  "executionTime": 310
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197279029
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,175][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,247][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,248][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,275][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,280][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,280][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,799][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,799][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,800][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,819][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZtiTiI71SYGIVGSHSwcL0w}{vRtABnbcReioFYcg7ARrMw}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,822][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,925][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:39,982][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,173][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,659][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/vD98VS86ReKW2i-lwarxOw] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,865][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/vD98VS86ReKW2i-lwarxOw] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,878][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMatchDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1474197279148,
  "executionTime": 1824
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,973][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,974][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,975][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:14:40,978][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
  "startTimestamp": 1474197279029,
  "executionTime": 1971
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197281020
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:41,214][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{C3wV_fi_SaOxQNKmzt8m3g}{local}{local[2]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474197281277,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474197281363,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474197281376,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
  "startTimestamp": 1474197281020,
  "executionTime": 373
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.VersionTests",
   "displayName": "org.elasticsearch.VersionTests",
   "methodName": null,
   "className": "org.elasticsearch.VersionTests",
   "children": [
    {
     "id": "ID#testIsBeta(org.elasticsearch.VersionTests)",
     "displayName": "testIsBeta(org.elasticsearch.VersionTests)",
     "methodName": "testIsBeta",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "displayName": "testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "methodName": "testVersionNoPresentInSettings",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooShortVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
     "displayName": "testVersionComparison(org.elasticsearch.VersionTests)",
     "methodName": "testVersionComparison",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "displayName": "testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "methodName": "testCURRENTIsLatest",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "displayName": "testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "methodName": "testAllVersionsMatchId",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "displayName": "testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "methodName": "testIndexCreatedVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseLenient(org.elasticsearch.VersionTests)",
     "displayName": "testParseLenient(org.elasticsearch.VersionTests)",
     "methodName": "testParseLenient",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.VersionTests)",
     "displayName": "testToString(org.elasticsearch.VersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testWrongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseVersion(org.elasticsearch.VersionTests)",
     "displayName": "testParseVersion(org.elasticsearch.VersionTests)",
     "methodName": "testParseVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "displayName": "testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "methodName": "testLuceneVersionIsSameOnMinorRelease",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "displayName": "testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "methodName": "testVersionConstantPresent",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooLongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
     "displayName": "testIsAlpha(org.elasticsearch.VersionTests)",
     "methodName": "testIsAlpha",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
     "displayName": "testMinCompatVersion(org.elasticsearch.VersionTests)",
     "methodName": "testMinCompatVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197281406
 }
]

[
 "TEST_STARTED",
 "ID#testIsBeta(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBeta(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281453,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281458,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281461,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionComparison(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281464,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281469,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,476][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,491][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,491][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-rc1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,492][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,493][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,494][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,494][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,494][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,494][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,495][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,495][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,495][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,495][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.4.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,496][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,496][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,496][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,496][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,497][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:44:41,497][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha6%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281474,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281498,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseLenient(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseLenient(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281501,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281511,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281514,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281517,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281527,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281543,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281549,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAlpha(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281554,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinCompatVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474197281557,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.VersionTests",
  "startTimestamp": 1474197281406,
  "executionTime": 156
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197281570
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474197281599,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474197281605,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474197281607,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474197281610,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
  "startTimestamp": 1474197281570,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithStringField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnsupportedFuzzinessForStringType",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithNumericField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197281654
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:41,884][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{714kbdSnSrienL434DswhA}{local}{local[3]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:41,895][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:41,895][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:41,968][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:41,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:41,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:42,083][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:42,083][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:42,084][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:42,090][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:42,090][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:14:42,090][WARN ][org.elasticsearch.deprecation.index.mapper]  [PJMYcRqtL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197281833,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282136,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282163,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282170,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282181,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282186,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282199,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282206,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282210,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282235,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282251,
  "executionTime": 723
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197282978,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197283103,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474197283107,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
  "startTimestamp": 1474197281654,
  "executionTime": 1512
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "displayName": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "children": [
    {
     "id": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOperationExecution",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestsAreNotSentToFailedMaster",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOneRequestIsSentToEachNodeHoldingAShard",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testResultAggregation",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197283184
 }
]

[
 "TEST_STARTED",
 "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,278][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bD0LBZODSCitvAy5px-eOw}{local}{local[4]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,305][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{ISehVu7FR0qavt9jr-T25A}{local}{local[7]}, previous {node}{bD0LBZODSCitvAy5px-eOw}{local}{local[4]}}, removed {{node}{bD0LBZODSCitvAy5px-eOw}{local}{local[4]},}, added {{node_1}{Le-Rg4R_QW-nanU7_dDO_Q}{local}{local[6]},{node_2}{ISehVu7FR0qavt9jr-T25A}{local}{local[7]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474197283268,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,322][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6v3qVXEjSj2I4DOIN9OW4w}{local}{local[10]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,325][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{mr6xz4mnQTGTTJTuVedTXg}{local}{local[14]}, previous {node}{6v3qVXEjSj2I4DOIN9OW4w}{local}{local[10]}}, removed {{node}{6v3qVXEjSj2I4DOIN9OW4w}{local}{local[10]},}, added {{node_1}{7hMX_aEUR0eNA2XKF83Gyg}{local}{local[12]},{node_3}{mr6xz4mnQTGTTJTuVedTXg}{local}{local[14]},{node_2}{0gOUwkugRdCzak4vUyF-kw}{local}{local[13]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,326][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_3}{mr6xz4mnQTGTTJTuVedTXg}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474197283316,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,349][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GD3N5074T1GL4_swwDkGWg}{local}{local[17]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,352][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{UK_fJAzBQcWCeE_sDsRi2A}{local}{local[20]}, previous {node}{GD3N5074T1GL4_swwDkGWg}{local}{local[17]}}, removed {{node}{GD3N5074T1GL4_swwDkGWg}{local}{local[17]},}, added {{node_1}{LmbRmQp2QpSnmUx6ze-1Tw}{local}{local[19]},{node_2}{UK_fJAzBQcWCeE_sDsRi2A}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474197283335,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,361][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SXi8ZDEyRTO3m-WM36Nj6A}{local}{local[23]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,364][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{KYaLfdwqT6SWfuXEupLPOA}{local}{local[26]}, previous {node}{SXi8ZDEyRTO3m-WM36Nj6A}{local}{local[23]}}, removed {{node}{SXi8ZDEyRTO3m-WM36Nj6A}{local}{local[23]},}, added {{node_1}{MLzsR574S2i-WZWy5x7tYg}{local}{local[25]},{node_2}{KYaLfdwqT6SWfuXEupLPOA}{local}{local[26]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474197283356,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,376][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{A_uE4Qn7RKyDqETTJmlAtA}{local}{local[29]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,380][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_4}{gl7_jCpqRAmcCW8P0OaJUw}{local}{local[34]}, previous {node}{A_uE4Qn7RKyDqETTJmlAtA}{local}{local[29]}}, removed {{node}{A_uE4Qn7RKyDqETTJmlAtA}{local}{local[29]},}, added {{node_1}{vA9b9G_XRL-2RXs8TcWX2g}{local}{local[31]},{node_3}{jhjtv5b-SsyV2DYwhCftmA}{local}{local[33]},{node_4}{gl7_jCpqRAmcCW8P0OaJUw}{local}{local[34]},{node_2}{bSbpdQCsRWKxzVvQRJtMDA}{local}{local[32]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474197283366,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,387][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{p_KUtqzVTZekipUnuSS1rA}{local}{local[37]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:14:43,391][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{DKgqIcgGQmG2TYMdfPUmMw}{local}{local[40]}, previous {node}{p_KUtqzVTZekipUnuSS1rA}{local}{local[37]}}, removed {{node}{p_KUtqzVTZekipUnuSS1rA}{local}{local[37]},}, added {{node_1}{IHZ1RXxxRQWT19jHt2Y2Yw}{local}{local[39]},{node_2}{DKgqIcgGQmG2TYMdfPUmMw}{local}{local[40]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474197283382,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
  "startTimestamp": 1474197283184,
  "executionTime": 215
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "displayName": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "children": [
    {
     "id": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testShouldIgnoreNewClusterState",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    },
    {
     "id": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testFilterNonMasterPingResponse",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197283420
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:44:43,688][WARN ][org.elasticsearch.discovery.zen] received a cluster state from a different master than the current one, rejecting (received {a}{8DpxoDxLTaO9ARKsQZUIRA}{local}{local[44]}, current {b}{I6gh42OjRWC4YALNC-sJYA}{local}{local[45]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1474197283643,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1474197283691,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
  "startTimestamp": 1474197283420,
  "executionTime": 445
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsNotProvided",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJsonDeprecatedSyntax",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsQueryWithInvalidValues",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197283874
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,650][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Es9AaIbPSHOsYGUU1AIsbg}{local}{local[62]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,688][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,688][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,876][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,876][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,878][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,899][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,984][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,984][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:44,988][WARN ][org.elasticsearch.deprecation.index.mapper]  [zoHSZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197284618,
  "executionTime": 378
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197284997,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285001,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285085,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:45,146][WARN ][org.elasticsearch.deprecation.common] Deprecated field [_type] used, expected [type] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:45,148][WARN ][org.elasticsearch.deprecation.common] Deprecated field [_type] used, expected [type] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285143,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285167,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285206,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285215,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285368,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285415,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285501,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285509,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474197285514,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
  "startTimestamp": 1474197283874,
  "executionTime": 1654
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
   "displayName": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "children": [
    {
     "id": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd3",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd2",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testMaxConcurrentSearchRequests",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testResponseErrorToXContent",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd4",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197285549
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474197285601,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474197285678,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474197285696,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474197285709,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474197285711,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474197285722,
  "executionTime": 39
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
  "startTimestamp": 1474197285549,
  "executionTime": 231
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "children": [
    {
     "id": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "displayName": "testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "methodName": "testResetRootDocId",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197285790
 }
]

[
 "TEST_STARTED",
 "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:45,950][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:45,983][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:45,983][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:45,988][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:45,991][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:45,991][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,204][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,204][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,205][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HoeRHZ1dSCuQL3XzsZHBZw}{m-A9RIGATyWrSWFA9DwT9w}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,210][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,229][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:46,981][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:47,201][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:48,750][INFO ][org.elasticsearch.search.aggregations.bucket.nested] [NestedAggregatorTests#testResetRootDocId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
  "startTimestamp": 1474197285930,
  "executionTime": 2901
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:48,832][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:48,833][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:48,833][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:48,838][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
  "startTimestamp": 1474197285790,
  "executionTime": 3060
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexTests",
   "displayName": "org.elasticsearch.index.IndexTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.index.IndexTests)",
     "displayName": "testXContent(org.elasticsearch.index.IndexTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.index.IndexTests)",
     "displayName": "testToString(org.elasticsearch.index.IndexTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197288857
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1474197288964,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1474197288978,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexTests",
  "startTimestamp": 1474197288857,
  "executionTime": 129
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
   "displayName": "org.elasticsearch.tasks.ListTasksResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.ListTasksResponseTests",
   "children": [
    {
     "id": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testNonEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197288995
 }
]

[
 "TEST_STARTED",
 "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1474197289159,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1474197289193,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
  "startTimestamp": 1474197288995,
  "executionTime": 218
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "displayName": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "children": [
    {
     "id": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testParseSettings",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    },
    {
     "id": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testInvalidValues",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197289220
 }
]

[
 "TEST_STARTED",
 "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1474197289270,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1474197289272,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
  "startTimestamp": 1474197289220,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "displayName": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "children": [
    {
     "id": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnBools",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnLongs",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnDoubles",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testFieldDataCacheListener",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testGetForFieldDefaults",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testSetCacheListenerTwice",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197289286
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:49,381][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:49,422][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:49,422][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:49,442][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:49,446][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:49,446][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,082][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,082][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,083][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,111][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{cWMSEj-UQB6wQNZxY-VAIg}{SMuVmC80RnOeoemH1HfD7Q}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,113][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,262][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,473][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnBools]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474197289355,
  "executionTime": 1123
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,716][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnLongs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474197290478,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,765][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnDoubles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474197290719,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:50,926][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,094][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testFieldDataCacheListener]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474197290768,
  "executionTime": 435
 }
]

[
 "TEST_STARTED",
 "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,224][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,317][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,345][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testGetForFieldDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474197291204,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,393][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,494][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,520][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testSetCacheListenerTwice]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474197291385,
  "executionTime": 357
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,744][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,745][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,745][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:14:51,750][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
  "startTimestamp": 1474197289286,
  "executionTime": 2485
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
   "displayName": "org.elasticsearch.monitor.fs.FsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.FsProbeTests",
   "children": [
    {
     "id": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testIoStats",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    },
    {
     "id": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testFsInfo",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197291780
 }
]

[
 "TEST_STARTED",
 "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1474197292000,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:52,093][INFO ][org.elasticsearch.env    ] [ZdMcCWx] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:52,094][INFO ][org.elasticsearch.env    ] [ZdMcCWx] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1474197292061,
  "executionTime": 77
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
  "startTimestamp": 1474197291780,
  "executionTime": 365
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testFieldsParsing",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197292155
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474197292239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474197292241,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474197292247,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474197292252,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1474197292155,
  "executionTime": 116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "children": [
    {
     "id": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testIsUpgraded",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197292280
 }
]

[
 "TEST_STARTED",
 "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474197292375,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:14:52,412 TEST-MetaDataIndexUpgradeServiceTests.testArchiveBrokenIndexSettings-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.archiveUnknownOrBrokenSettings(AbstractScopedSettings.java:525)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.archiveBrokenIndexSettings(MetaDataIndexUpgradeService.java:176)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests.testArchiveBrokenIndexSettings(MetaDataIndexUpgradeServiceTests.java:39)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:14:52,433 TEST-MetaDataIndexUpgradeServiceTests.testArchiveBrokenIndexSettings-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.archiveUnknownOrBrokenSettings(AbstractScopedSettings.java:525)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.archiveBrokenIndexSettings(MetaDataIndexUpgradeService.java:176)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests.testArchiveBrokenIndexSettings(MetaDataIndexUpgradeServiceTests.java:44)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:14:52,438][WARN ][org.elasticsearch.common.settings] [node_s_0] found unknown setting: index.refresh.interval value: -1 - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474197292382,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:14:52,449 TEST-MetaDataIndexUpgradeServiceTests.testUpgrade-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.archiveUnknownOrBrokenSettings(AbstractScopedSettings.java:525)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.archiveBrokenIndexSettings(MetaDataIndexUpgradeService.java:176)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeService.upgradeIndexMetaData(MetaDataIndexUpgradeService.java:74)%0D%0A%09at org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests.testUpgrade(MetaDataIndexUpgradeServiceTests.java:62)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474197292444,
  "executionTime": 63
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
  "startTimestamp": 1474197292280,
  "executionTime": 234
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "children": [
    {
     "id": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTemplateOrder",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testTypeNotCreatedOnIndexFailure",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionEnabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDefaultFloatingPointMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingsNotNeeded",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionDefault",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testReuseExistingMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testField",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTrue",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIncremental",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrict",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIntroduceTwoFields",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testInnerDynamicMapping",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testMixTemplateMultiFieldAndMappingReuse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testObject",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testComplexArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingOnEmptyString",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197292528
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:52,607][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:52,821][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:52,821][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:52,826][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:52,831][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:52,831][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,393][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,393][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,397][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,480][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{3qmYq3m8RzO2V2r6tfh4ag}{Ei5LDYgHTmqONss9HWoarA}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,489][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,787][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,826][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:53,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,116][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/84IHlfUYTT6JmA9Fw2gt3g] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,245][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTemplateOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197292596,
  "executionTime": 1756
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,364][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,425][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,454][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197294352,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,798][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testTypeNotCreatedOnIndexFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197294492,
  "executionTime": 391
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,893][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,018][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/uEq3Mrf9TluJg7QiNY84rA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,095][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/uEq3Mrf9TluJg7QiNY84rA] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,122][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197294883,
  "executionTime": 297
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,191][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,285][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDefaultFloatingPointMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197295180,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,389][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,466][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,483][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingsNotNeeded]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197295380,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,558][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,645][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,663][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrictWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197295549,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,776][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/SfhW9biKSG-Y4QohJ0Ac1Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,816][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/SfhW9biKSG-Y4QohJ0Ac1Q] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197295711,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,891][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,971][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,131][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testReuseExistingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197295877,
  "executionTime": 283
 }
]

[
 "TEST_STARTED",
 "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,168][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,254][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197296160,
  "executionTime": 410
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,580][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,836][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,851][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTrue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197296570,
  "executionTime": 334
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,915][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,007][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalseWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197296905,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,153][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,213][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,233][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIncremental]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197297146,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,314][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,417][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197297305,
  "executionTime": 198
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,516][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,711][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197297503,
  "executionTime": 242
 }
]

[
 "TEST_STARTED",
 "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,757][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,936][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIntroduceTwoFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197297745,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,986][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,066][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,474][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testInnerDynamicMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197297976,
  "executionTime": 572
 }
]

[
 "TEST_STARTED",
 "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,572][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,822][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,867][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testMixTemplateMultiFieldAndMappingReuse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197298549,
  "executionTime": 353
 }
]

[
 "TEST_STARTED",
 "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,910][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,976][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,990][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197298902,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,057][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,217][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testComplexArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197299048,
  "executionTime": 218
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,280][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,377][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,400][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/U3vKwH8_Rc6yHZ0adja2Rw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,431][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingOnEmptyString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474197299267,
  "executionTime": 212
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,479][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,481][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,481][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,483][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
  "startTimestamp": 1474197292528,
  "executionTime": 6970
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "displayName": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "children": [
    {
     "id": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatFieldMappingBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatCustomBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197299513
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,589][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,679][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,679][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,683][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,686][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,686][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,851][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,851][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,854][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,877][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{NEmubR98SP-Re-rBJIrI5g}{hsW2k6JsRg-uk4L-Ce9VyQ}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,879][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:59,928][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,060][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,149][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,239][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [text] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[text][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,339][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text] [CustomBoostMappingTests#testBackCompatFieldMappingBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1474197299568,
  "executionTime": 829
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,404][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,460][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,473][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,474][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CustomBoostMappingTests#testBackCompatCustomBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1474197300397,
  "executionTime": 107
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,504][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,505][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,506][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:00,509][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
  "startTimestamp": 1474197299513,
  "executionTime": 1017
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "displayName": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "children": [
    {
     "id": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "displayName": "testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "methodName": "testConcurrentAccess",
     "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197300538
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
  "startTimestamp": 1474197300562,
  "executionTime": 25
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
  "startTimestamp": 1474197300538,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197300596
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,621][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,636][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,636][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,639][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,642][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,642][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,783][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,784][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,784][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,786][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7fJIwtGRRi2J-4JqmAPOig}{sH6o0tmARUqdnXn7lNZPPA}{local}{local[7]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,787][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:00,803][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:02,684][INFO ][org.elasticsearch.common.util] [node_s_0] [LongObjectHashMapTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1474197300615,
  "executionTime": 2070
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:02,686][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:02,687][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:02,687][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:02,688][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1474197300596,
  "executionTime": 2099
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302700
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:02,753][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{v62A-5CfTCKmp0HCRN8w-w}{local}{local[79]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474197302764,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474197302769,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474197302775,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
  "startTimestamp": 1474197302700,
  "executionTime": 102
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "children": [
    {
     "id": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testIgnoreMalformedIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenNonStringField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInSetter",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortDeprecatedSortModeException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenStringFieldButResetting",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testCoerceIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsBuildWhenInvalidGeoHashString",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInJSON",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortParserManyPointsNoException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortCanBeParsedFromGeoHash",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302825
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197302884,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197302926,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197302928,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197302970,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197302972,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303041,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303044,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303046,
  "executionTime": 165
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303211,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303225,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303228,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303234,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303236,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474197303244,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
  "startTimestamp": 1474197302825,
  "executionTime": 426
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "children": [
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303268
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,298][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,300][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,312][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,313][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,313][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,314][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,315][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, assign%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,316][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the primaries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,318][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,320][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] kill one node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,329][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,329][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,335][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,336][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474197303287,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,344][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,348][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,350][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,351][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,352][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test1][2], [test][0], [test1][0], [test][1], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474197303337,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,359][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,360][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,366][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][0], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,366][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,368][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:03,369][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474197303353,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
  "startTimestamp": 1474197303268,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.MultiCommandTests",
   "displayName": "org.elasticsearch.cli.MultiCommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.MultiCommandTests",
   "children": [
    {
     "id": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testNoCommandsConfigured",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandArguments",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testMissingCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testUnknownCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303392
 }
]

[
 "TEST_STARTED",
 "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474197303448,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474197303581,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474197303698,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474197303703,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474197303708,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474197303710,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.MultiCommandTests",
  "startTimestamp": 1474197303392,
  "executionTime": 324
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "children": [
    {
     "id": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSingleSentences",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceMiddle",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceEnd",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testBreakOnCustomSeparator",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testFirstPosition",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceStart",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303723
 }
]

[
 "TEST_STARTED",
 "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474197303786,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474197303789,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474197303791,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474197303793,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474197303795,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474197303797,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
  "startTimestamp": 1474197303723,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "children": [
    {
     "id": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmptyAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNullAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultFieldParsing",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testNegativeFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainOp",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIndexMetaField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultEmptyComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmpty",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullLocale",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMinimumShouldMatch",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldsCannotBeSetToNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultOperatorHandling",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303813
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:03,892][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{j-AlDENERSKTRVbQmKKDyA}{local}{local[89]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:03,909][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:03,910][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197303843,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:29EDF94C8F750C93]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.SimpleQueryStringBuilderTests.testToQueryBoost(SimpleQueryStringBuilderTests.java:291)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197303932,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197303964,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304014,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304020,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304023,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304025,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304028,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304061,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304065,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304068,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304070,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304073,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304076,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304079,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304082,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304089,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304092,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304094,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304104,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304107,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304110,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304113,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304193,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304200,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474197304203,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
  "startTimestamp": 1474197303813,
  "executionTime": 398
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "children": [
    {
     "id": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197304263
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474197304297,
  "executionTime": 1522
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474197305820,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474197305833,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474197305868,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474197305874,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474197305877,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
  "startTimestamp": 1474197304263,
  "executionTime": 1621
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "children": [
    {
     "id": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testCacheDifferentReaders",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testEviction",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testClearAllEntityIdentity",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testBasicOperationsCache",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197305891
 }
]

[
 "TEST_STARTED",
 "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474197305941,
  "executionTime": 340
 }
]

[
 "TEST_STARTED",
 "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,616][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474197306281,
  "executionTime": 395
 }
]

[
 "TEST_STARTED",
 "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,846][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474197306676,
  "executionTime": 196
 }
]

[
 "TEST_STARTED",
 "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474197306872,
  "executionTime": 44
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
  "startTimestamp": 1474197305891,
  "executionTime": 1091
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "children": [
    {
     "id": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested2",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testNestedArrayStrict",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testSingleNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testLimitOfNestedFieldsPerIndex",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiRootAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testEmptyNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197306990
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,015][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,041][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,041][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,045][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,047][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,048][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,184][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,184][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,185][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{XhxuqeXkRMyRuc9_17Qo3w}{0AfR6yt-R_q_TlArM6Sfaw}{local}{local[8]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,210][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,244][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,267][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,386][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,402][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197307006,
  "executionTime": 428
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,442][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,548][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197307434,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,598][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,683][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testNestedArrayStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197307591,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,737][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,906][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:07,931][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197307730,
  "executionTime": 333
 }
]

[
 "TEST_STARTED",
 "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,196][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testSingleNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197308063,
  "executionTime": 165
 }
]

[
 "TEST_STARTED",
 "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,236][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,388][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,409][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,469][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,491][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,576][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,596][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,699][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,765][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test5] [NestedObjectMapperTests#testLimitOfNestedFieldsPerIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197308229,
  "executionTime": 720
 }
]

[
 "TEST_STARTED",
 "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:08,956][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,005][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,021][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiRootAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197308950,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,163][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,197][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testEmptyNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474197309067,
  "executionTime": 179
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,247][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,247][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,248][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:09,250][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
  "startTimestamp": 1474197306990,
  "executionTime": 2271
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197309271
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309303,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309314,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309324,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309326,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309331,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309339,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474197309341,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
  "startTimestamp": 1474197309271,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JNANativesTests",
   "displayName": "org.elasticsearch.bootstrap.JNANativesTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JNANativesTests",
   "children": [
    {
     "id": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testMlockall",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    },
    {
     "id": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testConsoleCtrlHandler",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197309367
 }
]

[
 "TEST_STARTED",
 "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1474197309406,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1474197309408,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JNANativesTests",
  "startTimestamp": 1474197309367,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "children": [
    {
     "id": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "displayName": "testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "methodName": "testRenameTempFiles",
     "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197309418
 }
]

[
 "TEST_STARTED",
 "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,468][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,498][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,498][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,508][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,511][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,511][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,719][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,719][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,720][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,727][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{DTeV7hyOTFS89RAROiUlfA}{0e92mZ7OSUONl1iQBNQFjA}{local}{local[9]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,728][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,753][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,861][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,929][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] [RecoveryStatusTests#testRenameTempFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
  "startTimestamp": 1474197309448,
  "executionTime": 517
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,965][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,978][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,979][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,981][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
  "startTimestamp": 1474197309418,
  "executionTime": 708
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataTests",
   "children": [
    {
     "id": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testSortableLongBitsToDoubles",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testDoublesToSortableLongBits",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310135
 }
]

[
 "TEST_STARTED",
 "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1474197310164,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1474197310234,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
  "startTimestamp": 1474197310135,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testSingleRetryOnIgnore",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testFailedAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310248
 }
]

[
 "TEST_STARTED",
 "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1474197310307,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,344][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1474197310328,
  "executionTime": 25
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
  "startTimestamp": 1474197310248,
  "executionTime": 252
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "children": [
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310555
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474197310600,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474197310603,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474197310606,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474197310609,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474197310611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474197310614,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
  "startTimestamp": 1474197310555,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "children": [
    {
     "id": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "displayName": "testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "methodName": "testSimpleFailedNodeTest",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310625
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:10,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 4 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:10,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:10,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:10,698][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:10,698][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove 2 nodes where primaries are allocated, reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:10,700][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
  "startTimestamp": 1474197310685,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
  "startTimestamp": 1474197310625,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310729
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310749,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310777,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310785,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310793,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310802,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310815,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310826,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474197310835,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1474197310729,
  "executionTime": 133
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
   "displayName": "org.elasticsearch.index.mapper.MapperServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MapperServiceTests",
   "children": [
    {
     "id": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTotalFieldsExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameStartsWithIllegalDot",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypes",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMergeWithMap",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testUnmappedFieldType",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMappingDepthExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameTooLong",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testIndexIntoDefaultMapping",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310870
 }
]

[
 "TEST_STARTED",
 "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:10,899][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:10,926][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:10,927][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:10,930][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:10,933][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:10,933][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,116][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,116][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,117][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,119][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{s6VGr1ZIQIOVyGQgUQi7HQ}{-loa-CtXQl-S2uP9SPn_EA}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,120][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,137][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,168][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,255][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test1] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,261][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,333][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,335][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testTotalFieldsExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197310890,
  "executionTime": 492
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,396][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test-index] [MapperServiceTests#testTypeNameStartsWithIllegalDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197311383,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,403][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,488][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,505][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testTypes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197311397,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,545][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,643][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testMergeWithMap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197311537,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,714][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,815][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [index] [unmapped_type:string] should be replaced with [unmapped_type:keyword]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,815][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index] [MapperServiceTests#testUnmappedFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197311694,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,893][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:11,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,043][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,150][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,167][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testMappingDepthExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197311862,
  "executionTime": 387
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,277][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text-index] [MapperServiceTests#testTypeNameTooLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197312249,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,365][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,459][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2] [MapperServiceTests#testIndexIntoDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474197312278,
  "executionTime": 257
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,535][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,535][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,536][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:12,537][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
  "startTimestamp": 1474197310870,
  "executionTime": 1684
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "displayName": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "children": [
    {
     "id": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "displayName": "testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "methodName": "testCompareParsingTokens",
     "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197312560
 }
]

[
 "TEST_STARTED",
 "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
  "startTimestamp": 1474197312697,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
  "startTimestamp": 1474197312560,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "children": [
    {
     "id": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "displayName": "testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "methodName": "testAnalyzers",
     "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197312713
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
  "startTimestamp": 1474197312821,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
  "startTimestamp": 1474197312713,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testUnknown",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testWithAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testGetIndexAnalyserWithoutAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testFillsAttributes",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testNoAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197312833
 }
]

[
 "TEST_STARTED",
 "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474197312958,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474197313100,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474197313154,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474197313195,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474197313254,
  "executionTime": 134
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
  "startTimestamp": 1474197312833,
  "executionTime": 598
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "children": [
    {
     "id": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testExpectedSize",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSourceTargetRelocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSameAllocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testEqualsIgnoringVersion",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197313439
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474197313531,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474197313561,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474197313563,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474197313567,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
  "startTimestamp": 1474197313439,
  "executionTime": 134
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "displayName": "testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "methodName": "testRandomDecisions",
     "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197313579
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,630][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,631][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,646][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[INDEX_8][1], [INDEX_0][3], [INDEX_9][1], [INDEX_9][2], [INDEX_2][1], [INDEX_5][3], [INDEX_5][5], [INDEX_5][1], [INDEX_6][6], [INDEX_1][8]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,732][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,732][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,733][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,763][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,784][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[INDEX_6][7], [INDEX_6][3], [INDEX_6][5], [INDEX_6][9], [INDEX_9][1], [INDEX_9][0], [INDEX_4][2], [INDEX_4][3], [INDEX_1][3], [INDEX_1][6]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Fill up nodes such that every shard can be allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now say YES to everything%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:13,818][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Done Balancing after [2] iterations%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
  "startTimestamp": 1474197313619,
  "executionTime": 203
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
  "startTimestamp": 1474197313579,
  "executionTime": 246
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
   "displayName": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testGlobalBlocksCheckedIfNoIndicesSpecified",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testToStringDanglingComma",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197313831
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474197313853,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474197313856,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474197313858,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
  "startTimestamp": 1474197313831,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentParserTests",
   "children": [
    {
     "id": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testFieldDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoDocumentSent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldAfterSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedNullValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMultipleSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testObjectMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicGeoPointArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSingleMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testParseToJsonAndParse",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testAttributes",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testIncludeInAllPropagation",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicObjectWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicRootFallback",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testEmptyMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDocumentContainsMetadataField",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParserNoTypeNoId",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedGeoPointArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParser",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithDynamicMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDotsWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197313882
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,158][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,563][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,563][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,599][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,601][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,601][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,782][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,782][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,783][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,785][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{X_eDhaelSw6zeusfr7SPiw}{5zJYNP-eStysgUrE5bdEeQ}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,786][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,799][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,822][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,905][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:14,920][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197314013,
  "executionTime": 1148
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:15,170][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:15,215][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:15,227][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testFieldDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197315161,
  "executionTime": 1086
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:16,255][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:16,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:16,439][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197316247,
  "executionTime": 297
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:16,551][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:16,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:16,702][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoDocumentSent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197316544,
  "executionTime": 520
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,304][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,324][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197317065,
  "executionTime": 291
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,364][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,703][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,742][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldAfterSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197317357,
  "executionTime": 494
 }
]

[
 "TEST_STARTED",
 "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,858][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:17,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,017][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197317852,
  "executionTime": 224
 }
]

[
 "TEST_STARTED",
 "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,088][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,218][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,236][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197318076,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,291][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,400][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,422][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197318284,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,547][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,628][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,677][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197318541,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,717][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,818][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,837][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197318710,
  "executionTime": 220
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:18,937][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,034][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197318930,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,143][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,159][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197319068,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,202][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,272][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197319195,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,326][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,432][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMultipleSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197319320,
  "executionTime": 493
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:19,823][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,151][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197319813,
  "executionTime": 511
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,334][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,485][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,501][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197320324,
  "executionTime": 336
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,666][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,866][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:20,903][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197320660,
  "executionTime": 371
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,038][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,365][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,384][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197321031,
  "executionTime": 537
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,669][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197321568,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,716][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,823][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,901][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197321708,
  "executionTime": 242
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:21,957][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,091][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,104][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197321950,
  "executionTime": 243
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,201][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,746][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,763][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197322193,
  "executionTime": 818
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:23,022][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:23,265][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:23,274][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197323011,
  "executionTime": 684
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:23,700][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:23,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:24,176][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197323695,
  "executionTime": 821
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:24,521][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:24,566][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:24,587][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197324516,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:24,632][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:25,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:25,840][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197324624,
  "executionTime": 1410
 }
]

[
 "TEST_STARTED",
 "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,099][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,111][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testObjectMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197326034,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,144][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,218][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,235][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197326138,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,302][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,399][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:26,479][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197326295,
  "executionTime": 1683
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:27,984][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:28,300][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:28,314][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicGeoPointArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197327978,
  "executionTime": 641
 }
]

[
 "TEST_STARTED",
 "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:28,625][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:28,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:28,812][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSingleMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197328619,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:28,846][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:29,007][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:30,077][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197328840,
  "executionTime": 1318
 }
]

[
 "TEST_STARTED",
 "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:30,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:31,182][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:31,222][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testParseToJsonAndParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197330159,
  "executionTime": 1675
 }
]

[
 "TEST_STARTED",
 "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:31,841][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:32,990][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:33,049][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testAttributes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197331834,
  "executionTime": 2731
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,577][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,757][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197334565,
  "executionTime": 262
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,834][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,898][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testIncludeInAllPropagation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197334827,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,111][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicObjectWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197334947,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,152][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,220][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,254][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197335144,
  "executionTime": 248
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,498][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,578][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197335392,
  "executionTime": 332
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,735][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,852][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197335725,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,904][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,992][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicRootFallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197335898,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,034][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,139][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197336027,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,205][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,279][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,300][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197336193,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,390][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,520][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,539][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197336383,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,605][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,828][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testEmptyMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197336598,
  "executionTime": 300
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,912][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:36,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,134][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197336898,
  "executionTime": 273
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,178][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,298][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,344][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197337172,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,380][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,446][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,469][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDocumentContainsMetadataField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197337374,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,519][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,701][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,749][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197337513,
  "executionTime": 265
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,910][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParserNoTypeNoId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197337778,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:37,949][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,056][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,069][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedGeoPointArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197337943,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,304][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197338158,
  "executionTime": 175
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,340][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,415][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,440][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParser]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197338333,
  "executionTime": 312
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,653][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,754][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,819][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197338646,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,888][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:38,974][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197338879,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,015][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,084][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,103][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithDynamicMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197339008,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,525][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197339148,
  "executionTime": 526
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,806][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197339674,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,858][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,956][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDotsWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197339851,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:39,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:40,105][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:40,286][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197339984,
  "executionTime": 457
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:40,450][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:40,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:40,862][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197340441,
  "executionTime": 634
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,088][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,136][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,151][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197341075,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,190][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,271][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,299][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474197341182,
  "executionTime": 180
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,363][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,363][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,364][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:41,365][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
  "startTimestamp": 1474197313882,
  "executionTime": 27494
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "children": [
    {
     "id": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllIncluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllExcluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testTwoPhaseMinScore",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197341388
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474197341783,
  "executionTime": 456
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474197342239,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474197342345,
  "executionTime": 143
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
  "startTimestamp": 1474197341388,
  "executionTime": 1126
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tribe.TribeServiceTests",
   "displayName": "org.elasticsearch.tribe.TribeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.tribe.TribeServiceTests",
   "children": [
    {
     "id": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testMinimalSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testEnvironmentSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testPassthroughSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342521
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474197342553,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474197342565,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474197342567,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tribe.TribeServiceTests",
  "startTimestamp": 1474197342521,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "displayName": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithCustomFilters",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testDeprecatedParamException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequest",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342577
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474197342598,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474197342620,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474197342628,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474197342631,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474197342633,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474197342636,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
  "startTimestamp": 1474197342577,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "children": [
    {
     "id": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithEscapedDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testContainsDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testStartsWithDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testEmptyFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testNullFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testMultipleFilterPaths",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testWildcardInNameFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342647
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342668,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342673,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342675,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342677,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342679,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342681,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342683,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342685,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342687,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342689,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342691,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474197342693,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
  "startTimestamp": 1474197342647,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "children": [
    {
     "id": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testGetBytesValues",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testThreads",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testSorting",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342707
 }
]

[
 "TEST_STARTED",
 "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,751][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,811][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,811][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,816][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,819][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,819][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,983][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,983][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,984][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,986][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{8byjnT5XRlGHBP0fpc4ELw}{lZJ7i7eFTpS3XrV6YjSuJA}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:42,988][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:43,000][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:43,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:43,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:43,494][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testGetBytesValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474197342730,
  "executionTime": 816
 }
]

[
 "TEST_STARTED",
 "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:43,556][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:43,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:44,616][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testThreads]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474197343546,
  "executionTime": 1101
 }
]

[
 "TEST_STARTED",
 "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:44,653][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:44,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:44,795][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474197344647,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:44,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,059][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474197344830,
  "executionTime": 296
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,126][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,128][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,129][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,131][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
  "startTimestamp": 1474197342707,
  "executionTime": 2435
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "children": [
    {
     "id": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValuesPre21",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197345149
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,260][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,370][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,370][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,376][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,379][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,379][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,537][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,537][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,537][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,544][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{gbL7HU88SPitgbGo-G-X5w}{v1SXJj2NSUGmaRkLqAJD7w}{local}{local[13]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,544][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,557][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,576][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,676][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValuesPre21]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1474197345250,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,725][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,777][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,790][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1474197345718,
  "executionTime": 139
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,857][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,858][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,858][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:45,860][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
  "startTimestamp": 1474197345149,
  "executionTime": 717
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197345874
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,906][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fLzcwIkXSMaA34BkoI4sDA}{local}{local[106]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,915][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,916][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,937][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,937][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,937][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,939][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,939][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,939][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,945][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,945][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:45,945][WARN ][org.elasticsearch.deprecation.index.mapper]  [TfOl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345895,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345947,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345950,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345973,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345976,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345990,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345993,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197345996,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197346006,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197346012,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197346016,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474197346019,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
  "startTimestamp": 1474197345874,
  "executionTime": 152
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.DocValueFormatTests",
   "displayName": "org.elasticsearch.search.DocValueFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.search.DocValueFormatTests",
   "children": [
    {
     "id": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIpFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIPParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346033
 }
]

[
 "TEST_STARTED",
 "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346055,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346057,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346074,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346077,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346079,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346081,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474197346093,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.DocValueFormatTests",
  "startTimestamp": 1474197346033,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.OriginalIndicesTests",
   "displayName": "org.elasticsearch.action.OriginalIndicesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.OriginalIndicesTests",
   "children": [
    {
     "id": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "displayName": "testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "methodName": "testOriginalIndicesSerialization",
     "className": "org.elasticsearch.action.OriginalIndicesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346106
 }
]

[
 "TEST_STARTED",
 "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
  "startTimestamp": 1474197346123,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.OriginalIndicesTests",
  "startTimestamp": 1474197346106,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PriorityTests",
   "displayName": "org.elasticsearch.common.PriorityTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PriorityTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
     "displayName": "testSerialization(org.elasticsearch.common.PriorityTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
     "displayName": "testValueOf(org.elasticsearch.common.PriorityTests)",
     "methodName": "testValueOf",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.PriorityTests)",
     "displayName": "testToString(org.elasticsearch.common.PriorityTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.PriorityTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346136
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474197346158,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueOf(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474197346160,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474197346162,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474197346164,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PriorityTests",
  "startTimestamp": 1474197346136,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346179
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346199,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346203,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346205,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346213,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346215,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346219,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346224,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346226,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346228,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346231,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346235,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346243,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346245,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346248,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346250,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346252,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474197346255,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1474197346179,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "children": [
    {
     "id": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testNoFlags",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanUnigramOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346265
 }
]

[
 "TEST_STARTED",
 "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474197346297,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474197346339,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474197346352,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474197346369,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
  "startTimestamp": 1474197346265,
  "executionTime": 123
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "children": [
    {
     "id": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "displayName": "testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "methodName": "testSimpleJsonFromAndTo",
     "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346395
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
  "startTimestamp": 1474197346414,
  "executionTime": 74
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
  "startTimestamp": 1474197346395,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346506
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:46,598][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_GeAntkgTni4cxY9jdFx4A}{local}{local[107]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474197346622,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474197346625,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474197346627,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
  "startTimestamp": 1474197346506,
  "executionTime": 129
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptServiceTests",
   "displayName": "org.elasticsearch.script.ScriptServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptServiceTests",
   "children": [
    {
     "id": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFileScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testValidateScriptSize",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptsWithoutExtensions",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationStatsOnCacheHit",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testExecutableCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptCompiledOnceHiddenFileDetected",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testStoreScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testGetStoredScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileNonRegisteredContext",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testIndexedScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCacheEvictionCountedInCacheEvictionsStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDeleteScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testMultipleCompilationsCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testInlineScriptCompiledOnceCache",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testNotSupportedDisableDynamicSetting",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testSearchCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationCircuitBreaking",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultBehaviourFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197346645
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,710][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,720][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-001\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346701,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,733][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346727,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,742][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346737,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,804][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,878][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-007\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,887][INFO ][org.elasticsearch.script ] [node_s_0] removing script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-007\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346780,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,897][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346888,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,908][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346902,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,920][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346912,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,930][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,953][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-015\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,955][INFO ][org.elasticsearch.script ] [node_s_0] removing script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-015\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346923,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:46,965][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346955,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,001][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197346973,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,014][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,063][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-021\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:15:47,066 TEST-ScriptServiceTests.testFineGrainedSettings-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.onFileCreated(FileWatcher.java:261)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.init(FileWatcher.java:166)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.createChild(FileWatcher.java:173)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.updateChildren(FileWatcher.java:222)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:117)%0D%0A%09at org.elasticsearch.watcher.FileWatcher.doCheckAndNotify(FileWatcher.java:70)%0D%0A%09at org.elasticsearch.watcher.AbstractResourceWatcher.checkAndNotify(AbstractResourceWatcher.java:44)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService$ResourceMonitor.run(ResourceWatcherService.java:197)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:166)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:157)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.createFileScripts(ScriptServiceTests.java:489)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.testFineGrainedSettings(ScriptServiceTests.java:292)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$St"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "atementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347004,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,086][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347077,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,106][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347092,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,120][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347109,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,137][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347123,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,150][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347139,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,230][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347216,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,326][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347299,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,346][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347328,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,371][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347349,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,389][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:47,397][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_DB64F96F238DCA2A-001\\tempDir-041\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474197347376,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptServiceTests",
  "startTimestamp": 1474197346645,
  "executionTime": 963
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "children": [
    {
     "id": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testCancellingTasksThatDontSupportCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksToXContentGrouping",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksDescriptions",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskManagementOptOut",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskNodeFiltering",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testRunningTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskLevelActionFailures",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFailedTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFindChildTasks",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197347625
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,737][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NM8IPtT2T8CKswmhaYdxDg}{local}{local[108]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,746][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,803][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MdKWMDB5SiqZI2NHl2SUuA}{local}{local[109]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,805][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,834][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uLmIFOezQS2rfEEZqwUxOg}{local}{local[110]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,835][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,858][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{S7O_VFDLRIeO0FfsZ_mo6w}{local}{local[111]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,859][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,878][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{mDPu0D2JQ662duKCE9T_qA}{local}{local[112]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,879][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,889][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{R3ni8rr7SvKZIZ89HtSaHg}{local}{local[113]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,890][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,893][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]}, previous {node}{NM8IPtT2T8CKswmhaYdxDg}{local}{local[108]}}, removed {{node}{NM8IPtT2T8CKswmhaYdxDg}{local}{local[108]},}, added {{node1}{BZ5htAPwSaGT9CNUsMAk_g}{local}{local[15]},{node3}{rnXqqw4-STG0yTCanYd9tQ}{local}{local[17]},{node4}{tkvFOp5cRM6eYzLdVA-vcw}{local}{local[18]},{node2}{uIw3AruxTnubnutvZxo4OQ}{local}{local[16]},{node5}{wto3QIXQSUau2_A2dfqEHg}{local}{local[19]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,894][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]}, previous {node}{MdKWMDB5SiqZI2NHl2SUuA}{local}{local[109]}}, removed {{node}{MdKWMDB5SiqZI2NHl2SUuA}{local}{local[109]},}, added {{node3}{rnXqqw4-STG0yTCanYd9tQ}{local}{local[17]},{node4}{tkvFOp5cRM6eYzLdVA-vcw}{local}{local[18]},{node2}{uIw3AruxTnubnutvZxo4OQ}{local}{local[16]},{node5}{wto3QIXQSUau2_A2dfqEHg}{local}{local[19]},{node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,894][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]}, previous {node}{uLmIFOezQS2rfEEZqwUxOg}{local}{local[110]}}, removed {{node}{uLmIFOezQS2rfEEZqwUxOg}{local}{local[110]},}, added {{node1}{BZ5htAPwSaGT9CNUsMAk_g}{local}{local[15]},{node3}{rnXqqw4-STG0yTCanYd9tQ}{local}{local[17]},{node4}{tkvFOp5cRM6eYzLdVA-vcw}{local}{local[18]},{node5}{wto3QIXQSUau2_A2dfqEHg}{local}{local[19]},{node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,895][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]}, previous {node}{S7O_VFDLRIeO0FfsZ_mo6w}{local}{local[111]}}, removed {{node}{S7O_VFDLRIeO0FfsZ_mo6w}{local}{local[111]},}, added {{node1}{BZ5htAPwSaGT9CNUsMAk_g}{local}{local[15]},{node4}{tkvFOp5cRM6eYzLdVA-vcw}{local}{local[18]},{node2}{uIw3AruxTnubnutvZxo4OQ}{local}{local[16]},{node5}{wto3QIXQSUau2_A2dfqEHg}{local}{local[19]},{node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,895][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]}, previous {node}{mDPu0D2JQ662duKCE9T_qA}{local}{local[112]}}, removed {{node}{mDPu0D2JQ662duKCE9T_qA}{local}{local[112]},}, added {{node1}{BZ5htAPwSaGT9CNUsMAk_g}{local}{local[15]},{node3}{rnXqqw4-STG0yTCanYd9tQ}{local}{local[17]},{node2}{uIw3AruxTnubnutvZxo4OQ}{local}{local[16]},{node5}{wto3QIXQSUau2_A2dfqEHg}{local}{local[19]},{node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:47,896][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]}, previous {node}{R3ni8rr7SvKZIZ89HtSaHg}{local}{local[113]}}, removed {{node}{R3ni8rr7SvKZIZ89HtSaHg}{local}{local[113]},}, added {{node1}{BZ5htAPwSaGT9CNUsMAk_g}{local}{local[15]},{node3}{rnXqqw4-STG0yTCanYd9tQ}{local}{local[17]},{node4}{tkvFOp5cRM6eYzLdVA-vcw}{local}{local[18]},{node2}{uIw3AruxTnubnutvZxo4OQ}{local}{local[16]},{node0}{vNiMFeCHQwS9yKjVKdjxzQ}{local}{local[14]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,030][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,049][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,049][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,052][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,053][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,054][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,058][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,058][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,169][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,170][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,170][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,170][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,170][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,170][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197347653,
  "executionTime": 524
 }
]

[
 "TEST_STARTED",
 "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,197][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jvX48T8lQVOHYeLQan0rkQ}{local}{local[114]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,198][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BFzk8Qq8RR6oWAFnuhXLzA}{local}{local[115]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,210][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,217][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rjB-2WWoTrGJxs79Tc1p7g}{local}{local[116]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,219][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,227][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{r0Uv1JeVS9GlMQkYzPqmDQ}{local}{local[117]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,229][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,236][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4vXFE7LrQkispEtxdbS5jg}{local}{local[118]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,237][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,245][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{L0LB69lpRSmDy-3-r-Vbeg}{local}{local[119]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,246][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,257][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pqxWOqMIROmQ84-330yZIQ}{local}{local[120]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,269][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,277][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rPe5llqeQBeU27annr-4fQ}{local}{local[121]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,278][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,289][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2yr6css7TLyU0j6Oa7Y3hQ}{local}{local[122]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,291][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,292][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{jvX48T8lQVOHYeLQan0rkQ}{local}{local[114]}}, removed {{node}{jvX48T8lQVOHYeLQan0rkQ}{local}{local[114]},}, added {{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,292][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{BFzk8Qq8RR6oWAFnuhXLzA}{local}{local[115]}}, removed {{node}{BFzk8Qq8RR6oWAFnuhXLzA}{local}{local[115]},}, added {{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,294][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{rjB-2WWoTrGJxs79Tc1p7g}{local}{local[116]}}, removed {{node}{rjB-2WWoTrGJxs79Tc1p7g}{local}{local[116]},}, added {{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,295][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{r0Uv1JeVS9GlMQkYzPqmDQ}{local}{local[117]}}, removed {{node}{r0Uv1JeVS9GlMQkYzPqmDQ}{local}{local[117]},}, added {{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,296][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{4vXFE7LrQkispEtxdbS5jg}{local}{local[118]}}, removed {{node}{4vXFE7LrQkispEtxdbS5jg}{local}{local[118]},}, added {{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,299][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{L0LB69lpRSmDy-3-r-Vbeg}{local}{local[119]}}, removed {{node}{L0LB69lpRSmDy-3-r-Vbeg}{local}{local[119]},}, added {{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,304][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{pqxWOqMIROmQ84-330yZIQ}{local}{local[120]}}, removed {{node}{pqxWOqMIROmQ84-330yZIQ}{local}{local[120]},}, added {{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,305][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{rPe5llqeQBeU27annr-4fQ}{local}{local[121]}}, removed {{node}{rPe5llqeQBeU27annr-4fQ}{local}{local[121]},}, added {{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},{node8}{diZqTX9TQHK0poIwg_dGmQ}{local}{local[28]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,306][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]}, previous {node}{2yr6css7TLyU0j6Oa7Y3hQ}{local}{local[122]}}, removed {{node}{2yr6css7TLyU0j6Oa7Y3hQ}{local}{local[122]},}, added {{node1}{tUq5Pa1jSWynC47w_Du-Lw}{local}{local[21]},{node7}{EggHdOxgS7WQ2rZPERKJPA}{local}{local[27]},{node0}{n13M45L1QzmAg43w13Nq8A}{local}{local[20]},{node3}{4Ybch-8fTiax5CozlSi7Qg}{local}{local[23]},{node5}{GWFLuQ2bS7W-esqpN6v8yA}{local}{local[25]},{node6}{JYeBQV-hQDCy1WMjPphd2A}{local}{local[26]},{node2}{W9I2PNt8QF6tDV7Dx3MfCg}{local}{local[22]},{node4}{QRR6i8ANSwGTx_I2SRhquQ}{local}{local[24]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,349][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"nodes\":{\"node4\":{\"name\":\"\",\"transport_address\":\"local[24]\",\"host\":\"local\",\"ip\":\"local[24]\",\"roles\":[],\"tasks\":{\"node4:1\":{\"node\":\"node4\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348346,\"running_time_in_nanos\":16328,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node5\":{\"name\":\"\",\"transport_address\":\"local[25]\",\"host\":\"local\",\"ip\":\"local[25]\",\"roles\":[],\"tasks\":{\"node5:1\":{\"node\":\"node5\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348345,\"running_time_in_nanos\":24726,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node2\":{\"name\":\"\",\"transport_address\":\"local[22]\",\"host\":\"local\",\"ip\":\"local[22]\",\"roles\":[],\"tasks\":{\"node2:1\":{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348346,\"running_time_in_nanos\":13996,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node3\":{\"name\":\"\",\"transport_address\":\"local[23]\",\"host\":\"local\",\"ip\":\"local[23]\",\"roles\":[],\"tasks\":{\"node3:1\":{\"node\":\"node3\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348322,\"running_time_in_nanos\":45720,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node8\":{\"name\":\"\",\"transport_address\":\"local[28]\",\"host\":\"local\",\"ip\":\"local[28]\",\"roles\":[],\"tasks\":{\"node8:1\":{\"node\":\"node8\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348322,\"running_time_in_nanos\":37789,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node6\":{\"name\":\"\",\"transport_address\":\"local[26]\",\"host\":\"local\",\"ip\":\"local[26]\",\"roles\":[],\"tasks\":{\"node6:1\":{\"node\":\"node6\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348325,\"running_time_in_nanos\":40588,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node7\":{\"name\":\"\",\"transport_address\":\"local[27]\",\"host\":\"local\",\"ip\":\"local[27]\",\"roles\":[],\"tasks\":{\"node7:1\":{\"node\":\"node7\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348345,\"running_time_in_nanos\":27526,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node0\":{\"name\":\"\",\"transport_address\":\"local[20]\",\"host\":\"local\",\"ip\":\"local[20]\",\"roles\":[],\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1474197348308,\"running_time_in_nanos\":36680624,\"cancellable\":false},\"node0:2\":{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348345,\"running_time_in_nanos\":73713,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node1\":{\"name\":\"\",\"transport_address\":\"local[21]\",\"host\":\"local\",\"ip\":\"local[21]\",\"roles\":[],\"tasks\":{\"node1:1\":{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348325,\"running_time_in_nanos\":44321,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,350][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1474197348308,\"running_time_in_nanos\":36680624,\"cancellable\":false,\"children\":[{\"node\":\"node3\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348322,\"running_time_in_nanos\":45720,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348346,\"running_time_in_nanos\":13996,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348325,\"running_time_in_nanos\":44321,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348345,\"running_time_in_nanos\":73713,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node8\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348322,\"running_time_in_nanos\":37789,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node7\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348345,\"running_time_in_nanos\":27526,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node6\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348325,\"running_time_in_nanos\":40588,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node5\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348345,\"running_time_in_nanos\":24726,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node4\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474197348346,\"running_time_in_nanos\":16328,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}]}}}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197348177,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,370][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SDCdbusfS9mrEqxPplklcw}{local}{local[123]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,372][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,375][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EccJgclGSeWPKhMgL9WBIA}{local}{local[124]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,377][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,418][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MdGJnXeTSza8Jg4KKK-5fg}{local}{local[125]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,420][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,421][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ddBjMHdGQFiw4CiY0VSdAw}{local}{local[29]}, previous {node}{SDCdbusfS9mrEqxPplklcw}{local}{local[123]}}, removed {{node}{SDCdbusfS9mrEqxPplklcw}{local}{local[123]},}, added {{node1}{scG70OcpQbmVqY_VGa8amQ}{local}{local[30]},{node2}{qIFUVOb8QYK2aA1r1iLsqw}{local}{local[31]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,422][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ddBjMHdGQFiw4CiY0VSdAw}{local}{local[29]}, previous {node}{EccJgclGSeWPKhMgL9WBIA}{local}{local[124]}}, removed {{node}{EccJgclGSeWPKhMgL9WBIA}{local}{local[124]},}, added {{node2}{qIFUVOb8QYK2aA1r1iLsqw}{local}{local[31]},{node0}{ddBjMHdGQFiw4CiY0VSdAw}{local}{local[29]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,422][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ddBjMHdGQFiw4CiY0VSdAw}{local}{local[29]}, previous {node}{MdGJnXeTSza8Jg4KKK-5fg}{local}{local[125]}}, removed {{node}{MdGJnXeTSza8Jg4KKK-5fg}{local}{local[125]},}, added {{node1}{scG70OcpQbmVqY_VGa8amQ}{local}{local[30]},{node0}{ddBjMHdGQFiw4CiY0VSdAw}{local}{local[29]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,424][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,428][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,431][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,435][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,435][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,447][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,447][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A[2016-09-18T08:15:48,447][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197348354,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,462][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hyt9WrZCTzmew1JCeQriSw}{local}{local[126]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,463][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,466][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kCphurk8RxujOI9srrU4pg}{local}{local[127]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,468][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,510][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uiic29K6QKio1vDnZqpiSA}{local}{local[128]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,511][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,582][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HxYorHgKSQSd0TGue0nhcw}{local}{local[129]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,584][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,599][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{n2ZbIFI6Q4GW38imq_WtpQ}{local}{local[130]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,600][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,604][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eUiMTF1ESuawe3M9cgSu9Q}{local}{local[131]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,605][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,616][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{x1bsRFL1TXeWergCN7_IoA}{local}{local[132]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,618][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,644][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BgFlOHyKS762NrqmLVcmZg}{local}{local[133]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,645][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,649][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zVqOwrYXTUqHlsGDcXL-_Q}{local}{local[134]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,651][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,652][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{hyt9WrZCTzmew1JCeQriSw}{local}{local[126]}}, removed {{node}{hyt9WrZCTzmew1JCeQriSw}{local}{local[126]},}, added {{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,653][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{kCphurk8RxujOI9srrU4pg}{local}{local[127]}}, removed {{node}{kCphurk8RxujOI9srrU4pg}{local}{local[127]},}, added {{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,654][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{uiic29K6QKio1vDnZqpiSA}{local}{local[128]}}, removed {{node}{uiic29K6QKio1vDnZqpiSA}{local}{local[128]},}, added {{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,655][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{HxYorHgKSQSd0TGue0nhcw}{local}{local[129]}}, removed {{node}{HxYorHgKSQSd0TGue0nhcw}{local}{local[129]},}, added {{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,656][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{n2ZbIFI6Q4GW38imq_WtpQ}{local}{local[130]}}, removed {{node}{n2ZbIFI6Q4GW38imq_WtpQ}{local}{local[130]},}, added {{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,659][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{eUiMTF1ESuawe3M9cgSu9Q}{local}{local[131]}}, removed {{node}{eUiMTF1ESuawe3M9cgSu9Q}{local}{local[131]},}, added {{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,660][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{x1bsRFL1TXeWergCN7_IoA}{local}{local[132]}}, removed {{node}{x1bsRFL1TXeWergCN7_IoA}{local}{local[132]},}, added {{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,663][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{BgFlOHyKS762NrqmLVcmZg}{local}{local[133]}}, removed {{node}{BgFlOHyKS762NrqmLVcmZg}{local}{local[133]},}, added {{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node8}{qnYnoXvzSTup_0906rFWUA}{local}{local[40]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,664][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]}, previous {node}{zVqOwrYXTUqHlsGDcXL-_Q}{local}{local[134]}}, removed {{node}{zVqOwrYXTUqHlsGDcXL-_Q}{local}{local[134]},}, added {{node6}{X29S9Gu4QCSL8i2O3xgmDA}{local}{local[38]},{node1}{dM3AeXYpSRSmvtoP5-FCYw}{local}{local[33]},{node5}{4xlRtVsEQ1yFEVi7Ui3DVQ}{local}{local[37]},{node0}{CxzjgToSQD2YcP2udPnNoA}{local}{local[32]},{node2}{Y9ETrx10R7ehW84TNQJKGQ}{local}{local[34]},{node3}{prBk9A6rS5SC-wO8VEQ9kw}{local}{local[35]},{node7}{Pw4WscoRTVust4eKcZMGug}{local}{local[39]},{node4}{Z5q97jERRCO5VvwigGXIIQ}{local}{local[36]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,683][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,706][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,708][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,709][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,709][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,709][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,709][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,711][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,714][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,716][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,716][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A[2016-09-18T08:15:48,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,778][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,778][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197348449,
  "executionTime": 337
 }
]

[
 "TEST_STARTED",
 "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,808][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wS0Cg-FDQC6_jm4bGtsrCA}{local}{local[135]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,809][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,814][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{K3xcUtEPQtmkZrnstZmoCw}{local}{local[136]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,815][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,823][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{r-yLW8Z0T0q6WdqcdJYg_A}{local}{local[137]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,825][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,828][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SafJ6JxpQB6fa0m9qTsg7g}{local}{local[138]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,830][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,830][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]}, previous {node}{wS0Cg-FDQC6_jm4bGtsrCA}{local}{local[135]}}, removed {{node}{wS0Cg-FDQC6_jm4bGtsrCA}{local}{local[135]},}, added {{node1}{eqagTLxvQ0i0CTDwB7yR1g}{local}{local[42]},{node3}{j_iTP9_zRquj5u-MrFxh_w}{local}{local[44]},{node2}{YEA6BHytTTmTkj7dNN7hXg}{local}{local[43]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,831][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]}, previous {node}{K3xcUtEPQtmkZrnstZmoCw}{local}{local[136]}}, removed {{node}{K3xcUtEPQtmkZrnstZmoCw}{local}{local[136]},}, added {{node3}{j_iTP9_zRquj5u-MrFxh_w}{local}{local[44]},{node2}{YEA6BHytTTmTkj7dNN7hXg}{local}{local[43]},{node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,832][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]}, previous {node}{r-yLW8Z0T0q6WdqcdJYg_A}{local}{local[137]}}, removed {{node}{r-yLW8Z0T0q6WdqcdJYg_A}{local}{local[137]},}, added {{node1}{eqagTLxvQ0i0CTDwB7yR1g}{local}{local[42]},{node3}{j_iTP9_zRquj5u-MrFxh_w}{local}{local[44]},{node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,833][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]}, previous {node}{SafJ6JxpQB6fa0m9qTsg7g}{local}{local[138]}}, removed {{node}{SafJ6JxpQB6fa0m9qTsg7g}{local}{local[138]},}, added {{node1}{eqagTLxvQ0i0CTDwB7yR1g}{local}{local[42]},{node2}{YEA6BHytTTmTkj7dNN7hXg}{local}{local[43]},{node0}{Rwxo8mJySry4iAkB2TbVHQ}{local}{local[41]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,836][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,837][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,838][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,838][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,838][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,838][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,838][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Filtering out nodes [node2] size: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,846][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A[2016-09-18T08:15:48,846][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,846][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,846][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197348787,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,885][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sOb4NVUHTZq8SI6tiOmKZA}{local}{local[139]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,886][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,890][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jaRyGaV6Tgu6HhBTVji7dg}{local}{local[140]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,892][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,903][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zA57BBfNThOQfxodtSkSug}{local}{local[141]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,904][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,905][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{asdd2P0YT7SGy-2AeHZT1A}{local}{local[45]}, previous {node}{sOb4NVUHTZq8SI6tiOmKZA}{local}{local[139]}}, removed {{node}{sOb4NVUHTZq8SI6tiOmKZA}{local}{local[139]},}, added {{node1}{o3qjTSeMRBiPWGqxycySzw}{local}{local[46]},{node2}{I3hSUpCdQkGxX3WZa73UgA}{local}{local[47]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,906][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{asdd2P0YT7SGy-2AeHZT1A}{local}{local[45]}, previous {node}{jaRyGaV6Tgu6HhBTVji7dg}{local}{local[140]}}, removed {{node}{jaRyGaV6Tgu6HhBTVji7dg}{local}{local[140]},}, added {{node2}{I3hSUpCdQkGxX3WZa73UgA}{local}{local[47]},{node0}{asdd2P0YT7SGy-2AeHZT1A}{local}{local[45]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,907][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{asdd2P0YT7SGy-2AeHZT1A}{local}{local[45]}, previous {node}{zA57BBfNThOQfxodtSkSug}{local}{local[141]}}, removed {{node}{zA57BBfNThOQfxodtSkSug}{local}{local[141]},}, added {{node1}{o3qjTSeMRBiPWGqxycySzw}{local}{local[46]},{node0}{asdd2P0YT7SGy-2AeHZT1A}{local}{local[45]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,910][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,923][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,924][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,924][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,924][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Listing currently running tasks using node [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,932][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Checking currently running tasks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,972][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,972][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:48,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197348849,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,005][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{U5EXmJjYStuX52JctDGT2A}{local}{local[142]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,006][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,016][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AOLBNx0_R3S4p7JVKdriKw}{local}{local[143]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,017][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,038][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TOTGHQB8Q6OPGvZB-y0s-Q}{local}{local[144]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,039][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,061][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{i-2Eze2MQLS1T8G3uJ3_qw}{local}{local[145]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,062][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,068][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3lsST1ahR2Sr9Id-MqaYWQ}{local}{local[146]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,069][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,070][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]}, previous {node}{U5EXmJjYStuX52JctDGT2A}{local}{local[142]}}, removed {{node}{U5EXmJjYStuX52JctDGT2A}{local}{local[142]},}, added {{node1}{_vtLB49NR8Kux-5O_X8lhw}{local}{local[49]},{node3}{Yb6TkJmrQ0C3N1praHx1hg}{local}{local[51]},{node4}{OiMoBphARLuRC6fv3jYjOA}{local}{local[52]},{node2}{PEJaHB7IR1mTREwrFzVMsw}{local}{local[50]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,071][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]}, previous {node}{AOLBNx0_R3S4p7JVKdriKw}{local}{local[143]}}, removed {{node}{AOLBNx0_R3S4p7JVKdriKw}{local}{local[143]},}, added {{node3}{Yb6TkJmrQ0C3N1praHx1hg}{local}{local[51]},{node4}{OiMoBphARLuRC6fv3jYjOA}{local}{local[52]},{node2}{PEJaHB7IR1mTREwrFzVMsw}{local}{local[50]},{node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,072][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]}, previous {node}{TOTGHQB8Q6OPGvZB-y0s-Q}{local}{local[144]}}, removed {{node}{TOTGHQB8Q6OPGvZB-y0s-Q}{local}{local[144]},}, added {{node1}{_vtLB49NR8Kux-5O_X8lhw}{local}{local[49]},{node3}{Yb6TkJmrQ0C3N1praHx1hg}{local}{local[51]},{node4}{OiMoBphARLuRC6fv3jYjOA}{local}{local[52]},{node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,072][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]}, previous {node}{i-2Eze2MQLS1T8G3uJ3_qw}{local}{local[145]}}, removed {{node}{i-2Eze2MQLS1T8G3uJ3_qw}{local}{local[145]},}, added {{node1}{_vtLB49NR8Kux-5O_X8lhw}{local}{local[49]},{node4}{OiMoBphARLuRC6fv3jYjOA}{local}{local[52]},{node2}{PEJaHB7IR1mTREwrFzVMsw}{local}{local[50]},{node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,074][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]}, previous {node}{3lsST1ahR2Sr9Id-MqaYWQ}{local}{local[146]}}, removed {{node}{3lsST1ahR2Sr9Id-MqaYWQ}{local}{local[146]},}, added {{node1}{_vtLB49NR8Kux-5O_X8lhw}{local}{local[49]},{node3}{Yb6TkJmrQ0C3N1praHx1hg}{local}{local[51]},{node2}{PEJaHB7IR1mTREwrFzVMsw}{local}{local[50]},{node0}{_xGhITB2So2nh82BOazcCA}{local}{local[48]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,083][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,092][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,092][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,093][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,095][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,096][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,096][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,100][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,100][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,102][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,104][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,104][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Failing on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,110][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,111][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,111][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,112][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,111][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,112][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197348978,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,147][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4_omH9UYS-ugoGeULJyjbA}{local}{local[147]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,148][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,151][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZBMGZKk1SdarxoutMuBtvQ}{local}{local[148]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,153][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,154][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{gi8GwC92QxOvWSky8hsTjQ}{local}{local[53]}, previous {node}{4_omH9UYS-ugoGeULJyjbA}{local}{local[147]}}, removed {{node}{4_omH9UYS-ugoGeULJyjbA}{local}{local[147]},}, added {{node1}{TdfOscc6SuycuZs37X-2cQ}{local}{local[54]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,154][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{gi8GwC92QxOvWSky8hsTjQ}{local}{local[53]}, previous {node}{ZBMGZKk1SdarxoutMuBtvQ}{local}{local[148]}}, removed {{node}{ZBMGZKk1SdarxoutMuBtvQ}{local}{local[148]},}, added {{node0}{gi8GwC92QxOvWSky8hsTjQ}{local}{local[53]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,158][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,158][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197349121,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,191][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{whU148NuT8ySeV4rdWlpqA}{local}{local[149]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,192][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,195][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ayxpZ0VJSj-m_H4dSgqRCA}{local}{local[150]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,197][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,204][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-2S_YIZ1QfGe3PZuiJJJNA}{local}{local[151]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,205][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XNZqoVN5Qxi2UwIkj2N1ig}{local}{local[152]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,210][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,213][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{38r2zqWXQ9yFJKeN6-IQpw}{local}{local[153]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,215][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,220][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ody_f2iwR062XOstrgooBQ}{local}{local[154]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,222][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,229][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tKgms3lyT2-z2DOT4nsXaQ}{local}{local[155]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,233][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,234][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{whU148NuT8ySeV4rdWlpqA}{local}{local[149]}}, removed {{node}{whU148NuT8ySeV4rdWlpqA}{local}{local[149]},}, added {{node6}{G5Jah0WkSmey5ftbTiLoug}{local}{local[61]},{node4}{VvRnlLuVTN2c2w6tlNjSPA}{local}{local[59]},{node3}{qJbMJ5x8QJOc8HRMLbd4ow}{local}{local[58]},{node2}{-Nc2TuXQRtu3HFXVuspUJg}{local}{local[57]},{node5}{MzEEzIUGQtqt1bRt81hBQQ}{local}{local[60]},{node1}{HEafxkDxSoaqmgWtRumoNQ}{local}{local[56]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,235][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{ayxpZ0VJSj-m_H4dSgqRCA}{local}{local[150]}}, removed {{node}{ayxpZ0VJSj-m_H4dSgqRCA}{local}{local[150]},}, added {{node5}{MzEEzIUGQtqt1bRt81hBQQ}{local}{local[60]},{node2}{-Nc2TuXQRtu3HFXVuspUJg}{local}{local[57]},{node4}{VvRnlLuVTN2c2w6tlNjSPA}{local}{local[59]},{node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]},{node6}{G5Jah0WkSmey5ftbTiLoug}{local}{local[61]},{node3}{qJbMJ5x8QJOc8HRMLbd4ow}{local}{local[58]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,235][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{-2S_YIZ1QfGe3PZuiJJJNA}{local}{local[151]}}, removed {{node}{-2S_YIZ1QfGe3PZuiJJJNA}{local}{local[151]},}, added {{node4}{VvRnlLuVTN2c2w6tlNjSPA}{local}{local[59]},{node3}{qJbMJ5x8QJOc8HRMLbd4ow}{local}{local[58]},{node6}{G5Jah0WkSmey5ftbTiLoug}{local}{local[61]},{node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]},{node5}{MzEEzIUGQtqt1bRt81hBQQ}{local}{local[60]},{node1}{HEafxkDxSoaqmgWtRumoNQ}{local}{local[56]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,235][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{XNZqoVN5Qxi2UwIkj2N1ig}{local}{local[152]}}, removed {{node}{XNZqoVN5Qxi2UwIkj2N1ig}{local}{local[152]},}, added {{node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]},{node5}{MzEEzIUGQtqt1bRt81hBQQ}{local}{local[60]},{node6}{G5Jah0WkSmey5ftbTiLoug}{local}{local[61]},{node2}{-Nc2TuXQRtu3HFXVuspUJg}{local}{local[57]},{node4}{VvRnlLuVTN2c2w6tlNjSPA}{local}{local[59]},{node1}{HEafxkDxSoaqmgWtRumoNQ}{local}{local[56]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,236][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{38r2zqWXQ9yFJKeN6-IQpw}{local}{local[153]}}, removed {{node}{38r2zqWXQ9yFJKeN6-IQpw}{local}{local[153]},}, added {{node3}{qJbMJ5x8QJOc8HRMLbd4ow}{local}{local[58]},{node6}{G5Jah0WkSmey5ftbTiLoug}{local}{local[61]},{node5}{MzEEzIUGQtqt1bRt81hBQQ}{local}{local[60]},{node1}{HEafxkDxSoaqmgWtRumoNQ}{local}{local[56]},{node2}{-Nc2TuXQRtu3HFXVuspUJg}{local}{local[57]},{node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,236][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{ody_f2iwR062XOstrgooBQ}{local}{local[154]}}, removed {{node}{ody_f2iwR062XOstrgooBQ}{local}{local[154]},}, added {{node3}{qJbMJ5x8QJOc8HRMLbd4ow}{local}{local[58]},{node1}{HEafxkDxSoaqmgWtRumoNQ}{local}{local[56]},{node6}{G5Jah0WkSmey5ftbTiLoug}{local}{local[61]},{node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]},{node4}{VvRnlLuVTN2c2w6tlNjSPA}{local}{local[59]},{node2}{-Nc2TuXQRtu3HFXVuspUJg}{local}{local[57]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,236][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]}, previous {node}{tKgms3lyT2-z2DOT4nsXaQ}{local}{local[155]}}, removed {{node}{tKgms3lyT2-z2DOT4nsXaQ}{local}{local[155]},}, added {{node0}{6PpV-H0vRC2O6_oQsDwg6Q}{local}{local[55]},{node1}{HEafxkDxSoaqmgWtRumoNQ}{local}{local[56]},{node2}{-Nc2TuXQRtu3HFXVuspUJg}{local}{local[57]},{node4}{VvRnlLuVTN2c2w6tlNjSPA}{local}{local[59]},{node3}{qJbMJ5x8QJOc8HRMLbd4ow}{local}{local[58]},{node5}{MzEEzIUGQtqt1bRt81hBQQ}{local}{local[60]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,243][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,247][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,248][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,248][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,249][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,249][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,250][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,250][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,250][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:49,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474197349162,
  "executionTime": 102
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 18, 2016 1:15:49 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 7 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
  "startTimestamp": 1474197347625,
  "executionTime": 1917
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "children": [
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNullFieldName",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidDistanceUnit",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidGeoDistance",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidTo",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNestedRangeQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNoPoint",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidFrom",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197349551
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,588][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bUINh5hWQ5yPAmSvCNXXww}{local}{local[156]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,598][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,598][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,626][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,639][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,640][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,640][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,643][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,643][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,643][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,646][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,646][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,646][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,655][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,655][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,655][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,658][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,658][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,658][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,673][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,673][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,673][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,675][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,676][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,676][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,680][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,681][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,681][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,695][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,695][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:49,695][WARN ][org.elasticsearch.deprecation.index.mapper]  [mFpQ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349570,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349699,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349704,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349847,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349850,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349854,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349860,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349932,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349935,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349939,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349942,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349946,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349949,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349954,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349957,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349961,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349978,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349981,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474197349984,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
  "startTimestamp": 1474197349551,
  "executionTime": 849
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
   "displayName": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "children": [
    {
     "id": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalled",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOneByte",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOddBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOnProgressCannotBeCalledMoreThanOncePerPercent",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testEvenBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalledOnUnexpectedCompletion",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197350408
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350432,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350440,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350442,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350444,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350446,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350448,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474197350450,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
  "startTimestamp": 1474197350408,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testCoerce",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testRejectNorms",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197350465
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,503][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,540][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,540][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,548][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,553][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,553][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,731][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,733][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,733][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,743][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{pE7IMp4VQEm-VIU7GKeoJg}{iX1y5O0eQ8-3JdldwxfKwQ}{local}{local[62]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,743][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,761][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,791][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,856][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,880][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,964][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [NumberFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197350493,
  "executionTime": 543
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,043][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,106][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,124][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351036,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,188][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,302][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351182,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,343][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,401][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,419][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351336,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,463][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,509][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,540][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351457,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,637][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,663][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351571,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,706][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,788][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,810][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351700,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,860][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,920][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,942][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testCoerce]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351854,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:51,978][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,045][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,066][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,124][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,178][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,194][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,308][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,352][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,368][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,436][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,485][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,508][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [NumberFieldMapperTests#testRejectNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197351972,
  "executionTime": 678
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,656][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,708][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,729][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474197352650,
  "executionTime": 109
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,759][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,759][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,760][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,761][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
  "startTimestamp": 1474197350465,
  "executionTime": 2323
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
   "displayName": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "children": [
    {
     "id": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "displayName": "testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "methodName": "testCreateSearchFilter",
     "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197352794
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
  "startTimestamp": 1474197352826,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
  "startTimestamp": 1474197352794,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "displayName": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "children": [
    {
     "id": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "displayName": "testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "methodName": "testCoreCacheKey",
     "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197352837
 }
]

[
 "TEST_STARTED",
 "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
  "startTimestamp": 1474197352862,
  "executionTime": 118
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
  "startTimestamp": 1474197352837,
  "executionTime": 145
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "children": [
    {
     "id": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreCachedAndReused",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatAnalyzersAreUsedInMapping",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197352989
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:55,870][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:55,902][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:55,902][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:55,906][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:55,908][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:55,908][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,030][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,030][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,031][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,034][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{0o1pm5npTnW4K7r7sc5hew}{jdvSn45TQrOP0Wgm9vQhiA}{local}{local[63]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,035][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,050][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,860][INFO ][org.elasticsearch.index.analysis] [node_s_0] [IRFOPoz9RMyXpEJrI4cioA] [PreBuiltAnalyzerTests#testThatDefaultAndStandardAnalyzerAreTheSameInstance]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474197355831,
  "executionTime": 1030
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,871][INFO ][org.elasticsearch.index.analysis] [node_s_0] [IRFOPoz9RMyXpEJrI4cioA] [PreBuiltAnalyzerTests#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474197356861,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,874][INFO ][org.elasticsearch.index.analysis] [node_s_0] [IRFOPoz9RMyXpEJrI4cioA] [PreBuiltAnalyzerTests#testThatInstancesAreCachedAndReused]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474197356872,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:56,890][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:57,163][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:57,179][INFO ][org.elasticsearch.index.analysis] [node_s_0] [test] [PreBuiltAnalyzerTests#testThatAnalyzersAreUsedInMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474197356877,
  "executionTime": 338
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:57,216][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:57,216][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:57,217][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:57,219][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
  "startTimestamp": 1474197352989,
  "executionTime": 4240
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357236
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:57,279][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sLtWvOf0T_2pctl53ZxcvQ}{local}{local[157]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474197357302,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474197357325,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474197357327,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
  "startTimestamp": 1474197357236,
  "executionTime": 97
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "children": [
    {
     "id": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionEquality",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationToXContent",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionAndExplanation",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357344
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474197357374,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474197357378,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474197357385,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474197357391,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
  "startTimestamp": 1474197357344,
  "executionTime": 52
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357401
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:57,573][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Q2LisLisS5eSbunwCytzOA}{local}{local[162]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474197357583,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474197357622,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474197357625,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
  "startTimestamp": 1474197357401,
  "executionTime": 232
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "children": [
    {
     "id": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testGenerateShardId",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testThatOnlyNodesSupportNodeIds",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testPreferNodes",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testBWC",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357657
 }
]

[
 "TEST_STARTED",
 "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474197357730,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:57,782][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HHt24ruRSEiGWVudk3eJUw}{local}{local[163]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:57,786][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{jduTfjuOS4eCUZP2DsopDQ}{local}{local[165]}, previous {node}{HHt24ruRSEiGWVudk3eJUw}{local}{local[163]}}, removed {{node}{HHt24ruRSEiGWVudk3eJUw}{local}{local[163]},}, added {{node_1}{jduTfjuOS4eCUZP2DsopDQ}{local}{local[165]},{node_2}{oBF2eakRTvyMpMLFDokVkA}{local}{local[166]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474197357736,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:57,810][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0spHZwqdR6CVDCUuqRSD0Q}{local}{local[170]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:57,811][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{__UlXII6Rz6SOTunPpAiTA}{local}{local[172]}, previous {node}{0spHZwqdR6CVDCUuqRSD0Q}{local}{local[170]}}, removed {{node}{0spHZwqdR6CVDCUuqRSD0Q}{local}{local[170]},}, added {{node_8}{2CiAO6C4Sb6qFAgHhcNgqA}{local}{local[179]},{node_7}{t2SNBrfXS2ClP5Mkv4KzRg}{local}{local[178]},{node_11}{ORU0WeM9Q1mT7FnVsMnIEA}{local}{local[182]},{node_9}{EqYP_1jAT3S5N4hEZIiuNQ}{local}{local[180]},{node_5}{mB8wKCFPTTyVrjmmd0_K-g}{local}{local[176]},{node_12}{o42_HbjKS-Ox73fTyskDoQ}{local}{local[183]},{node_10}{8CvXrk7FQOSifPRiEbiTBw}{local}{local[181]},{node_4}{S8u2jVIGSEyCZ3Vk_RBTSA}{local}{local[175]},{node_3}{xvCKUHIMTFGrWtTaSqIe7A}{local}{local[174]},{node_6}{izt59QBzSveHezEd9TnhWg}{local}{local[177]},{node_2}{hV3eixQNTS6P1WunnWup3g}{local}{local[173]},{node_1}{__UlXII6Rz6SOTunPpAiTA}{local}{local[172]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474197357793,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474197357827,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
  "startTimestamp": 1474197357657,
  "executionTime": 174
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "children": [
    {
     "id": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testParsingWithIndexSettings",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    },
    {
     "id": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testConditionsParsing",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357839
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1474197357876,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1474197357880,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
  "startTimestamp": 1474197357839,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "displayName": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "children": [
    {
     "id": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "displayName": "testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "methodName": "testCamelCaseFieldNameStaysAsIs",
     "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357890
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,015][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,128][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,128][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,139][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,141][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,141][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,400][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,400][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,401][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,403][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{hc5qhfCJRFq2ZnnGtf3CTg}{obuAyYP8SMO1tHcaUwIipQ}{local}{local[64]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,404][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,417][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,438][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,515][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/DaKJj7e6R-Kk3w5N3xdt8Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,538][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/DaKJj7e6R-Kk3w5N3xdt8Q] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,550][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CamelCaseFieldNameTests#testCamelCaseFieldNameStaysAsIs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
  "startTimestamp": 1474197357943,
  "executionTime": 685
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,628][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,629][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,629][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,631][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
  "startTimestamp": 1474197357890,
  "executionTime": 755
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.MinDocQueryTests",
   "displayName": "org.apache.lucene.queries.MinDocQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.MinDocQueryTests",
   "children": [
    {
     "id": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testRandom",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358652
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1474197358695,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1474197358806,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.MinDocQueryTests",
  "startTimestamp": 1474197358652,
  "executionTime": 161
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "children": [
    {
     "id": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "displayName": "testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "methodName": "testRejectedExecutionCounter",
     "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358822
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
  "startTimestamp": 1474197358870,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
  "startTimestamp": 1474197358822,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompositeBuffer",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358916
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359024,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359044,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359084,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359226,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359279,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359309,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359316,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359319,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359321,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359323,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359325,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359475,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359477,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359486,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359495,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359687,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359691,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359734,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359740,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359750,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359808,
  "executionTime": 184
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197359992,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360070,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360077,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360105,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360139,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360147,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360149,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360152,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360217,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474197360234,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
  "startTimestamp": 1474197358916,
  "executionTime": 1323
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
   "displayName": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "children": [
    {
     "id": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "displayName": "testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "methodName": "testEnumIds",
     "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197360245
 }
]

[
 "TEST_STARTED",
 "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
  "startTimestamp": 1474197360467,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
  "startTimestamp": 1474197360245,
  "executionTime": 231
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportModuleTests",
   "displayName": "org.elasticsearch.transport.TransportModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportModuleTests",
   "children": []
  },
  "startTimestamp": 1474197360488
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportModuleTests",
  "startTimestamp": 1474197360488,
  "executionTime": 176
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197360675
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1474197361040,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1474197360675,
  "executionTime": 370
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScoreModeTests",
   "displayName": "org.elasticsearch.index.query.ScoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScoreModeTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197361054
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474197361340,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474197361342,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474197361344,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474197361346,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScoreModeTests",
  "startTimestamp": 1474197361054,
  "executionTime": 296
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexModuleTests",
   "displayName": "org.elasticsearch.index.IndexModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexModuleTests",
   "children": [
    {
     "id": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSearchOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testFrozen",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testRegisterIndexStore",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDefaultQueryCacheImplIsSelected",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddIndexOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testOtherServiceBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testWrapperIsBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupWithoutType",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testForceCustomQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupUnknownSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197361360
 }
]

[
 "TEST_STARTED",
 "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:01,683][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aAaMubd9RjKWZyf7KP50jQ}{local}{local[187]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:01,828][INFO ][org.elasticsearch.env    ] [VhrPqq1] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:01,829][INFO ][org.elasticsearch.env    ] [VhrPqq1] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197361542,
  "executionTime": 437
 }
]

[
 "TEST_STARTED",
 "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,079][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CL1Q4JgeT_iXqkGlT2eROg}{local}{local[188]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,112][INFO ][org.elasticsearch.env    ] [YWbmteE] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,112][INFO ][org.elasticsearch.env    ] [YWbmteE] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197361979,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,252][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{at2EoaU0RASbhsloFkSYnA}{local}{local[189]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,273][INFO ][org.elasticsearch.env    ] [58bIkFC] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,273][INFO ][org.elasticsearch.env    ] [58bIkFC] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197362128,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,466][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fE2i_gQjRD-H7MQ9mw5FEg}{local}{local[190]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,555][INFO ][org.elasticsearch.env    ] [y8WDwD8] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:02,555][INFO ][org.elasticsearch.env    ] [y8WDwD8] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197362380,
  "executionTime": 335
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,438][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0qK4nivFQjSNcz5gLkQUUA}{local}{local[191]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,460][INFO ][org.elasticsearch.env    ] [YVyCtB0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,460][INFO ][org.elasticsearch.env    ] [YVyCtB0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197362715,
  "executionTime": 835
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,702][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{u3VoH7ylT8SxoIlF_WMg8A}{local}{local[192]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,754][INFO ][org.elasticsearch.env    ] [TWQhdFC] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,755][INFO ][org.elasticsearch.env    ] [TWQhdFC] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197363550,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,901][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{u0B87nOKRJScPTuPrIj6bw}{local}{local[193]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,923][INFO ][org.elasticsearch.env    ] [L2NExSy] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:03,923][INFO ][org.elasticsearch.env    ] [L2NExSy] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197363781,
  "executionTime": 191
 }
]

[
 "TEST_STARTED",
 "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,017][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DLTKS6byRoiNFz-zD9BKYw}{local}{local[194]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,046][INFO ][org.elasticsearch.env    ] [EmaxJSz] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,046][INFO ][org.elasticsearch.env    ] [EmaxJSz] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197363973,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,132][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DA3sQ6NRS7ysfDGxZKOsjg}{local}{local[195]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,198][INFO ][org.elasticsearch.env    ] [O3GQBQA] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,198][INFO ][org.elasticsearch.env    ] [O3GQBQA] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197364071,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,284][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZRfdBR-sSySOoYMA0EWZxA}{local}{local[196]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,317][INFO ][org.elasticsearch.env    ] [jukuQUr] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,317][INFO ][org.elasticsearch.env    ] [jukuQUr] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197364250,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,346][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SJ1ugzuWQ4WiYsVknKU7ug}{local}{local[197]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,370][INFO ][org.elasticsearch.env    ] [6XSqtvx] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,370][INFO ][org.elasticsearch.env    ] [6XSqtvx] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197364328,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,421][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{n1v4qIG0Q_eB0aQ7twO6xA}{local}{local[198]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,445][INFO ][org.elasticsearch.env    ] [6Cj9Zu1] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,445][INFO ][org.elasticsearch.env    ] [6Cj9Zu1] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197364404,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,480][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dcxe-FDuQdy5VLg4dfIfWg}{local}{local[199]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,510][INFO ][org.elasticsearch.env    ] [Y14cxIi] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:04,510][INFO ][org.elasticsearch.env    ] [Y14cxIi] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474197364464,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexModuleTests",
  "startTimestamp": 1474197361360,
  "executionTime": 3213
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "children": [
    {
     "id": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testParsingNotDefaultTwiceDoesNotChangeMapping",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testInitMappers",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingNowDefaultValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampDefaultAndIgnore",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingDefaultToEpochValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatDisablingDuringMergeIsWorking",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultTimestampStream",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultApplied",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testPathMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSizeTimestampIndexParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatEpochCanBeIgnoredWithCustomFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingShouldNotFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197364582
 }
]

[
 "TEST_STARTED",
 "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,650][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,682][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,682][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,687][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,690][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,690][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,853][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,853][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,853][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,889][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{y23MTvJTTuWejiyN-Dil_w}{3pXKnuChRXG-Ffs0Lsq68Q}{local}{local[65]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,889][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,920][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:04,939][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,027][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testParsingNotDefaultTwiceDoesNotChangeMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197364642,
  "executionTime": 420
 }
]

[
 "TEST_STARTED",
 "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,066][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testInitMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365062,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,073][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,126][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,138][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingNowDefaultValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365067,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,171][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,225][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,244][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365165,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,281][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,379][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,399][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampDefaultAndIgnore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365275,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,429][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,522][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,535][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365423,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,576][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,635][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingDefaultToEpochValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365569,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,708][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,842][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,868][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365698,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,935][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:05,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,035][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatDisablingDuringMergeIsWorking]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197365929,
  "executionTime": 182
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,117][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,189][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,323][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,453][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,489][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197366111,
  "executionTime": 379
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,494][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultTimestampStream]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197366490,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,676][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,828][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/3Z95dK-7RZGpDaElY5M_8g] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,854][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/VoT8vzvWS32nVr2uduF0kA] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,945][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/VoT8vzvWS32nVr2uduF0kA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:06,961][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/3Z95dK-7RZGpDaElY5M_8g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,007][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [TimestampFieldMapperTests#testDefaultApplied]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197366495,
  "executionTime": 628
 }
]

[
 "TEST_STARTED",
 "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,208][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,221][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testPathMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367124,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,271][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,357][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367265,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,388][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,545][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,557][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367382,
  "executionTime": 200
 }
]

[
 "TEST_STARTED",
 "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,682][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSizeTimestampIndexParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367582,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,796][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatEpochCanBeIgnoredWithCustomFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367713,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,831][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [new-index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,906][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[new-index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,920][INFO ][org.elasticsearch.index.mapper] [node_s_0] [new-index] [TimestampFieldMapperTests#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367822,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:07,960][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,025][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,037][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197367954,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,077][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,127][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,140][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingShouldNotFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474197368071,
  "executionTime": 108
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,179][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,179][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,180][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:08,181][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
  "startTimestamp": 1474197364582,
  "executionTime": 3609
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "children": [
    {
     "id": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenization",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenizationEdge",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testNoTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testBackwardsCompatibilityEdgeNgramTokenFilter",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testParseTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197368196
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474197368212,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474197368224,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474197368230,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474197368233,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474197368400,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
  "startTimestamp": 1474197368196,
  "executionTime": 220
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197368438
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474197368531,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474197368592,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474197368596,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
  "startTimestamp": 1474197368438,
  "executionTime": 162
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.NodeEnvironmentTests",
   "displayName": "org.elasticsearch.env.NodeEnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.NodeEnvironmentTests",
   "children": [
    {
     "id": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockMultipleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testAvailableIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testStressShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testDeleteSafe",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testResolveIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testCustomDataPaths",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testSegmentInfosTracing",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testPersistentNodeId",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testWhetherClusterFolderShouldBeUsed",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSillySettings",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSingleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197368611
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,670][INFO ][org.elasticsearch.env    ] [bV4CI2c] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,671][INFO ][org.elasticsearch.env    ] [bV4CI2c] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,697][INFO ][org.elasticsearch.env    ] [nxtWjZ5] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,697][INFO ][org.elasticsearch.env    ] [nxtWjZ5] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197368640,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,734][INFO ][org.elasticsearch.env    ] [XzYGOJN] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,735][INFO ][org.elasticsearch.env    ] [XzYGOJN] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197368701,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,807][INFO ][org.elasticsearch.env    ] [UGrqezV] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:08,807][INFO ][org.elasticsearch.env    ] [UGrqezV] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197368745,
  "executionTime": 290
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,066][INFO ][org.elasticsearch.env    ] [zMXB-LK] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,066][INFO ][org.elasticsearch.env    ] [zMXB-LK] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369035,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,166][INFO ][org.elasticsearch.env    ] [yDb94NU] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,166][INFO ][org.elasticsearch.env    ] [yDb94NU] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369119,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,209][INFO ][org.elasticsearch.env    ] [417nB3g] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,209][INFO ][org.elasticsearch.env    ] [417nB3g] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369176,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369217,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,297][INFO ][org.elasticsearch.env    ] [enB56dU] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,298][INFO ][org.elasticsearch.env    ] [enB56dU] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369219,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,398][INFO ][org.elasticsearch.env    ] [27X0l3R] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,398][INFO ][org.elasticsearch.env    ] [27X0l3R] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,522][INFO ][org.elasticsearch.env    ] [27X0l3R] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,522][INFO ][org.elasticsearch.env    ] [27X0l3R] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,781][INFO ][org.elasticsearch.env    ] [2cguS8y] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,781][INFO ][org.elasticsearch.env    ] [2cguS8y] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369328,
  "executionTime": 465
 }
]

[
 "TEST_STARTED",
 "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,881][INFO ][org.elasticsearch.env    ] [_ou1l53] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,881][INFO ][org.elasticsearch.env    ] [_ou1l53] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,910][INFO ][org.elasticsearch.env    ] [3h4u2i9] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:09,910][INFO ][org.elasticsearch.env    ] [3h4u2i9] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:10,019][INFO ][org.elasticsearch.env    ] [u0CBKXc] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:10,019][INFO ][org.elasticsearch.env    ] [u0CBKXc] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197369793,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197370025,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:10,126][INFO ][org.elasticsearch.env    ] [JJGnBeu] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:10,126][INFO ][org.elasticsearch.env    ] [JJGnBeu] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:10,190][INFO ][org.elasticsearch.env    ] [JJGnBeu] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:10,191][INFO ][org.elasticsearch.env    ] [JJGnBeu] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474197370028,
  "executionTime": 167
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.NodeEnvironmentTests",
  "startTimestamp": 1474197368611,
  "executionTime": 2908
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "children": [
    {
     "id": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullGeoPoint",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testInvalidPrecision",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testLocationParsing",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197371527
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,809][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ceS31YrYQwGjvctVDC8Kzg}{local}{local[200]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,816][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,816][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,832][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,832][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,832][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,841][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,841][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,841][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,844][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,878][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,878][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,878][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,882][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,882][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,883][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,888][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,888][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,888][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,890][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,890][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,890][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,894][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,894][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,894][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,901][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,901][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,901][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,912][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,912][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:11,912][WARN ][org.elasticsearch.deprecation.index.mapper]  [MuBThbujki] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371737,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371917,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371921,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371924,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371935,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371937,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371939,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371949,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371954,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371957,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371979,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371982,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474197371985,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
  "startTimestamp": 1474197371527,
  "executionTime": 465
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197372001
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
  "startTimestamp": 1474197372108,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
  "startTimestamp": 1474197372001,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "children": [
    {
     "id": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiSingleByteLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadSingleByteLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiTwoBytesLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testMarkRest",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiFourBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadTwoBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197372125
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474197372200,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474197372202,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474197372204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474197372206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474197372208,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474197372210,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
  "startTimestamp": 1474197372125,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestDocumentTests",
   "displayName": "org.elasticsearch.ingest.IngestDocumentTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestDocumentTests",
   "children": [
    {
     "id": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetInvalidSourceField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueEmptyName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testIngestMetadataTimestamp",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNullListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveInnerField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValues",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNested",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueListAsPartOfPath",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueListElementConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedHasFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListOfMaps",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNullField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueNoIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds_fail",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNestedNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedRemoveFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNonExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197372489
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372631,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372647,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372663,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372668,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372670,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372686,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372688,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372690,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372692,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372696,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372698,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372701,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372703,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372706,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372708,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372712,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372714,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372716,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372718,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372720,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372730,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372733,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372735,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372738,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372740,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372742,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372745,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372747,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372749,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372752,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372754,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372757,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372759,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372761,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372763,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372789,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372791,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372793,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372795,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372797,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372800,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372802,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372804,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372806,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372808,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372811,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372814,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372817,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372819,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372821,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372826,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372829,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372831,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372833,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372836,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372838,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372840,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372842,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372844,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372848,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372850,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372852,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372854,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372857,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372859,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372861,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372863,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372866,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372868,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372870,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372872,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372874,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372876,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372878,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372881,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372883,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372885,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372889,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372891,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372893,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372895,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474197372898,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestDocumentTests",
  "startTimestamp": 1474197372489,
  "executionTime": 415
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197372916
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474197372932,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474197373030,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474197373036,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474197373042,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
  "startTimestamp": 1474197372916,
  "executionTime": 167
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEmptyBooleanQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testDefaultMinShouldMatch",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchDisableCoord",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithoutShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewriteMultipleTimes",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchBiggerThanNumberOfShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownQueryName",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testTooManyQueriesInObject",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197373092
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,152][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vF-QrGmWRu6fixv9VKMrVQ}{local}{local[201]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,164][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,164][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,200][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,200][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,200][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,205][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,205][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,205][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,217][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,217][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,217][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,220][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,220][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,220][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,222][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,223][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,223][WARN ][org.elasticsearch.deprecation.index.mapper]  [e] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373145,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373229,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373232,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373249,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373257,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373263,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373267,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373273,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373432,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373661,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373664,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373666,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373686,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373691,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373696,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373699,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373703,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373711,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373756,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373797,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,831][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,831][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:46]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,831][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:100]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:13,832][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474197373829,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
  "startTimestamp": 1474197373092,
  "executionTime": 745
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "children": [
    {
     "id": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalanceNoReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testIndexEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableOnlyPrimaries",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197373846
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,879][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,880][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,881][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,882][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][4], [test][0], [test][1], [test][3], [test][5]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,882][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,887][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.rebalance.enable] from [NONE] to [PRIMARIES]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474197373871,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,896][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,897][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,897][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,898][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,898][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> verify only enabled index has been routed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474197373888,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,916][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,916][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,916][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474197373899,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,927][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,927][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,927][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474197373921,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,935][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,935][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,936][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,938][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[always_disabled][0], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,938][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:13,941][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.rebalance.enable] from [NONE] to [PRIMARIES]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474197373928,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
  "startTimestamp": 1474197373846,
  "executionTime": 100
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "children": [
    {
     "id": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "displayName": "testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "methodName": "testToReduce",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197373952
 }
]

[
 "TEST_STARTED",
 "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
  "startTimestamp": 1474197373988,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
  "startTimestamp": 1474197373952,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374004
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474197374022,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474197374025,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474197374027,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474197374029,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474197374033,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
  "startTimestamp": 1474197374004,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "children": [
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374044
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474197374107,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474197374118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474197374120,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474197374126,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474197374128,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
  "startTimestamp": 1474197374044,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "displayName": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "children": [
    {
     "id": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testDefaultMaxConcurrentSearches",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    },
    {
     "id": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testBatchExecute",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374138
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1474197374184,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1474197374186,
  "executionTime": 2029
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
  "startTimestamp": 1474197374138,
  "executionTime": 2079
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "displayName": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "children": [
    {
     "id": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testResponseStreaming",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    },
    {
     "id": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testIndicesSyncedFlushResult",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197376285
 }
]

[
 "TEST_STARTED",
 "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1474197376343,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1474197376363,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
  "startTimestamp": 1474197376285,
  "executionTime": 97
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testParsingContextFromDocument",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingBasic",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObject",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingMixed",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197376390
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,476][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,537][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,537][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,541][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,543][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,543][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,668][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,670][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,671][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,672][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nvtUpCvLTEiIgEK4Wzh7bg}{Ogne84SLS82Rn6mBrUjj2A}{local}{local[66]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,673][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,707][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,726][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:16,979][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197376464,
  "executionTime": 811
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,290][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,530][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,543][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377275,
  "executionTime": 335
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,617][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,764][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377610,
  "executionTime": 200
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,822][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377811,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,826][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377823,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,830][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testParsingContextFromDocument]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377827,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,834][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377831,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,842][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:17,949][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197377836,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:18,044][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197378041,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:18,048][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474197378045,
  "executionTime": 4
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:18,049][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:18,050][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:18,050][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:18,053][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
  "startTimestamp": 1474197376390,
  "executionTime": 1668
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
   "displayName": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "children": [
    {
     "id": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testNoScoring",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testUseIndexStats",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testApproximations",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testCollector",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378066
 }
]

[
 "TEST_STARTED",
 "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474197378108,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474197378131,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474197378134,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474197378140,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474197378142,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
  "startTimestamp": 1474197378066,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378160
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:18,191][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XQTX_nyGT-62eOVNS_HsXA}{local}{local[218]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:18,207][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"lag\" : 946%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:18,208][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"lag\" : 946%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474197378203,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474197378209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474197378211,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
  "startTimestamp": 1474197378160,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
   "displayName": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "children": [
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378225
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1474197378262,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1474197378289,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
  "startTimestamp": 1474197378225,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
   "displayName": "org.elasticsearch.action.bulk.BulkRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkRequestTests",
   "children": [
    {
     "id": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk3",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk6",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkRequestWithRefresh",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk9",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkNoSource",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk10",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk7",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAddIterable",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAllowExplicitIndex",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testCannotAddNullRequests",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk4",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk8",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk2",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk1",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378321
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378342,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378349,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378357,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378362,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378368,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378370,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378421,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378431,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378433,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378466,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378472,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378483,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378502,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474197378530,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
  "startTimestamp": 1474197378321,
  "executionTime": 214
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
   "displayName": "org.elasticsearch.common.compress.DeflateCompressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.compress.DeflateCompressTests",
   "children": [
    {
     "id": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsL",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsS",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsSThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsIThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsLThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testMixed",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsI",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandomThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocsThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocs",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378546
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197378592,
  "executionTime": 340
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197378932,
  "executionTime": 256
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197379188,
  "executionTime": 301
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197379489,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197379769,
  "executionTime": 561
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197380330,
  "executionTime": 346
 }
]

[
 "TEST_STARTED",
 "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197380677,
  "executionTime": 579
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197381256,
  "executionTime": 224
 }
]

[
 "TEST_STARTED",
 "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197381480,
  "executionTime": 463
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197381943,
  "executionTime": 1401
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474197383344,
  "executionTime": 1110
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
  "startTimestamp": 1474197378546,
  "executionTime": 5910
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "children": [
    {
     "id": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "displayName": "testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "methodName": "testQueryRescoreMode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197384462
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
  "startTimestamp": 1474197384480,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
  "startTimestamp": 1474197384462,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterModuleTests",
   "displayName": "org.elasticsearch.cluster.ClusterModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterModuleTests",
   "children": [
    {
     "id": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDeciderDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testUnknownShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDecider",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testShardsAllocatorFactoryNull",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocatorAlreadyRegistered",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197384502
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384527,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384534,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384542,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384545,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384560,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384568,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384575,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384584,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384594,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474197384608,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterModuleTests",
  "startTimestamp": 1474197384502,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery3",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery2",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery4",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery1",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197384624
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,672][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fUo4oktoTQSKVjNE-Hrsqg}{local}{local[219]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,679][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,679][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,698][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,698][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,698][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,701][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,701][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,701][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,718][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,718][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,718][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,724][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,724][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,724][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,727][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,727][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,727][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,745][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,745][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,745][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,748][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,748][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,750][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,754][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,754][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,754][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:24,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [OY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384667,
  "executionTime": 165
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384832,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384846,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384852,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384855,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384878,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384881,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384884,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384890,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384918,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384939,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384943,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384950,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474197384952,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
  "startTimestamp": 1474197384624,
  "executionTime": 365
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197384996
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:16:25,038][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fwB3suHfQuuP4t2FWgFAyg}{local}{local[220]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:16:25,050][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:16:25,051][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474197385048,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474197385052,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474197385054,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
  "startTimestamp": 1474197384996,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.IndexIdTests",
   "displayName": "org.elasticsearch.repositories.IndexIdTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.IndexIdTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385065
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474197385087,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474197385091,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474197385092,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.IndexIdTests",
  "startTimestamp": 1474197385065,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.VersionValueTests",
   "displayName": "org.elasticsearch.index.engine.VersionValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.VersionValueTests",
   "children": [
    {
     "id": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    },
    {
     "id": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testDeleteRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385103
 }
]

[
 "TEST_STARTED",
 "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1474197385140,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1474197385152,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.VersionValueTests",
  "startTimestamp": 1474197385103,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
   "displayName": "org.elasticsearch.common.settings.SettingsModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsModuleTests",
   "children": [
    {
     "id": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testLoggerSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterShared",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testSpecialTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettingsFilter",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testMutuallyExclusiveScopes",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testOldMaxClauseCountSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385165
 }
]

[
 "TEST_STARTED",
 "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385187,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:25,272][WARN ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] %0D%0A*************************************************************************************%0D%0AFound index level settings on node level configuration.%0D%0A%0D%0ASince elasticsearch 5.x index level settings can NOT be set on the nodes %0D%0Aconfiguration like the elasticsearch.yaml, in system properties or command line %0D%0Aarguments.In order to upgrade all indices the settings must be updated via the %0D%0A/${index}/_settings API. Unless all settings are dynamic all indices must be closed %0D%0Ain order to apply the upgradeIndices created in the future should use index templates %0D%0Ato set default values. %0D%0A%0D%0APlease ensure all required values are updated on all indices by executing: %0D%0A%0D%0Acurl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{%0A  \"index.foo.bar\" : \"1\"%0A}'%0D%0A*************************************************************************************%0D%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385194,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385284,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385291,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385297,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385359,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385365,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385377,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474197385386,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
  "startTimestamp": 1474197385165,
  "executionTime": 242
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "children": [
    {
     "id": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDictionaryDecompounder",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    },
    {
     "id": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDefaultsCompoundAnalysis",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385413
 }
]

[
 "TEST_STARTED",
 "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1474197385429,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1474197385547,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
  "startTimestamp": 1474197385413,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "displayName": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "children": [
    {
     "id": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testFixedExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testScalingExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testIndexingThreadPoolsMaxSize",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCorrectThreadPoolTypePermittedInSettings",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCustomThreadPool",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testShutdownNowInterrupts",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385581
 }
]

[
 "TEST_STARTED",
 "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474197385650,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474197385657,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474197385660,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474197385665,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474197385668,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474197385673,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
  "startTimestamp": 1474197385581,
  "executionTime": 99
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385686
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
  "startTimestamp": 1474197385704,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
  "startTimestamp": 1474197385686,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "displayName": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "children": [
    {
     "id": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testSingleValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testMultiValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385760
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1474197385777,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1474197386029,
  "executionTime": 129
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
  "startTimestamp": 1474197385760,
  "executionTime": 400
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197386167
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,210][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,265][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,265][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,269][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,272][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,272][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,506][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,506][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,507][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,509][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7fJIwtGRRi2J-4JqmAPOig}{98iDPMHsRLqnrXsit1W9vA}{local}{local[67]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,510][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,530][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,551][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,764][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474197386194,
  "executionTime": 613
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,817][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,878][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,896][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474197386807,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:26,936][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,259][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474197386930,
  "executionTime": 373
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,304][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,304][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,305][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,306][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1474197386167,
  "executionTime": 1149
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestTableTests",
   "children": [
    {
     "id": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testIgnoreContentType",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderYaml",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderText",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderJson",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderSmile",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersWithoutTimestamp",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderCbor",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387328
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387387,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387401,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387403,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387405,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387408,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387409,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387411,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387414,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474197387416,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
  "startTimestamp": 1474197387328,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387426
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:27,445][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UHTbWZozTcuqlNl21bTpAQ}{local}{local[221]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474197387454,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474197387457,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474197387459,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
  "startTimestamp": 1474197387426,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387472
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474197387485,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474197387490,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474197387492,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474197387494,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474197387497,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
  "startTimestamp": 1474197387472,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "children": [
    {
     "id": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithMixed",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testPriorityQueue",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithCallables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testExecutePrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeoutCleanup",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeout",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387508
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387534,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387540,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387546,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387548,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387560,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387566,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474197387598,
  "executionTime": 284
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
  "startTimestamp": 1474197387508,
  "executionTime": 376
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "children": [
    {
     "id": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByAttribute",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodesIds",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByIdOrName",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testDeltas",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387892
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474197388057,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474197388064,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474197388067,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:16:28,074][INFO ][org.elasticsearch.cluster.node] nodes A: nodes: %0A   {name_20}{node_20}{2RzY3ATIQ7aD-QVGYk5zEQ}{local}{local[242]}{custom=match}%0A   {name_19}{node_19}{dPLo_k_lT3CZhiaf9ZI8hg}{local}{local[241]}{custom=pKu}, local%0A   {name_23}{node_23}{wC2CnQ38SbKqGnHumWANvg}{local}{local[245]}{custom=match}%0A   {name_22}{node_22}{6kawusF0R7CMVRoIqxBI3A}{local}{local[244]}{custom=sYDAW}%0A   {name_21}{node_21}{6VYdDVqfSDG04lWt8tbvpg}{local}{local[243]}{custom=match}, master%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:16:28,100][INFO ][org.elasticsearch.cluster.node] nodes B: nodes: %0A   {name_25}{node_25}{zeptW6BxSFW_tb6agYxNmw}{local}{local[247]}{custom=mLVcJ}%0A   {name_20}{node_20}{2RzY3ATIQ7aD-QVGYk5zEQ}{local}{local[242]}{custom=match}%0A   {name_19}{node_19}{PCaEZIwoRUKFHOaMZm5m1A}{local}{local[241]}{new=new, custom=pKu}%0A   {name_28}{node_28}{_oPqx5WVS6uTB0MujzCtYA}{local}{local[250]}{custom=match}%0A   {name_27}{node_27}{pENkdHiHQC-0HkAp3Up7og}{local}{local[249]}{custom=NJuf}%0A   {name_26}{node_26}{1pKUM_FsR9Kkl-45vyN5aA}{local}{local[248]}{custom=QoRq}%0A   {name_24}{node_24}{T6EuDotlT-SqFxJZd-U7hg}{local}{local[246]}{custom=clHZ}%0A   {name_23}{node_23}{t-ZtbiI0QWe4FIuoo5cntA}{local}{local[245]}{new=new, custom=match}%0A   {name_22}{node_22}{6kawusF0R7CMVRoIqxBI3A}{local}{local[244]}{custom=sYDAW}, local, master%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474197388069,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
  "startTimestamp": 1474197387892,
  "executionTime": 211
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "children": [
    {
     "id": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "displayName": "testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "methodName": "testPreferPrimaryAllocationOverReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197388110
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with 1 initial recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,524][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create several indices with no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,525][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,538][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][8], [test1][9]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] increasing the number of replicas to 1, and perform a reroute (to get the replicas allocation going)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] 2 replicas should be initializing now for the existing indices (we throttle to 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create a new index%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:28,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute, verify that primaries for the new index primary shards are allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
  "startTimestamp": 1474197388517,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
  "startTimestamp": 1474197388110,
  "executionTime": 451
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQueryInnerSpanMultiTerm",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnsupportedInnerQueryType",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197388568
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,604][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{mK-HAfRUQ12nzZwEdSqtFQ}{local}{local[253]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,611][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,611][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,629][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,629][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,629][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,635][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,635][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,635][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,636][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,636][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,637][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,638][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,638][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,639][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:28,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [FCIuMaoSnJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197388599,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197388645,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197388647,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197388856,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197388858,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197388899,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197389005,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197389007,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197389015,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197389024,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197389027,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474197389038,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
  "startTimestamp": 1474197388568,
  "executionTime": 479
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "displayName": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "children": [
    {
     "id": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testModificationPreventsFlushing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsIfOperationIsInFlight",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSingleShardSuccess",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailAfterIntermediateCommit",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailWhenCommitIsMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsOnIndexClosedOrMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197389057
 }
]

[
 "TEST_STARTED",
 "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,317][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,393][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,393][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,397][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,400][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,402][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,765][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,765][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,766][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,808][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{2JfaTuJTSr6fQbupet4L3A}{2yViTPFERkeUO-OoMbkGfg}{local}{local[68]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:29,809][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:30,317][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:30,549][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:31,103][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:31,206][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/XOV0GHB4SLSayneKOMLp2Q] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:34,128][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testModificationPreventsFlushing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474197389309,
  "executionTime": 4971
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:34,286][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:34,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:35,021][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-QkHAbNaRk-IBC2ZlN0jHQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:35,967][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsIfOperationIsInFlight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474197394280,
  "executionTime": 1794
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:36,085][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:36,729][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:36,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/u9VAs_AxSvyPolLWBv08Ng] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:38,135][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSingleShardSuccess]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474197396074,
  "executionTime": 2166
 }
]

[
 "TEST_STARTED",
 "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:38,247][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:38,933][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,044][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/c1zOJgPeQliavBcRlUprsQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,143][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailAfterIntermediateCommit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474197398240,
  "executionTime": 2043
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,290][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,255][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/JaFUc8iCS-OHOScweGs16Q] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,773][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailWhenCommitIsMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474197400284,
  "executionTime": 2608
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,899][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,808][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/EcDDsgCLTxSQsQMIVq-zIA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,927][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsOnIndexClosedOrMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474197402893,
  "executionTime": 1097
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,990][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,994][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,995][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,021][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
  "startTimestamp": 1474197389057,
  "executionTime": 14975
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoHashTests",
   "displayName": "org.elasticsearch.common.geo.GeoHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoHashTests",
   "children": [
    {
     "id": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testGeohashAsLongRoutines",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    },
    {
     "id": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testBboxFromHash",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197404038
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1474197404179,
  "executionTime": 894
 }
]

[
 "TEST_STARTED",
 "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1474197405073,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoHashTests",
  "startTimestamp": 1474197404038,
  "executionTime": 1052
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "displayName": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "children": [
    {
     "id": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testUpgradeFromMultiFieldTypeToMultiFields",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testMergeMultiField",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197405096
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,128][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,151][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,151][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,155][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,157][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,157][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,302][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,302][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,303][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,315][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UzKZRJaCT-uqnuJyt9Pz4w}{piiMlQg3SwiA8P8eW3Dlqw}{local}{local[69]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,316][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,329][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,373][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,552][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testUpgradeFromMultiFieldTypeToMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1474197405118,
  "executionTime": 473
 }
]

[
 "TEST_STARTED",
 "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,607][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,877][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testMergeMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1474197405591,
  "executionTime": 338
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,929][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,929][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,930][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:45,931][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
  "startTimestamp": 1474197405096,
  "executionTime": 840
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "children": [
    {
     "id": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testRestoreSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    },
    {
     "id": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testCreateSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197405943
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1474197406064,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1474197406075,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
  "startTimestamp": 1474197405943,
  "executionTime": 138
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "displayName": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "children": [
    {
     "id": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCountOnLinux",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckRead",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckParse",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCount",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406092
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474197406144,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474197406146,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474197406159,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:16:46,183 TEST-MaxMapCountCheckTests.testGetMaxMapCount-seed#[DB64F96F238DCA2A] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:16:46,188 TEST-MaxMapCountCheckTests.testGetMaxMapCount-seed#[DB64F96F238DCA2A] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474197406160,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
  "startTimestamp": 1474197406092,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.NativeScriptTests",
   "displayName": "org.elasticsearch.script.NativeScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.NativeScriptTests",
   "children": [
    {
     "id": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testNativeScript",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testFineGrainedSettingsDontAffectNativeScripts",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406200
 }
]

[
 "TEST_STARTED",
 "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1474197406242,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1474197406250,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.NativeScriptTests",
  "startTimestamp": 1474197406200,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406266
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,298][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{l812Dv_4TlO3iLCAYdZtsQ}{local}{local[254]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,307][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,307][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,329][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,329][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,329][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,334][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,334][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,334][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:46,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyzuCefyMH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406293,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406339,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406342,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406356,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406359,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406361,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406364,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406371,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474197406374,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
  "startTimestamp": 1474197406266,
  "executionTime": 116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406388
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474197406463,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474197406469,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474197406475,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
  "startTimestamp": 1474197406388,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidTests",
   "displayName": "org.elasticsearch.index.mapper.UidTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidTests",
   "children": [
    {
     "id": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "displayName": "testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "methodName": "testCreateAndSplitId",
     "className": "org.elasticsearch.index.mapper.UidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406500
 }
]

[
 "TEST_STARTED",
 "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
  "startTimestamp": 1474197406529,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidTests",
  "startTimestamp": 1474197406500,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406541
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,587][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UoM7G7BORa6OwURm4UeCYA}{local}{local[255]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,593][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,593][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,634][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,634][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,634][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,649][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,649][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,649][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,651][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,651][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,651][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,655][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,655][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,655][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,657][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,657][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,657][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,660][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,660][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,662][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,662][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,662][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,664][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,664][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,664][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,688][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,689][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:46,689][WARN ][org.elasticsearch.deprecation.index.mapper]  [LlO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406573,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406699,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406702,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406705,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406707,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406715,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406718,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406743,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406746,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474197406769,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
  "startTimestamp": 1474197406541,
  "executionTime": 234
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "displayName": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "methodName": null,
   "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "children": [
    {
     "id": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "displayName": "testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "methodName": "testNodeInfoStreaming",
     "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406786
 }
]

[
 "TEST_STARTED",
 "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
  "startTimestamp": 1474197406837,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
  "startTimestamp": 1474197406786,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testCancelCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testAllocateCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testMoveShardCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197406855
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474197406916,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474197406918,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,960][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary shard with accept_data_loss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,964][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the relocation allocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary being replicated, make sure it fails%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,967][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel allocation of the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,968][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,968][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,969][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,969][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,969][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,970][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary allocation (with allow_primary set to true)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,972][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474197406930,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,980][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-existent node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,980][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-data node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,980][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing shard, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing index, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating stale primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,983][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,983][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,983][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on the primary shard node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,984][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verify that we fail when there are no unassigned shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474197406972,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,993][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,993][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,993][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:46,994][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474197406985,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
  "startTimestamp": 1474197406855,
  "executionTime": 142
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197407002
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474197407022,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474197407024,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474197407026,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474197407028,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474197407031,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474197407033,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
  "startTimestamp": 1474197407002,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "displayName": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "children": [
    {
     "id": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testSortByMasterLikelihood",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    },
    {
     "id": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testElectMaster",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197407045
 }
]

[
 "TEST_STARTED",
 "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1474197407113,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1474197407118,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
  "startTimestamp": 1474197407045,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "displayName": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "children": [
    {
     "id": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testStoreStatusOrdering",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    },
    {
     "id": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testBasicSerialization",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197407135
 }
]

[
 "TEST_STARTED",
 "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1474197407274,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1474197407278,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
  "startTimestamp": 1474197407135,
  "executionTime": 160
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "displayName": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "children": [
    {
     "id": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testSort",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197407319
 }
]

[
 "TEST_STARTED",
 "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1474197407396,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1474197407410,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
  "startTimestamp": 1474197407319,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "children": [
    {
     "id": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testNoParentNullFieldCreatedIfNoParentSpecified",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldNotSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0LazyLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197407439
 }
]

[
 "TEST_STARTED",
 "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,468][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,514][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,514][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,518][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,521][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,521][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,632][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,632][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,633][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,634][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{VZm9plZfQeqyrC-10smm2g}{zkW30kPUSlquZ40zo6srtw}{local}{local[70]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,635][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,652][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,672][INFO ][org.elasticsearch.index.mapper]  [_index] [ParentFieldMapperTests#testNoParentNullFieldCreatedIfNoParentSpecified]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474197407457,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,675][INFO ][org.elasticsearch.index.mapper]  [_index] [ParentFieldMapperTests#testPost2Dot0EagerLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474197407673,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,682][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,842][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testParentSetInDocNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474197407676,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:47,930][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,076][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,107][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldNotSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474197407904,
  "executionTime": 266
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,175][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,255][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,273][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474197408170,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,316][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testPost2Dot0LazyLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474197408314,
  "executionTime": 3
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,318][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,318][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,318][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,320][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
  "startTimestamp": 1474197407439,
  "executionTime": 887
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "displayName": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "children": [
    {
     "id": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator2",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testNodeSelectorRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testReplicaShardPreferenceIters",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator1",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testShardsAndPreferNodeRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testEmptyIterator",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testRandomRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testAttributePreferenceRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197408334
 }
]

[
 "TEST_STARTED",
 "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408362,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408367,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:48,389][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408375,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408390,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:48,400][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408392,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408402,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408408,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:48,432][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474197408420,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
  "startTimestamp": 1474197408334,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197408443
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:48,836][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{E8-GMMJFQVe9ouVhAByThg}{local}{local[335]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:48,848][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:48,849][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474197408846,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474197408850,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474197408852,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
  "startTimestamp": 1474197408443,
  "executionTime": 414
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testLargerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testSmallerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testNegativeIsError",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefaultDefaultsToAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testZero",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197408863
 }
]

[
 "TEST_STARTED",
 "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,927][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,949][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,949][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,953][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,955][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:48,955][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,225][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,225][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,226][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,229][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{txjIs5CTRlKw5rPyx3z9Kg}{yXjOn8NqR3ua7LM0Pxp1vw}{local}{local[71]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,229][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,243][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,273][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,409][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,858][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testLargerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197408918,
  "executionTime": 971
 }
]

[
 "TEST_STARTED",
 "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,898][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,951][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,096][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testSmallerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197409890,
  "executionTime": 269
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,167][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testNegativeIsError]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197410159,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,174][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,224][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,242][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/y9vVJOTgSgWJjO2SOs23qQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,554][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197410168,
  "executionTime": 465
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,700][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,842][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefaultDefaultsToAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197410633,
  "executionTime": 239
 }
]

[
 "TEST_STARTED",
 "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,881][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:50,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:51,259][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testZero]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197410873,
  "executionTime": 439
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:51,312][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:51,313][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:51,313][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:51,321][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1474197408863,
  "executionTime": 2468
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
   "displayName": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "children": [
    {
     "id": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsWithFieldBoosts",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testCrossFieldMultiMatchQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTerms",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendNoTermQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsUnsupportedValue",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197411341
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:51,418][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,311][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,311][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,316][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,318][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,318][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,466][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,466][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,467][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,471][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{lkFItcjzSHyDxHat-5xQHQ}{ujyLggUBT8WWDeg5SBiaoA}{local}{local[72]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,472][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,484][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,507][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,561][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,592][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsWithFieldBoosts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474197411410,
  "executionTime": 1224
 }
]

[
 "TEST_STARTED",
 "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,640][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,717][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testCrossFieldMultiMatchQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474197412634,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,844][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,891][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,904][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTerms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474197412839,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:52,997][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,010][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendNoTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474197412931,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,052][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,172][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,197][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsUnsupportedValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474197413046,
  "executionTime": 185
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,232][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,232][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,232][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,234][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
  "startTimestamp": 1474197411341,
  "executionTime": 1898
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
   "displayName": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "children": [
    {
     "id": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyIngestIdViaRequestParam",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyExecuted",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyFailed",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyBulkNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testIndexApiSinglePipelineExecution",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyWithBulkRequest",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197413249
 }
]

[
 "TEST_STARTED",
 "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413296,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413343,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413358,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413376,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413383,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413386,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474197413393,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
  "startTimestamp": 1474197413249,
  "executionTime": 206
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ChannelsTests",
   "displayName": "org.elasticsearch.common.ChannelsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ChannelsTests",
   "children": [
    {
     "id": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThoughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithoutException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197413462
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474197413479,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474197413507,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474197413588,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474197413602,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474197413618,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474197413632,
  "executionTime": 68
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ChannelsTests",
  "startTimestamp": 1474197413462,
  "executionTime": 244
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "children": [
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197413712
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
  "startTimestamp": 1474197413735,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
  "startTimestamp": 1474197413712,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldMissing",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testIllegaArguments",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessNotAllowedTypes",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryParameterArrayException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessOnNonStringField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197413758
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,786][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MSzvSEw0TNWJsNDFeEzoUw}{local}{local[337]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,792][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,792][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,806][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,807][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,807][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,809][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,811][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,811][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,811][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,818][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,819][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,819][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,821][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,821][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,821][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,823][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,823][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,823][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,826][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,826][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,826][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,828][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,828][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,829][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,831][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,831][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,831][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,838][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,838][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:53,838][WARN ][org.elasticsearch.deprecation.index.mapper]  [tGL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413781,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413840,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413843,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413846,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413860,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413863,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413867,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413870,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413876,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413879,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413882,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413884,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413888,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413890,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413893,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413896,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413899,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413901,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474197413941,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
  "startTimestamp": 1474197413758,
  "executionTime": 188
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197413952
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1474197413974,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1474197413978,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1474197413952,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "displayName": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "children": [
    {
     "id": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateInvalidNumberOfShards",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateValidationAccumulatesValidationErrors",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateEmptyMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBrokenMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBlankMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithAliasNameEqualToTemplatePattern",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testAliasInvalidFilterInvalidJson",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197413990
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,017][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,039][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,040][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,043][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,045][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,045][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,237][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,238][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,238][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,252][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{i94hHw31T_ijhPj_rqA-BQ}{RVg3LyL6RDqzVR6TvhEfUQ}{local}{local[73]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,253][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,273][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,288][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateInvalidNumberOfShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414009,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,293][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateValidationAccumulatesValidationErrors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414289,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,301][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateEmptyMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414294,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,308][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBrokenMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414302,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,316][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [eOqYh6EaRgG3f-Iz9HRwOQ] The [string] field is deprecated, please use [text] or [keyword] instead on [field2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,317][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414309,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,325][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBlankMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414318,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,329][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithAliasNameEqualToTemplatePattern]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414326,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,334][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testAliasInvalidFilterInvalidJson]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474197414330,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,335][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,337][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,337][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:54,339][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
  "startTimestamp": 1474197413990,
  "executionTime": 354
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.ShardPathTests",
   "displayName": "org.elasticsearch.index.shard.ShardPathTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.ShardPathTests",
   "children": [
    {
     "id": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testGetRootPaths",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testLoadShardPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testIllegalCustomDataPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathIndexUUIDMissmatch",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathOnMultiState",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testValidCtor",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197414351
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,434][INFO ][org.elasticsearch.env    ] [Wsi4ak-] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,434][INFO ][org.elasticsearch.env    ] [Wsi4ak-] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474197414393,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,512][INFO ][org.elasticsearch.env    ] [fzfmoNb] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,512][INFO ][org.elasticsearch.env    ] [fzfmoNb] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474197414471,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474197414537,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,572][INFO ][org.elasticsearch.env    ] [XB0Q3_r] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,573][INFO ][org.elasticsearch.env    ] [XB0Q3_r] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,597][WARN ][org.elasticsearch.index.shard] [node_s_0] [test][0] [foo][0] found shard on path: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.shard.ShardPathTests_DB64F96F238DCA2A-001\\tempDir-007\\nodes\\0\\indices\\foobar\\0] with a different index UUID - this shard seems to be leftover from a different index with the same name. Remove the leftover shard in order to reuse the path with the current index%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474197414541,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,632][INFO ][org.elasticsearch.env    ] [KBFmyCA] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:54,632][INFO ][org.elasticsearch.env    ] [KBFmyCA] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
  "message": "This test tests multi data.path but we only got one",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: This test tests multi data.path but we only got one\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:4924E17FF0F81FFA]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.shard.ShardPathTests.testFailLoadShardPathOnMultiState(ShardPathTests.java:66)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: This test tests multi data.path but we only got one",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474197414598,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474197414637,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.ShardPathTests",
  "startTimestamp": 1474197414351,
  "executionTime": 327
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197414685
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474197414713,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474197414715,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474197414717,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474197414719,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474197414722,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474197414724,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
  "startTimestamp": 1474197414685,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
   "displayName": "org.elasticsearch.action.support.IndicesOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.IndicesOptionsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    },
    {
     "id": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testFromOptions",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197414733
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1474197414773,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1474197414775,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
  "startTimestamp": 1474197414733,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.BytesRefHashTests",
   "displayName": "org.elasticsearch.common.util.BytesRefHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.BytesRefHashTests",
   "children": [
    {
     "id": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197414789
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:54,857][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:54,890][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:54,890][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:54,898][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:54,900][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:54,900][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,023][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,024][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,024][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,028][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{X5IG029sTjSme0qykyowdg}{PhsLY8-wQq6ZIWzWAdmEdw}{local}{local[74]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,029][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,065][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:55,987][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testGet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474197414849,
  "executionTime": 1139
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:57,279][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474197415989,
  "executionTime": 1291
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:59,416][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474197417280,
  "executionTime": 2137
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:59,959][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474197419418,
  "executionTime": 542
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:00,185][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474197419960,
  "executionTime": 231
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:00,191][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:00,192][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:00,192][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:00,194][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.BytesRefHashTests",
  "startTimestamp": 1474197414789,
  "executionTime": 5420
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "children": [
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420221
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474197420258,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474197420315,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474197420329,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474197420364,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
  "startTimestamp": 1474197420221,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ExtensionPointTests",
   "displayName": "org.elasticsearch.common.util.ExtensionPointTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ExtensionPointTests",
   "children": [
    {
     "id": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "displayName": "testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "methodName": "testClassSet",
     "className": "org.elasticsearch.common.util.ExtensionPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420376
 }
]

[
 "TEST_STARTED",
 "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
  "startTimestamp": 1474197420456,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ExtensionPointTests",
  "startTimestamp": 1474197420376,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchNone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testNamedQueryParsing",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryFormat",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNonDateWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNumericField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteOpenBoundsToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeBoundaries",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchAll",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryUnmappedWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420477
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:00,521][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4nHjXL1NQqieNFNzxF5Osw}{local}{local[338]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:00,530][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:00,530][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420516,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420561,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420564,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420566,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420569,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420571,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:50AA8DB71EE69325]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.RangeQueryBuilderTests.testDateRangeQueryFormat(RangeQueryBuilderTests.java:219)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420574,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420578,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420628,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420645,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420648,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:514E42FCEDFC96D0]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.RangeQueryBuilderTests.testToQueryNumericField(RangeQueryBuilderTests.java:202)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420651,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420653,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:E26B13E407C2FD3C]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.RangeQueryBuilderTests.testDateRangeBoundaries(RangeQueryBuilderTests.java:263)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420656,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420658,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420664,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420667,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420669,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:9FAC7DEE7B4453F]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.RangeQueryBuilderTests.testDateRangeQueryTimezone(RangeQueryBuilderTests.java:320)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420673,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420693,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420696,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474197420698,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
  "startTimestamp": 1474197420477,
  "executionTime": 237
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420722
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474197420759,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474197420762,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474197420763,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474197420770,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474197420772,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
  "startTimestamp": 1474197420722,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "children": [
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflict",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSet",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLFieldOnMergeWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndEnabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflictOnCluster",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSetTtlDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatChangingTTLKeepsMapperEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLAfterFirstDisablingWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndDisabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420783
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:00,844][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:00,878][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:00,878][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:00,883][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:00,888][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:00,888][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,010][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,010][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,011][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,012][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{3-lGy8l9SDuF9ZZpELA7Pw}{jE8j_-byQdC-xOsY4kxQLg}{local}{local[75]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,013][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,026][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,045][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,200][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197420830,
  "executionTime": 410
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,246][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,303][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,322][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatDisablingTTLReportsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197421240,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,404][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,511][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,542][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197421392,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,592][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,692][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatEnablingTTLFieldOnMergeWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197421586,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,742][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,802][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,824][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197421736,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,866][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:01,966][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndEnabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197421859,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,009][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,126][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatDisablingTTLReportsConflictOnCluster]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422001,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,157][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,284][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422151,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,327][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,481][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422314,
  "executionTime": 193
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,514][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,569][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,598][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSetTtlDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422507,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,630][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,698][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatChangingTTLKeepsMapperEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422624,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,733][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,791][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,805][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex/6GVIAxpvRVq96P_0P6et3A] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatEnablingTTLAfterFirstDisablingWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422726,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,875][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,968][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:02,982][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197422869,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,021][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,123][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,138][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndDisabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474197423013,
  "executionTime": 170
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,183][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,184][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,184][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:03,186][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
  "startTimestamp": 1474197420783,
  "executionTime": 2476
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "children": [
    {
     "id": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifield",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValues",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifieldTwoLevels",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423267
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,315][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,367][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,367][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,371][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,374][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,374][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,485][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,485][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,485][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,527][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yDVwwI7aTnm8t5H3M9JBRQ}{_k33AJ_2TcuoOlLfR-KyEA}{local}{local[76]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,527][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,547][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,564][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,653][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,709][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifield]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474197423307,
  "executionTime": 426
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,740][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,861][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474197423733,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:03,969][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,021][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,046][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifieldTwoLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474197423964,
  "executionTime": 110
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,075][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,075][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,075][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,077][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
  "startTimestamp": 1474197423267,
  "executionTime": 815
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
   "displayName": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "children": [
    {
     "id": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadWriteState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testVersionMismatch",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testLoadState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testCorruption",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadClusterState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197424091
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474197424124,
  "executionTime": 478
 }
]

[
 "TEST_STARTED",
 "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474197424602,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474197424699,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474197424802,
  "executionTime": 239
 }
]

[
 "TEST_STARTED",
 "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474197425041,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
  "startTimestamp": 1474197424091,
  "executionTime": 987
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientTests",
   "children": [
    {
     "id": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testThatUsingAClosedClientThrowsAnException",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    },
    {
     "id": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testPluginNamedWriteablesRegistered",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197425090
 }
]

[
 "TEST_STARTED",
 "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,135][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,136][INFO ][org.elasticsearch.plugins] [_client_] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,175][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1474197425132,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,186][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,186][INFO ][org.elasticsearch.plugins] [_client_] loaded plugin [org.elasticsearch.client.transport.TransportClientTests$MockPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,230][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1474197425181,
  "executionTime": 69
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientTests",
  "startTimestamp": 1474197425090,
  "executionTime": 163
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.StreamsTests",
   "displayName": "org.elasticsearch.common.io.StreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.StreamsTests",
   "children": [
    {
     "id": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromInputStream",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromReader",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testBytesStreamInput",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromByteArray",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyToString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197425258
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474197425310,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474197425312,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474197425314,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474197425316,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474197425318,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474197425319,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.StreamsTests",
  "startTimestamp": 1474197425258,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "displayName": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197425330
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474197425371,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474197425385,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474197425386,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474197425388,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
  "startTimestamp": 1474197425330,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
   "displayName": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "children": [
    {
     "id": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingProcessing",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testInvalidIndexFolder",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesDiscovery",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testCleanupWhenEmpty",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesNotImportedWhenTombstonePresent",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197425398
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,494][INFO ][org.elasticsearch.env    ] [4ESJ0Wi] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,495][INFO ][org.elasticsearch.env    ] [4ESJ0Wi] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,533][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,541][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,597][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,601][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,606][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,610][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474197425438,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,667][INFO ][org.elasticsearch.env    ] [pFOjm-Z] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,667][INFO ][org.elasticsearch.env    ] [pFOjm-Z] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474197425630,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,797][INFO ][org.elasticsearch.env    ] [DbFz2uG] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,797][INFO ][org.elasticsearch.env    ] [DbFz2uG] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,834][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474197425726,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,915][INFO ][org.elasticsearch.env    ] [9DXTXNn] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,915][INFO ][org.elasticsearch.env    ] [9DXTXNn] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474197425836,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,958][INFO ][org.elasticsearch.env    ] [P8UWd7V] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,958][INFO ][org.elasticsearch.env    ] [P8UWd7V] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:05,973][WARN ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] can not be imported as a dangling index, as an index with the same name and UUID exist in the index tombstones.  This situation is likely caused by copying over the data directory for an index that was previously deleted.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474197425928,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
  "startTimestamp": 1474197425398,
  "executionTime": 615
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryParseContextTests",
   "displayName": "org.elasticsearch.index.query.QueryParseContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryParseContextTests",
   "children": [
    {
     "id": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderExceptions",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderEmptyObject",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderEmptyBody",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderUnknownParameter",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426019
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:06,036][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474197426033,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474197426039,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474197426040,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474197426042,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:06,046][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474197426044,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474197426046,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryParseContextTests",
  "startTimestamp": 1474197426019,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "displayName": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "children": [
    {
     "id": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testSetNullListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testRejectOtherIndex",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testInvalidateEntries",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426056
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474197426075,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474197426082,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474197426084,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474197426094,
  "executionTime": 88
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
  "startTimestamp": 1474197426056,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.os.OsProbeTests",
   "displayName": "org.elasticsearch.monitor.os.OsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.os.OsProbeTests",
   "children": [
    {
     "id": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsStats",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    },
    {
     "id": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsInfo",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426192
 }
]

[
 "TEST_STARTED",
 "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1474197426206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1474197426209,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.os.OsProbeTests",
  "startTimestamp": 1474197426192,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.BytesRestResponseTests",
   "displayName": "org.elasticsearch.rest.BytesRestResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.BytesRestResponseTests",
   "children": [
    {
     "id": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testErrorTrace",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testDetailedExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testWithHeaders",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNullThrowable",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenInternalServerError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testConvert",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testSimpleExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenPathContainsEncodingError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426220
 }
]

[
 "TEST_STARTED",
 "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426237,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426243,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426247,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426251,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426253,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426254,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426256,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426259,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426265,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474197426267,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.BytesRestResponseTests",
  "startTimestamp": 1474197426220,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
   "displayName": "org.elasticsearch.bootstrap.ESPolicyTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ESPolicyTests",
   "children": [
    {
     "id": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "displayName": "testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "methodName": "testRestrictPrivileges",
     "className": "org.elasticsearch.bootstrap.ESPolicyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426276
 }
]

[
 "TEST_STARTED",
 "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
  "startTimestamp": 1474197426289,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
  "startTimestamp": 1474197426276,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "children": [
    {
     "id": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426301
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:06,317][INFO ][org.elasticsearch.common.settings] [_client_] updating [cluster.routing.allocation.disk.watermark.low] from [85%25] to [500mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:06,317][INFO ][org.elasticsearch.common.settings] [_client_] updating [cluster.routing.allocation.disk.watermark.high] from [90%25] to [70%25]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:06,318][INFO ][org.elasticsearch.common.settings] [_client_] updating [cluster.routing.allocation.disk.include_relocations] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:06,318][INFO ][org.elasticsearch.common.settings] [_client_] updating [cluster.routing.allocation.disk.reroute_interval] from [60s] to [30s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:06,318][INFO ][org.elasticsearch.common.settings] [_client_] updating [cluster.routing.allocation.disk.threshold_enabled] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1474197426314,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1474197426318,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
  "startTimestamp": 1474197426301,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426329
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474197426342,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474197426346,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474197426348,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474197426350,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1474197426329,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.UUIDTests",
   "displayName": "org.elasticsearch.common.UUIDTests",
   "methodName": null,
   "className": "org.elasticsearch.common.UUIDTests",
   "children": [
    {
     "id": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426361
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474197426373,
  "executionTime": 238
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474197426612,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474197426667,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474197426812,
  "executionTime": 118
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.UUIDTests",
  "startTimestamp": 1474197426361,
  "executionTime": 570
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426942
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197426982,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197426993,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197426995,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197426997,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427024,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427027,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427031,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427035,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427038,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427042,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427044,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427047,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427051,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427054,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427057,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427061,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427064,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427067,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427070,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427073,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427076,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427078,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427081,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427084,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427087,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427089,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427092,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427097,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427099,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427102,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427105,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474197427107,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
  "startTimestamp": 1474197426942,
  "executionTime": 171
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
   "displayName": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "children": [
    {
     "id": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatNegativeEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testWriteAndParse",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochMillis",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingSetOnTime",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleDifferentFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateOptionalTimeUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testUpperBound",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatRootObjectParsingIsStrict",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatDefaultFormatterChecksForCorrectYearLength",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsIdempotent",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testSlashInFormat",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testInvalidPatterns",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultiParsers",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochSecond",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRounding",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochTimePrinterWorks",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateTimeNoMillisUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsPrinter",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoVsCustom",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingWithTimeZone",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427128
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427152,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427156,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427163,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427167,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427169,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427182,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427202,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427208,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427212,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427216,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427233,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427238,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427241,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427243,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427248,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427260,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427268,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427281,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427283,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427284,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474197427286,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
  "startTimestamp": 1474197427128,
  "executionTime": 163
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "children": [
    {
     "id": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingType",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoAggs",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testSameAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testInvalidAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoTypes",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427299
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:17:07,343][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TAHLgvqKS3yPMfrn9z6vtw}{local}{local[339]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474197427353,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474197427371,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474197427373,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474197427376,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474197427378,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474197427380,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
  "startTimestamp": 1474197427299,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testMissingValue",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testSimpleYamlSettings",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentation",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentationWithExplicitDocumentStart",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427392
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474197427409,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474197427418,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474197427433,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474197427441,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474197427444,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
  "startTimestamp": 1474197427392,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testPhraseMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427463
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,484][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BfJQ6K3xRM-F4upPdxdnAg}{local}{local[340]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,491][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,491][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,503][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,503][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,503][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,505][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,507][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,507][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,507][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,509][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,509][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,509][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,513][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,514][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:17:07,514][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDvSklEZFv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427479,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427515,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427518,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427530,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427535,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427548,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427555,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427557,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427560,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427563,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427565,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474197427568,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
  "startTimestamp": 1474197427463,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.StreamTests",
   "displayName": "org.elasticsearch.common.io.stream.StreamTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.StreamTests",
   "children": [
    {
     "id": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testLinkedHashMap",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testSpecificVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testRandomVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testFilterStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testInputStreamStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testWritableArrays",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427582
 }
]

[
 "TEST_STARTED",
 "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474197427600,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474197427603,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474197427605,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474197427611,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474197427612,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474197427614,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.StreamTests",
  "startTimestamp": 1474197427582,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "children": [
    {
     "id": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadOverConfiguredSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadWithoutSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseSensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseInsensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testKeepWordsPathSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427625
 }
]

[
 "TEST_STARTED",
 "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474197427638,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474197427645,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474197427662,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474197427670,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474197427678,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
  "startTimestamp": 1474197427625,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427698
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474197427712,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474197427714,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474197427716,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474197427718,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474197427720,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
  "startTimestamp": 1474197427698,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "children": [
    {
     "id": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testNoRebalanceOnPrimaryOverload",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testReplicaBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testPersistedSettings",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testIndexBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427730
 }
]

[
 "TEST_STARTED",
 "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] use the new allocator and check if it moves shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,761][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][4], [test][2], [test][3], [test][4], [test][0], [test][1], [test][3], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,762][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,762][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474197427746,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,791][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,793][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][1], [test8][0], [test7][1], [test8][1], [test7][0], [test9][1], [test7][1], [test8][0], [test6][1], [test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,793][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,794][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,799][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,804][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,808][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,813][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test11][0], [test4][1], [test11][1], [test3][0], [test9][1], [test3][1], [test9][0], [test9][1], [test7][0], [test7][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,817][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][1], [test3][0], [test4][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474197427762,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,821][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.balance.threshold] from [1.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,821][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.balance.threshold] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474197427818,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,828][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,834][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,843][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,866][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0], [test1][0], [test0][1], [test1][1], [test7][0], [test6][0], [test7][1], [test6][1], [test3][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,871][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,874][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,876][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,889][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test4][0], [test5][0], [test8][0], [test7][0], [test6][0], [test9][0], [test8][1], [test9][1], [test4][1], [test5][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:47:07,917][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test0][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474197427822,
  "executionTime": 97
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
  "startTimestamp": 1474197427730,
  "executionTime": 192
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197427928
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:07,952][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{puCZCzRmSVGsx7-Jn77DuQ}{local}{local[397]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474197427968,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474197427978,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474197427994,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
  "startTimestamp": 1474197427928,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428007
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:08,023][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wABvQ9VpRsC74myKpDTgUQ}{local}{local[398]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474197428051,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474197428053,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474197428055,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
  "startTimestamp": 1474197428007,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ESExceptionTests",
   "displayName": "org.elasticsearch.ESExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.ESExceptionTests",
   "children": [
    {
     "id": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "displayName": "testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "methodName": "testDeduplicate",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "displayName": "testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "methodName": "testWriteThrowable",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToXContent(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToXContent",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
     "displayName": "testStatus(org.elasticsearch.ESExceptionTests)",
     "methodName": "testStatus",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToString(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeElasticsearchException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeUnknownException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGetRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428069
 }
]

[
 "TEST_STARTED",
 "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428083,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428085,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testToXContent(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428180,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStatus(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428182,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428184,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428186,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428188,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474197428193,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ESExceptionTests",
  "startTimestamp": 1474197428069,
  "executionTime": 128
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "children": [
    {
     "id": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testNullGeoPointIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428207
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474197428220,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474197428229,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474197428231,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
  "startTimestamp": 1474197428207,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "displayName": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "methodName": null,
   "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "children": [
    {
     "id": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "displayName": "testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "methodName": "testSimple",
     "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428243
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
  "startTimestamp": 1474197428259,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
  "startTimestamp": 1474197428243,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
   "displayName": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "children": [
    {
     "id": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarityPreV3",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428275
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474197428292,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474197428295,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474197428298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474197428301,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
  "startTimestamp": 1474197428275,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "children": [
    {
     "id": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatQueueSizeSerializationWorks",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesInteger",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatThreadPoolTypeIsSerializedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeQueueSizesCanBeSerialized",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeSettingAllowsToStart",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesOutUnboundedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428312
 }
]

[
 "TEST_STARTED",
 "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474197428336,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474197428338,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474197428340,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474197428341,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474197428343,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474197428347,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
  "startTimestamp": 1474197428312,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428357
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428373,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428376,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428384,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428386,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428388,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428390,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474197428392,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1474197428357,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchRequestTests",
   "displayName": "org.elasticsearch.search.SearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchRequestTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428403
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474197428418,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474197428423,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474197428452,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchRequestTests",
  "startTimestamp": 1474197428403,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428464
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,500][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,518][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,518][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,521][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,523][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,524][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,609][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,609][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,609][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,611][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{y0yHmWkUQNicgWUwY9paQg}{JLCYPGPKRfKPwQg6W51eMQ}{local}{local[79]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,611][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,623][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,640][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,698][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,763][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1474197428479,
  "executionTime": 315
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,803][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,875][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1474197428794,
  "executionTime": 120
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,915][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,917][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,918][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:17:08,919][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
  "startTimestamp": 1474197428464,
  "executionTime": 461
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "children": [
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testId",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428930
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:08,962][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:08,997][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:08,997][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,001][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,006][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,006][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,105][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,106][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,106][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,107][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{s2IogO0hSt6GGIYHxFrvZA}{3VJPmdq_RFCve_mZNN1O9A}{local}{local[80]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,107][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,118][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,153][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,209][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,221][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1474197428951,
  "executionTime": 307
 }
]

[
 "TEST_STARTED",
 "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,264][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,332][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1474197429258,
  "executionTime": 103
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,361][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,367][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,367][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:09,369][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
  "startTimestamp": 1474197428930,
  "executionTime": 448
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.SearchSlowLogTests",
   "displayName": "org.elasticsearch.index.SearchSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.SearchSlowLogTests",
   "children": [
    {
     "id": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetQueryLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSlowLogSearchContextPrinterToLog",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetFetchLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429386
 }
]

[
 "TEST_STARTED",
 "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,414][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,441][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,441][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,444][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[12196], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,447][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,447][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,542][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,542][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,543][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,544][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{JJpB_TseQFKBcKiNQ7f5Lg}{zF-CWCX9ShSWGpN1HLOsNg}{local}{local[81]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,544][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,556][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,571][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,571][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,571][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,571][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,572][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,572][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,572][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,572][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,583][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetQueryLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474197429401,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,589][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,679][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,700][INFO ][org.elasticsearch.index  ] [node_s_0] [SearchSlowLogTests#testSlowLogSearchContextPrinterToLog]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474197429584,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,748][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,748][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,748][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,755][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testReformatSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474197429744,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,760][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [TRACE] to [INFO]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,761][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [INFO] to [TRACE]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,769][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testLevelSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474197429756,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,776][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,776][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,776][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,776][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,776][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,777][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,777][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,777][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,797][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetFetchLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474197429771,
  "executionTime": 27
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,798][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,799][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,799][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:17:09,801][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.SearchSlowLogTests",
  "startTimestamp": 1474197429386,
  "executionTime": 732
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

