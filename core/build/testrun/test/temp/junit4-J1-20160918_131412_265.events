[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "6664@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1",
   "junit4.childvm.id": "1",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "6664@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J1-20160918_131412_265.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J1-20160918_131412_265.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "DB64F96F238DCA2A",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.InetAddressesTests",
   "displayName": "org.elasticsearch.common.network.InetAddressesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.InetAddressesTests",
   "children": [
    {
     "id": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringBogusInput",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testConvertDottedQuadToHex",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv4Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6EightColons",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "test3ff31",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197254056
 }
]

[
 "TEST_STARTED",
 "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260209,
  "executionTime": 552
 }
]

[
 "TEST_STARTED",
 "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260762,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260772,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260776,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260780,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260788,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260823,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260827,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260833,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474197260837,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.InetAddressesTests",
  "startTimestamp": 1474197254056,
  "executionTime": 6951
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesModuleTests",
   "displayName": "org.elasticsearch.indices.IndicesModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesModuleTests",
   "children": [
    {
     "id": "ID#testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testBuiltinMappers",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testFieldNamesIsLastWithPlugins",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testFieldNamesIsLast",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateOtherPluginMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateOtherPluginMetadataMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateBuiltinMetadataMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateFieldNamesMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testBuiltinWithPlugins",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateBuiltinMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197261033
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261356,
  "executionTime": 542
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261898,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261912,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261915,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261946,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261951,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261959,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261964,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474197261971,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesModuleTests",
  "startTimestamp": 1474197261033,
  "executionTime": 966
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
   "displayName": "org.elasticsearch.common.collect.EvictingQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.EvictingQueueTests",
   "children": [
    {
     "id": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithZeroSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeZero",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithNegativeSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testAddAll",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197262010
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262057,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262062,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262065,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262068,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262087,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262090,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262093,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474197262096,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
  "startTimestamp": 1474197262010,
  "executionTime": 94
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexShardTests",
   "displayName": "org.elasticsearch.index.shard.IndexShardTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexShardTests",
   "children": [
    {
     "id": "ID#testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testUpdatePriority",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testDelayedOperationsBeforeAndAfterRelocated",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testLockTryingToDelete",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverFromStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverIntoLeftover",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testMaybeFlush",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRestoreShard",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSearcherWrapperIsUsed",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testShardStateMetaHashCodeEquals",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSearchIsReleaseIfWrapperFails",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testShardHasMemoryBufferOnTranslogRecover",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoveryFailsAfterMovingToRelocatedState",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexDirIsDeletedWhenShardRemoved",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverFromLocalShard",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingOperationsListeners",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexCanChangeCustomDataPath",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testShardStats",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testMinimumCompatVersion",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testPersistenceStateMetadataPersistence",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testFailIfIndexNotPresentInRecoverFromStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testStressMaybeFlush",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSearcherWrapperWorksWithGlobaOrdinals",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testLockingBeforeAndAfterRelocated",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingBufferDuringPeerRecovery",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testStressRelocated",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testDurableFlagHasEffect",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testAsyncFsync",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testFailShard(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testFailShard(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testFailShard",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testAcquireIndexCommit",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingOperationListnenersIsInvokedOnRecovery",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingBufferDuringInternalRecovery",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverFromCleanStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testDeleteIndexPreventsNewOperations",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testExpectedShardSizeIsPresent",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSnapshotStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testMarkAsInactiveTriggersSyncedFlush",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testOperationLocksOnPrimaryShards",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testWriteShardState",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testOperationLocksOnReplicaShards",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testTranslogRecoverySyncsTranslog",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197262279
 }
]

[
 "TEST_STARTED",
 "ID#testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:22,945][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:23,340][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:23,341][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:23,352][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:23,371][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:23,373][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:34,988][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:34,991][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:35,008][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:35,071][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{t0VwVyfzR3-TRmUPAVmQAw}{GIj5M-y2QjGtlO855KK-Cw}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:35,090][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:35,234][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:35,788][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:36,454][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:36,554][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testUpdatePriority]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197262346,
  "executionTime": 14287
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:36,644][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:36,732][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:36,792][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testDelayedOperationsBeforeAndAfterRelocated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197276633,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:36,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:37,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:37,073][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> paths: [[C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\E6HqRQz4TQKTpirheLjGnw\\0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:37,091][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testLockTryingToDelete]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197276842,
  "executionTime": 290
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:37,145][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:37,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:37,695][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WsUF6ekFQdu7DtKsQWnqTw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:41,117][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoverFromStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197277133,
  "executionTime": 4390
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:41,536][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:41,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:41,820][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WMRtcjUGQhi0nxTNuUrVBg] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,057][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/WMRtcjUGQhi0nxTNuUrVBg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,116][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,275][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoverIntoLeftover]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197281523,
  "executionTime": 831
 }
]

[
 "TEST_STARTED",
 "ID#testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,384][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,498][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,630][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,633][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:42,662][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/KFjT7FKdSsCqa6nu74xduw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,424][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> current translog size: [43] num_ops [0] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@2c708091]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,443][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [133b] to [43b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,445][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [133b] to [43b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,845][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size after delete: [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@790e00c5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,846][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@24e1d15e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,847][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@9a7e4a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,850][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@91b5eb4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,855][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@68252cfb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,864][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@42e47b80]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:43,882][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@115f35b8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:44,047][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@42e237d9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:44,144][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@361998a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:44,466][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@6238da1d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:44,799][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [43] num_ops [0] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@aa2d117]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:44,800][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testMaybeFlush]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197282355,
  "executionTime": 2909
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:45,282][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:45,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:45,768][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_target] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:45,956][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_target][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:45,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/T4vkMi7lTiuOD5Kir7LTVg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:46,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_target/OJdBwm0HSa-RMDRkXLUFxQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:46,832][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_target][0] [IndexShardTests#testRestoreShard]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197285265,
  "executionTime": 1629
 }
]

[
 "TEST_STARTED",
 "ID#testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:46,902][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:46,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:47,101][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/_m87PKctQ6ySD9gP8BbOmw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:47,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/_m87PKctQ6ySD9gP8BbOmw] update_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:49,472][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSearcherWrapperIsUsed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197286894,
  "executionTime": 2616
 }
]

[
 "TEST_STARTED",
 "ID#testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:49,583][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testShardStateMetaHashCodeEquals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197289510,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:49,600][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:49,938][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:49,994][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/nKn5M4emTBKiz6NgGOHOJA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:50,991][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSearchIsReleaseIfWrapperFails]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197289585,
  "executionTime": 1433
 }
]

[
 "TEST_STARTED",
 "ID#testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:51,028][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:51,186][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:51,219][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/VfS6hF35R3K_4vvuDwWBYA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,196][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testShardHasMemoryBufferOnTranslogRecover]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197291018,
  "executionTime": 3218
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,246][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,421][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoveryFailsAfterMovingToRelocatedState]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197294236,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,467][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> idxPath: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\fwEYnOpSIP]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,473][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,598][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:54,663][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/97eR_vrXSGaDBVtFmxn_xQ] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,317][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\fwEYnOpSIP] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,318][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> found file: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\fwEYnOpSIP\\0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,318][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\fwEYnOpSIP\\0] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,319][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testIndexDirIsDeletedWhenShardRemoved]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197294463,
  "executionTime": 858
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,332][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,459][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,517][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,590][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index_1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,612][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,684][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index_2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:55,703][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/UThOX7WNRPaORcCo1lElfg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:56,276][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_1/nr7G87gnQAaG6AAxjAaXlw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,143][INFO ][org.elasticsearch.index.shard] [node_s_0] [index_1][0] [IndexShardTests#testRecoverFromLocalShard]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,187][WARN ][org.elasticsearch.indices] [index_1/nr7G87gnQAaG6AAxjAaXlw] failed to delete index%0D%0Ajava.io.IOException: Could not remove the following files (in the order of attempts):%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0\\index\\_0.cfs: java.nio.file.AccessDeniedException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0\\index\\_0.cfs%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0\\index\\_1.cfs: java.nio.file.AccessDeniedException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0\\index\\_1.cfs%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0\\index: java.nio.file.DirectoryNotEmptyException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0\\index%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0: java.nio.file.DirectoryNotEmptyException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw\\0%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw: java.nio.file.DirectoryNotEmptyException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\tempDir-001\\data\\nodes\\0\\indices\\nr7G87gnQAaG6AAxjAaXlw%0A%0A%09at org.apache.lucene.util.IOUtils.rm(IOUtils.java:323) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]%0A%09at org.elasticsearch.env.NodeEnvironment.deleteIndexDirectoryUnderLock(NodeEnvironment.java:545) ~[main/:?]%0A%09at org.elasticsearch.env.NodeEnvironment.deleteIndexDirectorySafe(NodeEnvironment.java:529) ~[main/:?]%0A%09at org.elasticsearch.indices.IndicesService.deleteIndexStoreIfDeletionAllowed(IndicesService.java:638) [main/:?]%0A%09at org.elasticsearch.indices.IndicesService.deleteIndexStore(IndicesService.java:625) [main/:?]%0A%09at org.elasticsearch.indices.IndicesService.removeIndex(IndicesService.java:513) [main/:?]%0A%09at org.elasticsearch.indices.IndicesService.deleteIndex(IndicesService.java:568) [main/:?]%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.deleteIndices(IndicesClusterStateService.java:249) [main/:?]%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.clusterChanged(IndicesClusterStateService.java:183) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:708) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,239][WARN ][org.elasticsearch.indices] [node_s_0] [index_1/nr7G87gnQAaG6AAxjAaXlw] still pending deletes present for shards [[[index_1/nr7G87gnQAaG6AAxjAaXlw]], [[index_1/nr7G87gnQAaG6AAxjAaXlw]][0]] - retrying%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197295321,
  "executionTime": 1957
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_iol] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,378][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_iol][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:57,401][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_iol/ep4_vYUoSwOTmL6BKHmayA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:58,970][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_iol][0] [IndexShardTests#testIndexingOperationsListeners]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197297278,
  "executionTime": 1739
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,022][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_iol][0] --> start dir: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\start-IMVGaHwkTj]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,023][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_iol][0] -->   end dir: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\end-TlatKejqyX]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,024][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_iol][0] --> creating an index with data_path [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\start-IMVGaHwkTj]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,152][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,210][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx/-U11mOSHSRyzk1orYsm4Tg] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,427][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> closing the index [idx]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,428][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[idx/-U11mOSHSRyzk1orYsm4Tg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,497][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> index closed, re-opening...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[idx/-U11mOSHSRyzk1orYsm4Tg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,680][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> index re-opened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,825][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> closing the index [idx]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,825][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[idx/-U11mOSHSRyzk1orYsm4Tg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,854][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> moving data on disk [start-IMVGaHwkTj] to [end-TlatKejqyX]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,856][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> updating settings...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,877][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> settings updated and files moved, re-opening index%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,877][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[idx/-U11mOSHSRyzk1orYsm4Tg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:14:59,919][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> index re-opened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,184][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\start-IMVGaHwkTj] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,185][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\end-TlatKejqyX] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,185][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> found file: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\end-TlatKejqyX\\0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,186][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.index.shard.IndexShardTests_DB64F96F238DCA2A-001\\KhRUHcgyTc\\end-TlatKejqyX\\0] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,187][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] [IndexShardTests#testIndexCanChangeCustomDataPath]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197299018,
  "executionTime": 1171
 }
]

[
 "TEST_STARTED",
 "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,198][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,247][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,310][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testShardStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
  "message": "Some path weirdness on windows",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Some path weirdness on windows\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:4FC67EE4DE996F5E]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeFalse(RandomizedTest.java:635)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeFalse(LuceneTestCase.java:849)\r\n\tat org.elasticsearch.index.shard.IndexShardTests.testShardStats(IndexShardTests.java:803)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Some path weirdness on windows",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197300189,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,388][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,481][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,513][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/UjuVgUcARjCZuQ_TOxXDHQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,821][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testMinimumCompatVersion]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197300361,
  "executionTime": 607
 }
]

[
 "TEST_STARTED",
 "ID#testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:00,979][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,320][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testPersistenceStateMetadataPersistence]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197300968,
  "executionTime": 408
 }
]

[
 "TEST_STARTED",
 "ID#testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,445][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,464][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/VURYCtqdT8WifwB6AgM0Hw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,830][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testFailIfIndexNotPresentInRecoverFromStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197301376,
  "executionTime": 504
 }
]

[
 "TEST_STARTED",
 "ID#testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,889][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,987][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:01,988][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:02,051][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/tZn-w5dWTrS3bYZmpxnIQQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:02,939][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testStressMaybeFlush]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197301880,
  "executionTime": 1197
 }
]

[
 "TEST_STARTED",
 "ID#testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:03,092][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:03,164][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:03,182][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/svcf8X8BSfiw_Bt1KgaIkw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:03,578][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/svcf8X8BSfiw_Bt1KgaIkw] update_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,445][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSearcherWrapperWorksWithGlobaOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197303078,
  "executionTime": 1411
 }
]

[
 "TEST_STARTED",
 "ID#testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,655][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testLockingBeforeAndAfterRelocated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197304490,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,696][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,754][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/p-xZnPGSRZGzT_SXtQ5Lyw] create_mapping [testtype]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,857][INFO ][org.elasticsearch.index.shard] [node_s_0] [index][0] [IndexShardTests#testIndexingBufferDuringPeerRecovery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197304688,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:04,915][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,045][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testStressRelocated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197304907,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,104][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,200][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,218][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/aYyUXWHhQHKPee04xKTT4g] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,276][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,281][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,301][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,302][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,334][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,335][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,376][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,377][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,428][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,429][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,454][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,455][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,503][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testDurableFlagHasEffect]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197305085,
  "executionTime": 486
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,718][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/fxbU6RxQSISJipYy9aRHSw] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:05,863][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testAsyncFsync]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197305572,
  "executionTime": 795
 }
]

[
 "TEST_STARTED",
 "ID#testFailShard(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,377][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,551][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 05:15:06,616 TEST-IndexShardTests.testFailShard-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.index.engine.Engine.failEngine(Engine.java:681)%0D%0A%09at org.elasticsearch.index.shard.IndexShard.failShard(IndexShard.java:867)%0D%0A%09at org.elasticsearch.index.shard.IndexShardTests.testFailShard(IndexShardTests.java:259)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 05:15:06,638 elasticsearch[node_s_0][generic][T#4] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.sendFailShard(IndicesClusterStateService.java:657)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.failAndRemoveShard(IndicesClusterStateService.java:651)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.access$1000(IndicesClusterStateService.java:87)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$FailedShardHandler.lambda$handle$0(IndicesClusterStateService.java:680)%0D%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444)%0D%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0D%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,645][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testFailShard]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 05:15:06,642 elasticsearch[node_s_0][generic][T#4] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler.messageReceived(ShardStateAction.java:199)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler.messageReceived(ShardStateAction.java:186)%0D%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0D%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69)%0D%0A%09at org.elasticsearch.transport.TransportService.sendLocalRequest(TransportService.java:528)%0D%0A%09at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:477)%0D%0A%09at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:447)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction.sendShardAction(ShardStateAction.java:101)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction.shardFailed(ShardStateAction.java:158)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction.localShardFailed(ShardStateAction.java:152)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.sendFailShard(IndicesClusterStateService.java:661)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.failAndRemoveShard(IndicesClusterStateService.java:651)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.access$1000(IndicesClusterStateService.java:87)%0D%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$FailedShardHandler.lambda$handle$0(IndicesClusterStateService.java:680)%0D%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444)%0D%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0D%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailShard(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197306367,
  "executionTime": 318
 }
]

[
 "TEST_STARTED",
 "ID#testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,699][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,803][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:06,834][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/RL5HlJ8vS7e74JkhdR8AoQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:07,687][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testAcquireIndexCommit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197306685,
  "executionTime": 1090
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:07,787][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:07,873][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:07,905][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/LRUAJof6RbuRpmnKK1IyYg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:08,718][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testIndexingOperationListnenersIsInvokedOnRecovery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197307775,
  "executionTime": 1023
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:08,809][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:08,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:08,900][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/UOMu0W5ARYOQDQCfE-7DFQ] create_mapping [testtype]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,015][INFO ][org.elasticsearch.index.shard] [node_s_0] [index][0] [IndexShardTests#testIndexingBufferDuringInternalRecovery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197308799,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,060][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,142][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,161][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/h-h6EvCIQeqoKBcKJKxM8Q] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,286][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoverFromCleanStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197309051,
  "executionTime": 289
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,351][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,425][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,504][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testDeleteIndexPreventsNewOperations]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197309340,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,520][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,586][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:09,603][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/TTEQhWrLRM6e6jTIam4SPg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:10,227][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testExpectedShardSizeIsPresent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197309506,
  "executionTime": 874
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:10,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:10,474][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:10,497][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/bT0m8osRQru0B9EmyN415Q] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:10,921][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSnapshotStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197310381,
  "executionTime": 594
 }
]

[
 "TEST_STARTED",
 "ID#testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:10,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,052][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/trpqBy6JTZCkSu6IPbZO5A] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,368][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testMarkAsInactiveTriggersSyncedFlush]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197310975,
  "executionTime": 430
 }
]

[
 "TEST_STARTED",
 "ID#testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,414][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,563][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testOperationLocksOnPrimaryShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197311405,
  "executionTime": 290
 }
]

[
 "TEST_STARTED",
 "ID#testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,750][INFO ][org.elasticsearch.env    ] [XLoxp7N] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:11,750][INFO ][org.elasticsearch.env    ] [XLoxp7N] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,084][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testWriteShardState]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197311695,
  "executionTime": 390
 }
]

[
 "TEST_STARTED",
 "ID#testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,095][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,176][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,197][WARN ][org.elasticsearch.index.shard] [node_s_0] [test][0] suspect illegal state: trying to move shard from primary mode to replica mode%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,242][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] updated shard routing to [test][0], node[t0VwVyfzR3-TRmUPAVmQAw], relocating [otherNode], [R], s[RELOCATING], a[id=WIcSvEHASWa7AJtDT_eHpA, rId=nevo5xLIRg6nTZyP1e9oEw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,245][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testOperationLocksOnReplicaShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197312085,
  "executionTime": 462
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,559][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindexfortranslogsync] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,729][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindexfortranslogsync][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:12,759][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindexfortranslogsync/Fux2F9E9RaK882BBrvqRkw] create_mapping [testtype]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:13,330][INFO ][org.elasticsearch.index.shard] [node_s_0] [testindexfortranslogsync][0] [IndexShardTests#testTranslogRecoverySyncsTranslog]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474197312547,
  "executionTime": 928
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:13,476][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:13,480][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:13,481][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:13,497][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexShardTests",
  "startTimestamp": 1474197262279,
  "executionTime": 52635
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RootObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.RootObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
   "children": [
    {
     "id": "ID#testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testDateFormatters",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testNumericDetection",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testDynamicTemplates",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testDateDetection",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197314925
 }
]

[
 "TEST_STARTED",
 "ID#testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:15,260][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:15,323][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:15,324][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:15,355][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:15,358][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:15,358][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,207][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,208][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,208][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,321][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{lr10aAxbREe4-7P8eFHqow}{w7YqA969Sn6LEsH96ACxDg}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,322][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,441][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,461][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,631][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,650][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testDateFormatters]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474197315058,
  "executionTime": 1645
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:16,729][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:17,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:17,221][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testNumericDetection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474197316703,
  "executionTime": 658
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:17,373][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:17,775][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:17,804][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testDynamicTemplates]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474197317361,
  "executionTime": 598
 }
]

[
 "TEST_STARTED",
 "ID#testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:17,966][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:18,083][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:18,106][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testDateDetection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474197317959,
  "executionTime": 467
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:18,426][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:18,427][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:18,427][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:18,432][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RootObjectMapperTests",
  "startTimestamp": 1474197314925,
  "executionTime": 4159
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "children": [
    {
     "id": "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseValidFromInts",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseValidFromStrings",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnNonIntPrecision",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnBooleanPrecision",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnPrecisionOutOfRange",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197319092
 }
]

[
 "TEST_STARTED",
 "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474197319129,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474197319161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474197319163,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474197319165,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474197319171,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
  "startTimestamp": 1474197319092,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ActionModuleTests",
   "displayName": "org.elasticsearch.action.ActionModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ActionModuleTests",
   "children": [
    {
     "id": "ID#testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCantOverwriteBuiltinAction",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testSetupActionsContainsKnownBuiltin",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCantOverwriteBuiltinRestHandler",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCanRegisterAction",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCanRegisterRestHandler",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testSetupRestHandlerContainsKnownBuiltin",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197319183
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474197319222,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474197319225,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474197319235,
  "executionTime": 445
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474197319680,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474197319727,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474197319758,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ActionModuleTests",
  "startTimestamp": 1474197319183,
  "executionTime": 618
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197319815
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:20,097][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HhbOAsWVR2OblVbBFd3XvA}{local}{local[16]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:20,161][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"bucket_script\" : {%0A      \"buckets_path\" : {%0A        \"HX\" : \"haQumtgdAMyOpqnnemvvweqtbaliwdQtjY\",%0A        \"FIkEIgfCXXXJ\" : \"JyUnnujOhuoUXDTh\",%0A        \"AhstixnhArUPdUbIv\" : \"QXuuqzRfeszEsReDPHS\",%0A        \"ytpJqjtd\" : \"gOZSRpYrsQEmcWnXKY\",%0A        \"HmhinoHAyyMmNGyhiC\" : \"IWGwAoaQN\",%0A        \"QpPM\" : \"oScCtaoxRQrQIddFjuEQZz\",%0A        \"SGUpRufwE\" : \"HHrVoQIUxSj\",%0A        \"M\" : \"eeWcsSGSLgarXw\",%0A        \"kFeI\" : \"wWZOQjpSZEFqIsINsXxwjTjSaPqfxJjbZ\",%0A        \"GSTYyROIxPYAJOnmm\" : \"qVBJUxJXWVcGuqxrLINAaAETuZGBM\"%0A      },%0A      \"script\" : {%0A        \"file\" : \"script\",%0A        \"params\" : {%0A          \"foo\" : \"bar\"%0A        }%0A      },%0A      \"format\" : \"ibKUk\",%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:20,165][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"bucket_script\" : {%0A      \"buckets_path\" : {%0A        \"HX\" : \"haQumtgdAMyOpqnnemvvweqtbaliwdQtjY\",%0A        \"FIkEIgfCXXXJ\" : \"JyUnnujOhuoUXDTh\",%0A        \"AhstixnhArUPdUbIv\" : \"QXuuqzRfeszEsReDPHS\",%0A        \"ytpJqjtd\" : \"gOZSRpYrsQEmcWnXKY\",%0A        \"HmhinoHAyyMmNGyhiC\" : \"IWGwAoaQN\",%0A        \"QpPM\" : \"oScCtaoxRQrQIddFjuEQZz\",%0A        \"SGUpRufwE\" : \"HHrVoQIUxSj\",%0A        \"M\" : \"eeWcsSGSLgarXw\",%0A        \"kFeI\" : \"wWZOQjpSZEFqIsINsXxwjTjSaPqfxJjbZ\",%0A        \"GSTYyROIxPYAJOnmm\" : \"qVBJUxJXWVcGuqxrLINAaAETuZGBM\"%0A      },%0A      \"script\" : {%0A        \"file\" : \"script\",%0A        \"params\" : {%0A          \"foo\" : \"bar\"%0A        }%0A      },%0A      \"format\" : \"ibKUk\",%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
  "startTimestamp": 1474197320139,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
  "startTimestamp": 1474197320169,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
  "startTimestamp": 1474197320173,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
  "startTimestamp": 1474197319815,
  "executionTime": 408
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullType",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testLeftRightCanBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCannotBeSet",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullTypeString",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCanBeFlippedOnIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCannotBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testExceptionOnMissingTypes",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullFieldname",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testStrictnessDefault",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testNormalization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197320254
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:20,337][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1Q71Y3SoR82G2H_MwQTKHA}{local}{local[17]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:20,348][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:20,348][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320307,
  "executionTime": 204
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:6F8B8A525BDACCAA]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testMustRewrite(GeoBoundingBoxQueryBuilderTests.java:523)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320511,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320519,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:3790585746138022]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testParsingAndToQuery4(GeoBoundingBoxQueryBuilderTests.java:382)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320529,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320536,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320539,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320555,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320559,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320563,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320567,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320578,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:52F9AC94B7571BC4]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testParsingAndToQuery1(GeoBoundingBoxQueryBuilderTests.java:337)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320582,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:E98C842CABC487F2]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testParsingAndToQuery3(GeoBoundingBoxQueryBuilderTests.java:369)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320586,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320589,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320607,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197320612,
  "executionTime": 793
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:D491BBFE5A16E23D]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testParsingAndToQuery5(GeoBoundingBoxQueryBuilderTests.java:395)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321405,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321411,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321420,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:21,449][INFO ][org.elasticsearch.index.query] top: -52.18016759566116 bottom: -55.56026384498625%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321432,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321452,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321469,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321473,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:5857247F1B532464]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testParsingAndToQuery2(GeoBoundingBoxQueryBuilderTests.java:350)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321477,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:2C9FFB51520E0FC0]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testToQuery(GeoBoundingBoxQueryBuilderTests.java:118)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321494,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321497,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321500,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:FF3B9233C2D9B500]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testNormalization(GeoBoundingBoxQueryBuilderTests.java:227)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321503,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321506,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:B7AFC92897319AE3]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testParsingAndToQuery6(GeoBoundingBoxQueryBuilderTests.java:408)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474197321513,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
  "startTimestamp": 1474197320254,
  "executionTime": 1301
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "displayName": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "children": [
    {
     "id": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithoutBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterFailoverAfterStepDown",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testForceLocalOperation",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterNotAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterBecomesAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToFailingMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197321576
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,681][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{e4aHNaMaQCqG36W666qC3w}{local}{local[18]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,691][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{0-Dq3du9SwS6TKx3Z9cyJA}{local}{local[19]}, previous {node}{e4aHNaMaQCqG36W666qC3w}{local}{local[18]}}, removed {{node}{e4aHNaMaQCqG36W666qC3w}{local}{local[18]},}, added {{remote_node}{Y7wmAKhUR72JEKPM22WeAA}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321657,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,728][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{P6ZEB_DZSeSUx_0eaCn-zw}{local}{local[21]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,730][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{h2cR2Jq8Re-cBXjiaDzfRw}{local}{local[22]}, previous {node}{P6ZEB_DZSeSUx_0eaCn-zw}{local}{local[21]}}, removed {{node}{P6ZEB_DZSeSUx_0eaCn-zw}{local}{local[21]},}, added {{remote_node}{N7CbobAfR0i9i0Ng9jN8wg}{local}{local[23]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321722,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,738][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3H2k3UNvSc2pyes9RoGBtA}{local}{local[24]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,744][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{BEcNjp-NTkyq4-tBfYXJsg}{local}{local[25]}, previous {node}{3H2k3UNvSc2pyes9RoGBtA}{local}{local[24]}}, removed {{node}{3H2k3UNvSc2pyes9RoGBtA}{local}{local[24]},}, added {{remote_node}{67UCXdS3QaGIBE8QMCCh6A}{local}{local[26]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,747][INFO ][org.elasticsearch.cluster.service] [node_s_0] detected_master {remote_node}{67UCXdS3QaGIBE8QMCCh6A}{local}{local[26]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321732,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,770][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{P_GnHOnNQ2W1Kbee0w8_Nw}{local}{local[27]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,772][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{P_GnHOnNQ2W1Kbee0w8_Nw}{local}{local[27]},}, added {{remote_node}{og-VO9yPTu2b1T6H-sw9Ng}{local}{local[29]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321762,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,780][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XvJD30qwTpijhop88746Lg}{local}{local[30]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,783][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{XvJD30qwTpijhop88746Lg}{local}{local[30]},}, added {{remote_node}{WEiWFaRoRTiJ-f4RFSl2Ug}{local}{local[32]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321774,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,793][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dgdDeXF-Sea-KhKzn9jRTw}{local}{local[33]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,795][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{ycH_qRDHRfypP3kAHfiNuQ}{local}{local[35]}, previous {node}{dgdDeXF-Sea-KhKzn9jRTw}{local}{local[33]}}, removed {{node}{dgdDeXF-Sea-KhKzn9jRTw}{local}{local[33]},}, added {{remote_node}{ycH_qRDHRfypP3kAHfiNuQ}{local}{local[35]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321785,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,804][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OVA5YDD-SN-ILYOr2g-gug}{local}{local[36]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,808][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{OVA5YDD-SN-ILYOr2g-gug}{local}{local[36]},}, added {{remote_node}{qRzinpvsSRaWSEt49KNzXA}{local}{local[38]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,809][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {local_node}{6Mp79OkWTGasuXkt9OUw9A}{local}{local[37]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321798,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,815][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RpHrnz9kTEew113pBFKNqw}{local}{local[39]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,817][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{RJ9qLiKMSUuBwI4VbbdbcA}{local}{local[41]}, previous {node}{RpHrnz9kTEew113pBFKNqw}{local}{local[39]}}, removed {{node}{RpHrnz9kTEew113pBFKNqw}{local}{local[39]},}, added {{remote_node}{RJ9qLiKMSUuBwI4VbbdbcA}{local}{local[41]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:21,829][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {local_node}{a5moR134RN6gCjPsvOlMdg}{local}{local[40]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474197321810,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
  "startTimestamp": 1474197321576,
  "executionTime": 255
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ZenPingTests",
   "displayName": "org.elasticsearch.discovery.zen.ZenPingTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ZenPingTests",
   "children": [
    {
     "id": "ID#testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)",
     "displayName": "testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)",
     "methodName": "testPingCollection",
     "className": "org.elasticsearch.discovery.zen.ZenPingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197321838
 }
]

[
 "TEST_STARTED",
 "ID#testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)",
  "startTimestamp": 1474197321879,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ZenPingTests",
  "startTimestamp": 1474197321838,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197321897
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,964][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0sHqhVhhQJGK0WeByrhmFQ}{local}{local[62]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,973][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,973][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,039][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,039][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,039][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,180][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,180][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,184][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,184][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,184][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,187][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,187][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,187][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,215][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,215][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,215][WARN ][org.elasticsearch.deprecation.index.mapper]  [EkZrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,220][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197321939,
  "executionTime": 282
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,226][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322221,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,232][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,232][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,233][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,233][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322229,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,241][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322234,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,248][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,249][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,249][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,250][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,251][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,251][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,257][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,263][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,264][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,265][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,266][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,266][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,285][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,286][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,287][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,287][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,288][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,291][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,291][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,292][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,292][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,293][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,294][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,310][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,311][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,312][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,313][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,313][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,314][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,317][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,317][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,321][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,321][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,322][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,322][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,328][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,329][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,330][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,330][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,338][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322244,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,342][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,343][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,344][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,345][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,346][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,346][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,347][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,347][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,348][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,349][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,350][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,351][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,352][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,353][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,354][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,355][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,355][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,356][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,357][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,357][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322339,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,360][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322358,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,363][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322361,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,368][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,388][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,399][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,408][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,410][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,412][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,445][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,503][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,505][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,506][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,509][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,510][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,512][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,513][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,514][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,516][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,518][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,520][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,523][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,524][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322364,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,529][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,529][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,529][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,530][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,530][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,531][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,531][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,532][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,533][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,534][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,535][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,535][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,536][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,537][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,537][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,538][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,539][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,539][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,540][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:22,540][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474197322526,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IndicesQueryBuilderTests",
  "startTimestamp": 1474197321897,
  "executionTime": 650
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.SearchRequestBuilderTests",
   "displayName": "org.elasticsearch.action.search.SearchRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
   "children": [
    {
     "id": "ID#testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testQueryBuilderQueryToString",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testThatToStringDoesntWipeRequestSource",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testSearchSourceBuilderToString",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testEmptySourceToString",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197322555
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,586][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,588][INFO ][org.elasticsearch.plugins] [_client_] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:22,619][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474197322621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474197322623,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474197322625,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474197322627,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.SearchRequestBuilderTests",
  "startTimestamp": 1474197322555,
  "executionTime": 78
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197322639
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:22,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{k96NV5LfRxCAUGXHVI4x1Q}{local}{local[63]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
  "startTimestamp": 1474197322741,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
  "startTimestamp": 1474197322767,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
  "startTimestamp": 1474197322770,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
  "startTimestamp": 1474197322639,
  "executionTime": 136
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexingSlowLogTests",
   "displayName": "org.elasticsearch.index.IndexingSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexingSlowLogTests",
   "children": [
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSlowLogParsedDocumentPrinterSourceToLog",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSetLevels",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197322783
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,805][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,807][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,808][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 16:15:22,811 TEST-IndexingSlowLogTests.testReformatSetting-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.applySettings(AbstractScopedSettings.java:160)%0D%0A%09at org.elasticsearch.index.IndexSettings.updateIndexMetaData(IndexSettings.java:424)%0D%0A%09at org.elasticsearch.index.IndexingSlowLogTests.testReformatSetting(IndexingSlowLogTests.java:87)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474197322801,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474197322815,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,829][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,829][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,829][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,829][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,830][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,830][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,830][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,830][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474197322825,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,844][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.level] from [TRACE] to [INFO]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:22,845][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.level] from [INFO] to [TRACE]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474197322841,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexingSlowLogTests",
  "startTimestamp": 1474197322783,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskIdTests",
   "displayName": "org.elasticsearch.tasks.TaskIdTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskIdTests",
   "children": [
    {
     "id": "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
     "displayName": "testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
     "methodName": "testSerializationOfEmpty",
     "className": "org.elasticsearch.tasks.TaskIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)",
     "displayName": "testSerialization(org.elasticsearch.tasks.TaskIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.tasks.TaskIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197322859
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
  "startTimestamp": 1474197322876,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)",
  "startTimestamp": 1474197322878,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskIdTests",
  "startTimestamp": 1474197322859,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
   "children": [
    {
     "id": "ID#testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_Static",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_EscapeStatic",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_CustomTimeZoneInSetting",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_CustomFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_MultiParts",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testNormal",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_CustomTimeZoneInIndexName",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidOpenEnded",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidEmptyDateMathFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_EscapeDateFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_MixedArray",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidUnescaped",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidDateMathFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197322890
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322907,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322909,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:22,941][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] timezone: [-08:00], now [2016-09-18T00:00:00.927Z], name: [.marvel-2016.09.17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322923,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322943,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322945,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322948,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322950,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:22,954][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] timezone: [+14:00], now [2016-09-19T00:00:00.954Z], name: [.marvel-2016.09.19]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322954,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322957,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322967,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322971,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322973,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322975,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474197322977,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
  "startTimestamp": 1474197322890,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
   "children": [
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197323016
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,195][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,459][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,459][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,462][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,464][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,464][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,562][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,562][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,563][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,564][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sCURlZYaSKaIpdbm_GhH_w}{Ta6r-7fXR5C6HVI-oFOISQ}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:23,565][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:24,082][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:24,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:24,596][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,202][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197323040,
  "executionTime": 3229
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,348][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,406][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197326269,
  "executionTime": 225
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,504][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,761][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "message": "We can't test this, since the returned IFD instance doesn't implement IndexFieldData.WithOrdinals",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: We can't test this, since the returned IFD instance doesn't implement IndexFieldData.WithOrdinals\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:E399B8A7DFD31268]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests.testTermsEnum(NoOrdinalsStringFieldDataTests.java:76)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: We can't test this, since the returned IFD instance doesn't implement IndexFieldData.WithOrdinals",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197326495,
  "executionTime": 437
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,939][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:26,994][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:27,877][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197326933,
  "executionTime": 1255
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,195][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,277][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,345][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197328188,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,425][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,531][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,550][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197328418,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,655][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,866][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197328644,
  "executionTime": 263
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:28,915][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:29,023][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:30,705][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197328907,
  "executionTime": 2138
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:31,059][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:31,191][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:31,236][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197331045,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:31,282][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:31,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:34,713][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197331276,
  "executionTime": 3600
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:34,884][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:34,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:34,971][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197334876,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,031][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,130][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,336][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197335025,
  "executionTime": 340
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,372][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,580][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,618][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197335366,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,675][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,797][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197335668,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,844][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:35,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,002][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197335838,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,042][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,146][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197336034,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,195][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,330][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,357][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197336188,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,496][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,749][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197336387,
  "executionTime": 398
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,792][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:36,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:37,131][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474197336785,
  "executionTime": 410
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:37,196][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:37,197][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:37,197][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:15:37,199][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
  "startTimestamp": 1474197323016,
  "executionTime": 14194
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
   "children": [
    {
     "id": "ID#testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testMissingSetting",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testNegativeSetting",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testEmptySettingsAreOkay",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testDisabledSetting",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testIllegalOverheadSettings",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197337220
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474197337271,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474197337309,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474197337325,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474197337348,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474197337354,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
  "startTimestamp": 1474197337220,
  "executionTime": 178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.BootstrapCheckTests",
   "displayName": "org.elasticsearch.bootstrap.BootstrapCheckTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
   "children": [
    {
     "id": "ID#testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testIgnoringSystemChecks",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMaxNumberOfThreadsCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testOnOutOfMemoryErrorCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMlockallCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testFileDescriptorLimits",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testClientJvmCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testHeapSizeCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testNonProductionMode",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testEnforceLimitsWhenPublishingToNonLocalAddress",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMaxSizeVirtualMemory",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testEnforceLimitsWhenBoundToNonLocalAddress",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMightForkCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testNoLogMessageInNonProductionMode",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testFileDescriptorLimitsThrowsOnInvalidLimit",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testExceptionAggregation",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMaxMapCountCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testAlwaysEnforcedChecks",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testOnErrorCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testLogMessageInProductionMode",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197337431
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:37,535][INFO ][org.elasticsearch.bootstrap] [testIgnoringSystemChecks] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197337528,
  "executionTime": 1501
 }
]

[
 "TEST_STARTED",
 "ID#testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,033][INFO ][org.elasticsearch.bootstrap] [testMaxNumberOfThreadsCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,034][INFO ][org.elasticsearch.bootstrap] [testMaxNumberOfThreadsCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,035][INFO ][org.elasticsearch.bootstrap] [testMaxNumberOfThreadsCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339030,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,039][INFO ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,039][INFO ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339035,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,043][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,044][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,044][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,045][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339040,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,047][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimits] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,048][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimits] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,048][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimits] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339045,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,053][INFO ][org.elasticsearch.bootstrap] [testClientJvmCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,054][INFO ][org.elasticsearch.bootstrap] [testClientJvmCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339049,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,057][INFO ][org.elasticsearch.bootstrap] [testHeapSizeCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,057][INFO ][org.elasticsearch.bootstrap] [testHeapSizeCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,058][INFO ][org.elasticsearch.bootstrap] [testHeapSizeCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339054,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339058,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339125,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,131][INFO ][org.elasticsearch.bootstrap] [testMaxSizeVirtualMemory] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,132][INFO ][org.elasticsearch.bootstrap] [testMaxSizeVirtualMemory] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,132][INFO ][org.elasticsearch.bootstrap] [testMaxSizeVirtualMemory] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339128,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339132,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,138][INFO ][org.elasticsearch.bootstrap] [testMightForkCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,138][WARN ][org.elasticsearch.bootstrap] [testMightForkCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,139][INFO ][org.elasticsearch.bootstrap] [testMightForkCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,139][INFO ][org.elasticsearch.bootstrap] [testMightForkCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,139][WARN ][org.elasticsearch.bootstrap] [testMightForkCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339136,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339140,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339155,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,165][INFO ][org.elasticsearch.bootstrap] [testExceptionAggregation] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339160,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,171][INFO ][org.elasticsearch.bootstrap] [testMaxMapCountCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,171][INFO ][org.elasticsearch.bootstrap] [testMaxMapCountCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,173][INFO ][org.elasticsearch.bootstrap] [testMaxMapCountCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339165,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339173,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,187][INFO ][org.elasticsearch.bootstrap] [testOnErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,187][INFO ][org.elasticsearch.bootstrap] [testOnErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,187][INFO ][org.elasticsearch.bootstrap] [testOnErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:39,187][WARN ][org.elasticsearch.bootstrap] [testOnErrorCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339183,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474197339188,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.BootstrapCheckTests",
  "startTimestamp": 1474197337431,
  "executionTime": 1763
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "children": [
    {
     "id": "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "displayName": "testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "methodName": "testAddExtraChildTypePointingToAlreadyParentExistingType",
     "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "displayName": "testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "methodName": "testAddChildTypePointingToAlreadyExistingType",
     "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197339203
 }
]

[
 "TEST_STARTED",
 "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,325][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,472][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,473][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,485][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,489][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,489][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,704][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,705][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,705][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,707][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{4O_vuogdSs2TTsl7CBzTbg}{dVk7H-z1Ta2_1XPnStOBxg}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,708][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,753][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,779][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [parent, child1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,890][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/s7nGFlN4Tz2wib4t5kJ3ig] create_mapping [child2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [MetaDataMappingServiceTests#testAddExtraChildTypePointingToAlreadyParentExistingType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
  "startTimestamp": 1474197339249,
  "executionTime": 729
 }
]

[
 "TEST_STARTED",
 "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:39,987][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:40,126][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:40,173][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [MetaDataMappingServiceTests#testAddChildTypePointingToAlreadyExistingType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
  "startTimestamp": 1474197339978,
  "executionTime": 251
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:40,230][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:40,232][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:40,232][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:15:40,235][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
  "startTimestamp": 1474197339203,
  "executionTime": 1044
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
   "children": [
    {
     "id": "ID#testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testParseUnknownParam",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testMatchTypeTemplate",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testMatchAllTemplate",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testParseUnknownMatchType",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197340255
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474197340360,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474197340365,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474197340368,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474197340370,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:40,376][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Ignoring unrecognized match_mapping_type: [short]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474197340374,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicTemplateTests",
  "startTimestamp": 1474197340255,
  "executionTime": 124
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
   "children": [
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNullConfigValuesFail",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testChangeLocale",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testChangeFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197340388
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,428][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,468][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,468][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,472][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,474][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,474][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,871][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,872][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,872][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,899][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{bAzdDqn8Rqq1z2MdeJRZzg}{QMPdz081TfaPpmk2Uv2b7g}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,901][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,956][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:40,974][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,068][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197340419,
  "executionTime": 704
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,200][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,240][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197341123,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,338][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,360][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197341271,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,400][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,469][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,520][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,538][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [DateFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197341394,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,630][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,691][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,704][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197341620,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,776][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,834][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,850][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNullConfigValuesFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197341770,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,901][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:41,962][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197341895,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,056][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,221][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,248][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197342050,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,290][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,518][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,536][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197342283,
  "executionTime": 293
 }
]

[
 "TEST_STARTED",
 "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,582][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,627][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,644][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testChangeLocale]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197342576,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,773][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testChangeFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474197342674,
  "executionTime": 137
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,811][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,812][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,812][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:42,815][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldMapperTests",
  "startTimestamp": 1474197340388,
  "executionTime": 2437
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.DiscoveryModuleTests",
   "displayName": "org.elasticsearch.discovery.DiscoveryModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
   "children": [
    {
     "id": "ID#testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testRegisterDefaults",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testRegisterMasterElectionService",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testRegisterDiscovery",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    },
    {
     "id": "ID#testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testLoadUnregisteredMasterElectionService",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342839
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474197342869,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474197342877,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474197342882,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474197342886,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.DiscoveryModuleTests",
  "startTimestamp": 1474197342839,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.SingleObjectCacheTests",
   "displayName": "org.elasticsearch.common.util.SingleObjectCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
   "children": [
    {
     "id": "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "displayName": "testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "methodName": "testRefreshDoesntBlock",
     "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
     "children": []
    },
    {
     "id": "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "displayName": "testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "methodName": "testRefresh",
     "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342902
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
  "startTimestamp": 1474197342935,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
  "startTimestamp": 1474197342945,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.SingleObjectCacheTests",
  "startTimestamp": 1474197342902,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.HistogramTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testInvalidBounds",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197342956
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:42,986][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZqrFr3uWTW2AEhfPKVLb2w}{local}{local[64]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474197343018,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474197343044,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474197343049,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474197343054,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.HistogramTests",
  "startTimestamp": 1474197342956,
  "executionTime": 123
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testIllegalOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testParseOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197343095
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343159,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343195,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343198,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343209,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343251,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343257,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474197343259,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
  "startTimestamp": 1474197343095,
  "executionTime": 170
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
   "children": [
    {
     "id": "ID#testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)",
     "displayName": "testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)",
     "methodName": "testSameHost",
     "className": "org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197343282
 }
]

[
 "TEST_STARTED",
 "ID#testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:43,371][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes with the same host%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:43,377][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start all primary shards, no replica will be started since its on the same host%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:43,378][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node, with a different host, replicas will be allocating%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)",
  "startTimestamp": 1474197343360,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
  "startTimestamp": 1474197343282,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.TerminalTests",
   "displayName": "org.elasticsearch.cli.TerminalTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.TerminalTests",
   "children": [
    {
     "id": "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)",
     "displayName": "testVerbosity(org.elasticsearch.cli.TerminalTests)",
     "methodName": "testVerbosity",
     "className": "org.elasticsearch.cli.TerminalTests",
     "children": []
    },
    {
     "id": "ID#testEscaping(org.elasticsearch.cli.TerminalTests)",
     "displayName": "testEscaping(org.elasticsearch.cli.TerminalTests)",
     "methodName": "testEscaping",
     "className": "org.elasticsearch.cli.TerminalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197343403
 }
]

[
 "TEST_STARTED",
 "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)",
  "startTimestamp": 1474197343485,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEscaping(org.elasticsearch.cli.TerminalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscaping(org.elasticsearch.cli.TerminalTests)",
  "startTimestamp": 1474197343492,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.TerminalTests",
  "startTimestamp": 1474197343403,
  "executionTime": 107
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.util.SloppyMathTests",
   "displayName": "org.apache.lucene.util.SloppyMathTests",
   "methodName": null,
   "className": "org.apache.lucene.util.SloppyMathTests",
   "children": [
    {
     "id": "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
     "displayName": "testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
     "methodName": "testSloppyMath",
     "className": "org.apache.lucene.util.SloppyMathTests",
     "children": []
    },
    {
     "id": "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)",
     "displayName": "testAccuracy(org.apache.lucene.util.SloppyMathTests)",
     "methodName": "testAccuracy",
     "className": "org.apache.lucene.util.SloppyMathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197343517
 }
]

[
 "TEST_STARTED",
 "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:43,625][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with m at \"-43.86202592491914, -98.07789471147295\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:44,082][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with km at \"42.75837592999291, 13.764487082942104\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:44,087][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with in at \"-51.96332720241431, -28.357551541119655\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:44,092][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with mi at \"-43.389160842092714, -38.627517156519424\"%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
  "startTimestamp": 1474197343623,
  "executionTime": 517
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)",
  "startTimestamp": 1474197344140,
  "executionTime": 532
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.util.SloppyMathTests",
  "startTimestamp": 1474197343517,
  "executionTime": 1168
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197344692
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,813][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hshbuGFmQ0eqBJOqEBOaRQ}{local}{local[68]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,821][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,821][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,846][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,846][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,846][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,850][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,850][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,850][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,855][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,855][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,871][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,871][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,871][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,889][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,889][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,890][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,899][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,899][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,899][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,910][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,910][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,916][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,916][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,916][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,920][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,921][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,921][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,929][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,929][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:44,929][WARN ][org.elasticsearch.deprecation.index.mapper]  [Mf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197344791,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197344937,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197344947,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197344951,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197344954,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197345021,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197345043,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197345079,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197345083,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474197345123,
  "executionTime": 34
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
  "startTimestamp": 1474197344692,
  "executionTime": 473
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "displayName": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "children": [
    {
     "id": "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testSuccessAfterRetryWithClusterStateUpdate",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testRetryOfAnAlreadyTimedOutRequest",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testFailureWithoutRetry",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testBasicRequestWorks",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testUnresolvableRequestDoesNotHang",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testSuccessAfterRetryWithExceptionFromTransport",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197345181
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,323][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YeKmlF3vTv6pHXkZxmZZag}{local}{local[69]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,327][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{TGOTiSmMS9WhpVy1ue66mw}{local}{local[71]}, previous {node}{YeKmlF3vTv6pHXkZxmZZag}{local}{local[69]}}, removed {{node}{YeKmlF3vTv6pHXkZxmZZag}{local}{local[69]},}, added {{node_1}{TGOTiSmMS9WhpVy1ue66mw}{local}{local[71]},{node_2}{LWOr7y6aTpq_8EVI7eNSVg}{local}{local[72]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,333][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_1}{TGOTiSmMS9WhpVy1ue66mw}{local}{local[71]},{node_0}{hNI3vBIrQieDfq8r3ykmgw}{local}{local[70]},{node_2}{LWOr7y6aTpq_8EVI7eNSVg}{local}{local[72]},}, added {{node_1}{Xn6vqoRKSvyEGDousj90NQ}{local}{local[77]},{node_2}{NstDqKnQSSy3-5R5X7QjTQ}{local}{local[78]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345288,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{81qJlExnQK2KHhtgSVa1lw}{local}{local[82]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,356][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{vfWNshAcSue9Komf7SQG7w}{local}{local[84]}, previous {node}{81qJlExnQK2KHhtgSVa1lw}{local}{local[82]}}, removed {{node}{81qJlExnQK2KHhtgSVa1lw}{local}{local[82]},}, added {{node_1}{vfWNshAcSue9Komf7SQG7w}{local}{local[84]},{node_2}{23wiKVnkQGOODa709rWjmg}{local}{local[85]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345337,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,367][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XNGW1RooTBSPA52ofibDXQ}{local}{local[89]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,369][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{1RH_KGiiTjmu8Udz0y2tSA}{local}{local[91]}, previous {node}{XNGW1RooTBSPA52ofibDXQ}{local}{local[89]}}, removed {{node}{XNGW1RooTBSPA52ofibDXQ}{local}{local[89]},}, added {{node_1}{1RH_KGiiTjmu8Udz0y2tSA}{local}{local[91]},{node_2}{T0JOo40IQfyKJvOcTZ7ZLA}{local}{local[92]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345361,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,377][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qlPS0hxkT8KJ7tO0RWwQVg}{local}{local[96]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345373,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,385][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eWFOnodqRBmteNyI6CjhIg}{local}{local[97]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,388][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{jM7914FiRyqnS4H45nxZHA}{local}{local[99]}, previous {node}{eWFOnodqRBmteNyI6CjhIg}{local}{local[97]}}, removed {{node}{eWFOnodqRBmteNyI6CjhIg}{local}{local[97]},}, added {{node_1}{jM7914FiRyqnS4H45nxZHA}{local}{local[99]},{node_2}{iiYmO4zMTq66Zv7KouRS_g}{local}{local[100]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345379,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,394][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hxDiVRtJScu2ppDA2O1elQ}{local}{local[104]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,397][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{ZZFZLm6rQC-fe3BSU3-7yA}{local}{local[106]}, previous {node}{hxDiVRtJScu2ppDA2O1elQ}{local}{local[104]}}, removed {{node}{hxDiVRtJScu2ppDA2O1elQ}{local}{local[104]},}, added {{node_1}{ZZFZLm6rQC-fe3BSU3-7yA}{local}{local[106]},{node_2}{Nb2GnZNVQReP0gDtZDoZVw}{local}{local[107]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345389,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,411][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{v8G0702KQSOKdh92kmN8HA}{local}{local[111]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,413][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{BJWqIjbjSfmI7d0GTSThkA}{local}{local[113]}, previous {node}{v8G0702KQSOKdh92kmN8HA}{local}{local[111]}}, removed {{node}{v8G0702KQSOKdh92kmN8HA}{local}{local[111]},}, added {{node_1}{BJWqIjbjSfmI7d0GTSThkA}{local}{local[113]},{node_2}{uhJ8LGwwR4Cop6uqltzYqA}{local}{local[114]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:45,414][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_1}{BJWqIjbjSfmI7d0GTSThkA}{local}{local[113]},{node_0}{feuzmBDvQ2OLo1nhlxCn4g}{local}{local[112]},{node_2}{uhJ8LGwwR4Cop6uqltzYqA}{local}{local[114]},}, added {{node_1}{jTza-gk3Rz-k9ph_hboung}{local}{local[119]},{node_2}{YPcHQCCeTmKyBhxFvRzhSQ}{local}{local[120]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474197345398,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
  "startTimestamp": 1474197345181,
  "executionTime": 235
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesServiceTests",
   "displayName": "org.elasticsearch.indices.IndicesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesServiceTests",
   "children": [
    {
     "id": "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testIndexAndTombstoneWithSameNameOnStartup",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDeleteIndexStore",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteShardContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDanglingIndicesWithAliasConflict",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteIndexContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testVerifyIfIndexContentDeleted",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testPendingTasks",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197345424
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,487][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,521][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,521][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,527][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,530][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,530][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,702][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,702][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,703][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,704][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{E12YpcvHSOmDRp9PaIghXg}{b1joKbaSRJyVWPNCk4mmzg}{local}{local[7]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,705][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,718][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,733][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testIndexAndTombstoneWithSameNameOnStartup]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,735][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,735][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,736][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,737][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,745][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,773][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,773][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,778][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,781][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,781][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,912][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,912][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,913][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,914][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jWbf9rSsRxWqy5Gm_Gradw}{ypheYwgSRGimop8mXhDHzw}{local}{local[8]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,916][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,931][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197345479,
  "executionTime": 471
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:45,959][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,053][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,219][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/CL38-G7rScaZHA0G8NrLiA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,474][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/CL38-G7rScaZHA0G8NrLiA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,529][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[test/CL38-G7rScaZHA0G8NrLiA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,871][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,885][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testDeleteIndexStore]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,938][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,938][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,939][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,941][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,949][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,972][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,972][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,975][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,981][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:46,981][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,245][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,245][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,245][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,323][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{W_bYq-99QXKbwL5_hxUx2Q}{VMJs0PgTQXCHjsnck-UGsA}{local}{local[9]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,324][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,421][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197345951,
  "executionTime": 1485
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,445][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,562][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testCanDeleteShardContent]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,582][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,582][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,582][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,584][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,595][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,617][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,617][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,621][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,623][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,623][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,825][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,825][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,826][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,865][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{GeCvDNfCSyC9A1oejMsl2w}{ljOMmxyBTVyQq02V92BvrQ}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,870][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,915][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197347436,
  "executionTime": 502
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:47,966][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,102][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,174][WARN ][org.elasticsearch.gateway] [node_s_0] ignoring dangled index [[test-alias/gWVGnrPwQmG1jzDOUU4d6Q]] on node [{node_s_0}{GeCvDNfCSyC9A1oejMsl2w}{ljOMmxyBTVyQq02V92BvrQ}{local}{local[10]}] due to an existing alias with the same name%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,193][INFO ][org.elasticsearch.gateway] [node_s_0] auto importing dangled indices [[test-alias/gWVGnrPwQmG1jzDOUU4d6Q]/OPEN] from [{node_s_0}{GeCvDNfCSyC9A1oejMsl2w}{ljOMmxyBTVyQq02V92BvrQ}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,262][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testDanglingIndicesWithAliasConflict]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,379][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,379][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,380][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,382][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,394][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,415][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,415][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,429][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,431][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,431][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,597][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,598][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,598][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,603][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{CSuFCO7QTXODdRL5gXfMhw}{JTK_Kg0GS5muNvtL1reCug}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,604][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,630][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197347939,
  "executionTime": 719
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,667][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testCanDeleteIndexContent]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,669][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,670][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,670][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,672][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,685][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,713][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,713][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,717][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,720][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,720][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,875][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,875][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,875][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,890][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{LoNUiqFLQ_2-_yRt6nXH3g}{eNrRcQtjRD-IhiX7GL24AQ}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,891][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,922][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197348659,
  "executionTime": 282
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,964][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testVerifyIfIndexContentDeleted]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,965][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,965][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,965][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,969][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:48,981][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,038][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,038][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,060][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,062][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,062][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,202][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,202][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,203][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,205][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{mocsSUrdRGqyk93li7kggA}{fU2fz7eHQtaRMdXPPBRDgA}{local}{local[13]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,205][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,219][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197348941,
  "executionTime": 294
 }
]

[
 "TEST_STARTED",
 "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,299][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/bOrB8yJeQ3O4A0c57Z1LWA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,378][WARN ][org.elasticsearch.indices] [node_s_0] 1 no shard lock for pending delete%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,378][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[test/bOrB8yJeQ3O4A0c57Z1LWA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,397][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testPendingTasks]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,425][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,426][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,426][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,428][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,442][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,470][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,470][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,473][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,476][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,476][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,606][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,606][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,607][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,609][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nAvVZ1PzQ8OaXPZ9-KT0-g}{cRGi8u1oTsWLCFmlwAKv1Q}{local}{local[14]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,609][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,627][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474197349235,
  "executionTime": 429
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,665][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,669][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,670][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:49,700][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesServiceTests",
  "startTimestamp": 1474197345424,
  "executionTime": 4406
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NullValueObjectMappingTests",
   "displayName": "org.elasticsearch.index.mapper.NullValueObjectMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NullValueObjectMappingTests",
   "children": [
    {
     "id": "ID#testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)",
     "displayName": "testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)",
     "methodName": "testNullValueObject",
     "className": "org.elasticsearch.index.mapper.NullValueObjectMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197349836
 }
]

[
 "TEST_STARTED",
 "ID#testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:49,868][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:49,911][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:49,911][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:49,914][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:49,917][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:49,917][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,173][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,174][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,174][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,206][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Ok6DxmjaSQ-Kpq1yDNw52g}{l9bk4C-zR2OvSUzk4xA1PQ}{local}{local[15]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,206][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,274][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,296][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,380][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,395][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NullValueObjectMappingTests#testNullValueObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)",
  "startTimestamp": 1474197349860,
  "executionTime": 565
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,426][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,426][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,427][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:15:50,428][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NullValueObjectMappingTests",
  "startTimestamp": 1474197349836,
  "executionTime": 601
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197350446
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350473,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350488,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350494,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350507,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350510,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350513,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474197350515,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
  "startTimestamp": 1474197350446,
  "executionTime": 76
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JarHellTests",
   "displayName": "org.elasticsearch.bootstrap.JarHellTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JarHellTests",
   "children": [
    {
     "id": "ID#testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDirsOnClasspath",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDirAndJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testRequiredJDKVersionTooOld",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testWithinSingleJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testParseClassPathWindows",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testXmlBeansLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testRequiredJDKVersionIsOK",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testCrazyEclipseClassPathWindows",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testBaseDateTimeLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testBadJDKVersionInJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testBadESVersionInJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDuplicateClasspathLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testEmptyClassPathWindows",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDifferentJars",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testGoodESVersionInJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testLog4jLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testParseClassPathUnix",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testEmptyClassPathUnix",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197350539
 }
]

[
 "TEST_STARTED",
 "ID#testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197350575,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197350589,
  "executionTime": 464
 }
]

[
 "TEST_STARTED",
 "ID#testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351053,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351082,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351109,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351115,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351133,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351191,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351194,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351196,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351426,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197351585,
  "executionTime": 463
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352048,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352258,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352439,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352590,
  "executionTime": 213
 }
]

[
 "TEST_STARTED",
 "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "message": "test is designed for unix-like systems only",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:26D7EBF40FE40147]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.bootstrap.JarHellTests.testParseClassPathUnix(JarHellTests.java:251)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352804,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "message": "test is designed for unix-like systems only",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:FEF3F6F1E4922E39]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.bootstrap.JarHellTests.testEmptyClassPathUnix(JarHellTests.java:265)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352806,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474197352808,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JarHellTests",
  "startTimestamp": 1474197350539,
  "executionTime": 2305
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoveryTargetTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
   "children": [
    {
     "id": "ID#testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testStart",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testStageSequenceEnforcement",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testFileHashCodeAndEquals",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testIndex",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testConcurrentModificationIndexFileDetailsMap",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testTranslog",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testTimers",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197352859
 }
]

[
 "TEST_STARTED",
 "ID#testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352910,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352915,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:52,919][INFO ][org.elasticsearch.indices.recovery] [node_s_0] testing initial information%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:52,922][INFO ][org.elasticsearch.indices.recovery] [node_s_0] testing serialized information%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:52,938][INFO ][org.elasticsearch.indices.recovery] [node_s_0] testing post recovery%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352917,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352939,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352958,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474197352967,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoveryTargetTests",
  "startTimestamp": 1474197352859,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FilterFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
   "children": [
    {
     "id": "ID#testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "displayName": "testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "methodName": "testFilterByFrequency",
     "className": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197352979
 }
]

[
 "TEST_STARTED",
 "ID#testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:55,843][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:55,941][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:55,941][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:55,945][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:55,948][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:55,948][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,855][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,855][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,856][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,858][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{mZbD9PyMRdexKResmGOFfw}{GKWiyaH5RYu6zgYfCwIIYA}{local}{local[16]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,859][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,882][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:56,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,052][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,140][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [FilterFieldDataTests#testFilterByFrequency]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
  "startTimestamp": 1474197355833,
  "executionTime": 1371
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,211][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,278][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,293][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [FilterFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
  "message": "No need to test empty usage here",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: No need to test empty usage here\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:1CD8D70DB1DE82C9]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.fielddata.FilterFieldDataTests.testEmpty(FilterFieldDataTests.java:122)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: No need to test empty usage here",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
  "startTimestamp": 1474197357205,
  "executionTime": 139
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,344][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,345][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,345][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:15:57,347][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FilterFieldDataTests",
  "startTimestamp": 1474197352979,
  "executionTime": 4375
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRestoreDoesNotAllocateSnapshotOnOlderNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRollingRestart",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testDoNotAllocateFromPrimary",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357362
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474197357403,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,438][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,446][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][1], [test][4], [test][2], [test][3], [test][0], [test][3], [test][1], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,447][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,452][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,453][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,460][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][3], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,461][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,464][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,464][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,474][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,477][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][3], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,477][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474197357413,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,590][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_2][3], [test_7][0], [test_2][2], [test_8][1], [test_4][1], [test_6][1], [test_5][0], [test_7][0], [test_4][0], [test_6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,597][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,608][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,609][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,613][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_9][1], [test_5][1], [test_0][1], [test_5][2], [test_7][0], [test_4][1], [test_8][0], [test_2][3], [test_8][3], [test_8][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,613][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,623][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,637][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_8][0], [test_3][1], [test_9][1], [test_1][0], [test_0][0], [test_2][3], [test_2][1], [test_8][3], [test_8][2], [test_4][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,641][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_8][0], [test_2][0], [test_6][0], [test_2][0], [test_5][0], [test_6][0], [test_3][1], [test_8][0], [test_2][3], [test_5][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,642][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,676][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,691][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_9][0], [test_8][3], [test_6][0], [test_5][1], [test_2][3], [test_8][0], [test_3][0], [test_4][0], [test_2][2], [test_7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,694][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_5][1], [test_9][1], [test_7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,704][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,705][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,711][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][1], [test_4][0], [test_8][2], [test_6][1], [test_2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,761][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_6][0], [test_0][0], [test_4][1], [test_9][1], [test_2][1], [test_8][1], [test_2][0], [test_7][0], [test_8][2], [test_2][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,772][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,773][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,805][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_0][1], [test_0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,825][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,867][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_8][2], [test_2][0], [test_8][3], [test_2][1], [test_4][2], [test_2][2], [test_4][0], [test_2][3], [test_8][0], [test_8][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,896][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,902][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,903][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,909][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_3][1], [test_4][1], [test_4][0], [test_2][1], [test_8][0], [test_7][0], [test_1][1], [test_6][0], [test_5][0], [test_4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,919][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,930][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,957][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_7][0], [test_8][0], [test_1][1], [test_3][0], [test_0][0], [test_8][1], [test_6][0], [test_2][0], [test_5][1], [test_2][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474197357478,
  "executionTime": 485
 }
]

[
 "TEST_STARTED",
 "ID#testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:57,976][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][3], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474197357963,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474197357976,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
  "startTimestamp": 1474197357362,
  "executionTime": 622
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
   "children": [
    {
     "id": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)",
     "displayName": "testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)",
     "methodName": "testCompareParsingTokens",
     "className": "org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197357990
 }
]

[
 "TEST_STARTED",
 "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)",
  "startTimestamp": 1474197358035,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
  "startTimestamp": 1474197357990,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailedShardPrimaryRelocatingToAndFrom",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFirstAllocationFailureSingleNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testRebalanceFailure",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailPrimaryStartedCheckReplicaElected",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testSingleShardMultipleAllocationFailures",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFirstAllocationFailureTwoNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailAllReplicasInitializingOnPrimaryFail",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358050
 }
]

[
 "TEST_STARTED",
 "ID#testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,104][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,106][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 2 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,108][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verifying all is allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding additional node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> moving primary shard to node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail primary shard recovering instance on node3 being initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> moving primary shard to node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,126][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail primary shard recovering instance on node1 being relocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,127][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358098,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,135][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,135][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding single node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,136][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail the first shard, will have no place to be rerouted to (single node), so stays unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,136][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358128,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,143][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,143][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,145][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (backups)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,145][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,145][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding third node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Fail the shards on node 3%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358137,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,155][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,155][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (backups)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,158][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,158][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail the primary shard, will have no place to be rerouted to (single node), so stays unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,170][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358147,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,182][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] failing shard on node [node3]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358171,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358184,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,201][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,202][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,202][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail the first shard, will start INITIALIZING on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,203][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358194,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,248][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:15:58,248][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474197358203,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
  "startTimestamp": 1474197358050,
  "executionTime": 229
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testQueryModeCommonGramsAnalysis",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testQueryModeSettings",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testCommonGramsAnalysis",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testWithoutCommonWordsMatch",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358314
 }
]

[
 "TEST_STARTED",
 "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474197358328,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474197358416,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474197358444,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474197358479,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474197358533,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474197358542,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
  "startTimestamp": 1474197358314,
  "executionTime": 279
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "children": [
    {
     "id": "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
     "displayName": "testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
     "methodName": "testExceptionForCopyToInMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358603
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:58,656][WARN ][mapping [type]           ] Found a copy_to in field [c] which is within a multi field. This feature has been removed and the copy_to will be removed from the mapping.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
  "startTimestamp": 1474197358628,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
  "startTimestamp": 1474197358603,
  "executionTime": 66
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.smile.SmileXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
   "children": [
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358678
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474197358703,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474197358706,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474197358710,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474197358713,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474197358716,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474197358719,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.smile.SmileXContentTests",
  "startTimestamp": 1474197358678,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentMapperMergeTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
   "children": [
    {
     "id": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testMergeObjectAndNested",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testDoNotRepeatOriginalMapping",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testChangeSearchAnalyzerToDefault",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testConcurrentMergeTest",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "test1Merge",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testMergeSearchAnalyzer",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testMergeObjectDynamic",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197358731
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:58,792][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:58,856][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:58,856][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:58,870][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:58,873][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:58,873][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,174][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,174][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,174][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,188][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7omipn4zRqWjNvCI_wvi-A}{tpcjg5AcSYy_v4YS76V8MQ}{local}{local[17]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,189][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,216][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,239][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,331][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,353][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testMergeObjectAndNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197358783,
  "executionTime": 621
 }
]

[
 "TEST_STARTED",
 "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,410][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,454][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,469][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testDoNotRepeatOriginalMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197359404,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,502][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,600][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,625][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testChangeSearchAnalyzerToDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197359497,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,674][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:15:59,764][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:03,684][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testConcurrentMergeTest]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197359667,
  "executionTime": 4069
 }
]

[
 "TEST_STARTED",
 "ID#test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:03,742][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:03,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:03,903][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#test1Merge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197363736,
  "executionTime": 240
 }
]

[
 "TEST_STARTED",
 "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:03,992][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,080][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,094][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testMergeSearchAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197363976,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,150][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,261][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testMergeObjectDynamic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474197364142,
  "executionTime": 152
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,295][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,295][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,295][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:04,297][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentMapperMergeTests",
  "startTimestamp": 1474197358731,
  "executionTime": 11348
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "displayName": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "children": [
    {
     "id": "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseRemove",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAdd",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseIndexAndIndicesThrowsError",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseRemoveIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAliasAndAliasesThrowsError",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAddDefaultRouting",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testEmptyAlias",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testBadOptionsInNonIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197370088
 }
]

[
 "TEST_STARTED",
 "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370235,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370242,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370246,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370250,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370256,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370268,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370273,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370283,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370302,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474197370318,
  "executionTime": 72
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
  "startTimestamp": 1474197370088,
  "executionTime": 308
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.UnassignedInfoTests",
   "displayName": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
   "children": [
    {
     "id": "ID#testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testNodeLeave",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testDanglingIndexImported",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testExistingIndexRestored",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testClusterRecovered",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testNewIndexRestored",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testRemainingDelayCalculation",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testReplicaAdded",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testNumberOfDelayedUnassigned",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testIndexCreated",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testIndexReopened",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testFindNextDelayedAllocation",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testFailedShard",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testStateTransitionMetaHandling",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testReasonOrdinalOrder",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testAllocationStatusSerialization",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197370409
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,515][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,518][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370503,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370519,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370524,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370527,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370529,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370555,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,600][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370594,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,736][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,737][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370612,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370738,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370741,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,757][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,757][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370743,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,825][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:10,859][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370758,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370860,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370867,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370871,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474197370874,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.UnassignedInfoTests",
  "startTimestamp": 1474197370409,
  "executionTime": 474
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "children": [
    {
     "id": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "displayName": "testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "methodName": "testRebalanceOnlyAfterAllShardsAreActive",
     "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197370889
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,136][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,140][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 8 more nodes, and check that no rebalancing/relocation have happened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,148][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards, rebalancing should start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,156][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,156][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete relocation, other half of relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:11,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete relocation, that's it!%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
  "startTimestamp": 1474197371127,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
  "startTimestamp": 1474197370889,
  "executionTime": 271
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "children": [
    {
     "id": "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
     "displayName": "testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
     "methodName": "testClusterIndexHealth",
     "className": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197371166
 }
]

[
 "TEST_STARTED",
 "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:11,452][INFO ][org.elasticsearch.cluster.health] index status: GREEN, expected GREEN%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
  "startTimestamp": 1474197371449,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterIndexHealthTests",
  "startTimestamp": 1474197371166,
  "executionTime": 291
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "displayName": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "children": [
    {
     "id": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "displayName": "testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "methodName": "testDoubleIndexingSameDoc",
     "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197371463
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:11,535][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:11,622][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:11,623][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:11,645][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:11,647][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:11,647][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,056][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,056][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,057][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,073][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sS756BaPQJ2wlL3ooKEK1g}{JGGUx-ZqRPiXwA_PrAyCjA}{local}{local[18]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,074][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,134][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,194][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/fdsbyFYYRyeDaBltM1pI_Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/fdsbyFYYRyeDaBltM1pI_Q] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:12,988][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DoubleIndexingDocTests#testDoubleIndexingSameDoc]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
  "startTimestamp": 1474197371524,
  "executionTime": 1600
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:13,124][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:13,126][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:13,126][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:13,128][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
  "startTimestamp": 1474197371463,
  "executionTime": 2015
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMalformedQueryFunctionFieldNotSupported",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testParseSingleFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testWeight1fStillProducesWeightFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testQueryMalformedArrayNotSupported",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testParseFunctionsArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessageWhenMissingFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testFieldValueFactorFactorArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testQueryMalformedFieldNotSupported",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessagesForMisplacedWeightsAndFunctions",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMalformedThrowsException",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testRewriteWithFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMalformedQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testCustomWeightFactorQueryBuilderWithFunctionScore",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197373496
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,847][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XugaIAdwRp6Gg2rB6vatRg}{local}{local[257]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,855][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,855][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,901][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,901][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,902][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,907][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,907][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [KAl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197373765,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197373946,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197373955,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197373966,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374032,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374035,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374038,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374085,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374088,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374096,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374106,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374109,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374112,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374120,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374123,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374127,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,144][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,145][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [5:20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,145][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [9:20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,145][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,145][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [5:20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,145][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [9:20]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374140,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374145,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374197,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374203,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374215,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374217,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374221,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374392,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374394,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474197374398,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
  "startTimestamp": 1474197373496,
  "executionTime": 913
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.FileWatcherTests",
   "displayName": "org.elasticsearch.watcher.FileWatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.FileWatcherTests",
   "children": [
    {
     "id": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoFileOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoDirectoryOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testFileReplacingDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNestedDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testEmptyDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleFileOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374419
 }
]

[
 "TEST_STARTED",
 "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374436,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374448,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374457,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374473,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374502,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374512,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474197374520,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.FileWatcherTests",
  "startTimestamp": 1474197374419,
  "executionTime": 142
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestIndicesActionTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestIndicesActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestIndicesActionTests",
   "children": [
    {
     "id": "ID#testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)",
     "displayName": "testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)",
     "methodName": "testBuildTable",
     "className": "org.elasticsearch.rest.action.cat.RestIndicesActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374567
 }
]

[
 "TEST_STARTED",
 "ID#testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)",
  "startTimestamp": 1474197374591,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestIndicesActionTests",
  "startTimestamp": 1474197374567,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374629
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374649,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374662,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374665,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374668,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374671,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374673,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374675,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374678,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374680,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374682,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374705,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374709,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374712,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374714,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374717,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374722,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374724,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374726,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374732,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374734,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374739,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374741,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374744,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374748,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374753,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374756,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374758,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374761,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374764,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474197374778,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
  "startTimestamp": 1474197374629,
  "executionTime": 165
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "displayName": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "children": [
    {
     "id": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoGetLatLon",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374801
 }
]

[
 "TEST_STARTED",
 "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1474197374817,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1474197374823,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
  "startTimestamp": 1474197374801,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TypeFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374834
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474197374853,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474197374855,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474197374859,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474197374861,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474197374868,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474197374870,
  "executionTime": 94
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TypeFieldTypeTests",
  "startTimestamp": 1474197374834,
  "executionTime": 146
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.WrapperQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testRewriteWithInnerName",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testRewriteWithInnerBoost",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374990
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,026][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{76B7lJmxS1aoP08G22_lYQ}{local}{local[258]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,044][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,044][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,101][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,101][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,101][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,105][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,105][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:15,105][WARN ][org.elasticsearch.deprecation.index.mapper]  [HTjA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375019,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375111,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375114,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375127,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375130,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375145,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375154,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375172,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375174,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375346,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474197375349,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.WrapperQueryBuilderTests",
  "startTimestamp": 1474197374990,
  "executionTime": 365
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.MultiValueModeTests",
   "displayName": "org.elasticsearch.search.MultiValueModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.MultiValueModeTests",
   "children": [
    {
     "id": "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedOrds",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testUnsortedMultiValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedOrds",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedLongs",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testUnsortedSingleValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testFromString(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedStrings",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedStrings",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedLongs",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375370
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375389,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375391,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375398,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375400,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375402,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375405,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375408,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375415,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375417,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375420,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375422,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375424,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474197375427,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.MultiValueModeTests",
  "startTimestamp": 1474197375370,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375438
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
  "startTimestamp": 1474197375459,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
  "startTimestamp": 1474197375438,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.StringsTests",
   "displayName": "org.elasticsearch.common.StringsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.StringsTests",
   "children": [
    {
     "id": "ID#testEvilToString(org.elasticsearch.common.StringsTests)",
     "displayName": "testEvilToString(org.elasticsearch.common.StringsTests)",
     "methodName": "testEvilToString",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    },
    {
     "id": "ID#testSubstring(org.elasticsearch.common.StringsTests)",
     "displayName": "testSubstring(org.elasticsearch.common.StringsTests)",
     "methodName": "testSubstring",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    },
    {
     "id": "ID#testSplitStringToSet(org.elasticsearch.common.StringsTests)",
     "displayName": "testSplitStringToSet(org.elasticsearch.common.StringsTests)",
     "methodName": "testSplitStringToSet",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    },
    {
     "id": "ID#testCleanTruncate(org.elasticsearch.common.StringsTests)",
     "displayName": "testCleanTruncate(org.elasticsearch.common.StringsTests)",
     "methodName": "testCleanTruncate",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375476
 }
]

[
 "TEST_STARTED",
 "ID#testEvilToString(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvilToString(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474197375509,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSubstring(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubstring(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474197375512,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSplitStringToSet(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitStringToSet(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474197375514,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCleanTruncate(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanTruncate(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474197375517,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.StringsTests",
  "startTimestamp": 1474197375476,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375527
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375565,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375569,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375571,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375574,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375577,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375579,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375583,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375587,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375591,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375594,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375596,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375598,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375601,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375603,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375606,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375608,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375613,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375618,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375624,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375626,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375631,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375633,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375637,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375639,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375648,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375651,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375653,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375655,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375663,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474197375666,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
  "startTimestamp": 1474197375527,
  "executionTime": 143
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharFilterTests",
   "displayName": "org.elasticsearch.index.analysis.CharFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharFilterTests",
   "children": [
    {
     "id": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testMappingCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    },
    {
     "id": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testHtmlStripCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    },
    {
     "id": "ID#testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testPatternReplaceCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375675
 }
]

[
 "TEST_STARTED",
 "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1474197375687,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1474197375736,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1474197375813,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharFilterTests",
  "startTimestamp": 1474197375675,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
   "children": [
    {
     "id": "ID#testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testConvertWildcardsTests",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testMultipleWildcards",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testConvertWildcardsJustIndicesTests",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testAll",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testConvertWildcardsOpenClosedIndicesTests",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375840
 }
]

[
 "TEST_STARTED",
 "ID#testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474197375862,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474197375873,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474197375878,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474197375880,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474197375882,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
  "startTimestamp": 1474197375840,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375910
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:16:15,941][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1C222lF9QbOCXYXFesRzYg}{local}{local[259]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
  "startTimestamp": 1474197375956,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
  "startTimestamp": 1474197375981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
  "startTimestamp": 1474197375983,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
  "startTimestamp": 1474197375910,
  "executionTime": 79
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptSettingsTests",
   "displayName": "org.elasticsearch.script.ScriptSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptSettingsTests",
   "children": [
    {
     "id": "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testDefaultLanguageIsPainless",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testSettingsAreProperlyPropogated",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testInvalidDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testCustomDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375996
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474197376011,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474197376014,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474197376016,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474197376019,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptSettingsTests",
  "startTimestamp": 1474197375996,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "children": [
    {
     "id": "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197376034
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1474197376051,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1474197376118,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1474197376136,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
  "startTimestamp": 1474197376034,
  "executionTime": 140
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testInvalidClosedPolygon",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testEmptyPolygon",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedDeprecated",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testInvalidOpenPolygon",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQueryParsingExceptions",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromJsonCoerceDeprecated",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testNullFieldName",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197376184
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,378][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pNLN54rDR8u6TEfv6MMoeg}{local}{local[260]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,388][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,389][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,407][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,407][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,407][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,409][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,409][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,409][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,412][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,412][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,412][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,417][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,417][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,417][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,419][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,419][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,419][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,423][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,423][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,423][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,425][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,425][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,425][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,427][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,427][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,427][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,432][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,432][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,432][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,436][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,436][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,436][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,446][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,446][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,446][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,450][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,451][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,455][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:16,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [V] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376306,
  "executionTime": 584
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376891,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376896,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376899,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376904,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376927,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376931,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197376934,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377083,
  "executionTime": 200
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377283,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377388,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377409,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377412,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377416,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377423,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377425,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377444,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377447,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377579,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377582,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377584,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474197377587,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
  "startTimestamp": 1474197376184,
  "executionTime": 1413
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoveriesCollectionTests",
   "displayName": "org.elasticsearch.recovery.RecoveriesCollectionTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
   "children": [
    {
     "id": "ID#testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testRecoveryTimeout",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testResetRecovery",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testLastAccessTimeUpdate",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testIndexingDuringFileRecovery",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testRecoveryCancellation",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197377617
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474197377687,
  "executionTime": 213
 }
]

[
 "TEST_STARTED",
 "ID#testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474197377901,
  "executionTime": 848
 }
]

[
 "TEST_STARTED",
 "ID#testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474197378750,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,922][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,923][TRACE][org.elasticsearch.index.shard] [s0] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=IlKEs3wJRaaXa56BskdM_w]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,936][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] state: [CREATED]->[RECOVERING], reason [store]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,936][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] starting recovery from store ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,988][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [post recovery from shard_store]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,989][TRACE][org.elasticsearch.index.shard] [s0] [test][0] recovery completed from [shard_store], took [52ms]%0A    index    : files           [0] with total_size [0b], took[2ms]%0A             : recovered_files [0] with total_size [0b]%0A             : reusing_files   [0] with total_size [0b]%0A    verify_index    : took [0s], check_index [0s]%0A    translog : number_of_operations [0], took [49ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,989][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,989][TRACE][org.elasticsearch.index.shard] [s0] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,989][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][1][org.elasticsearch.index.mapper.ParseContext$Document@44b2d808]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,993][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][2][org.elasticsearch.index.mapper.ParseContext$Document@2dc4f35f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,994][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][3][org.elasticsearch.index.mapper.ParseContext$Document@78f4bb47]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,995][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][4][org.elasticsearch.index.mapper.ParseContext$Document@5f5ba8c3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,995][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][5][org.elasticsearch.index.mapper.ParseContext$Document@2a19fb6a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,996][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][6][org.elasticsearch.index.mapper.ParseContext$Document@21aa23b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,997][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][7][org.elasticsearch.index.mapper.ParseContext$Document@42b02748]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,997][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][8][org.elasticsearch.index.mapper.ParseContext$Document@3d3b6384]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:18,999][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][9][org.elasticsearch.index.mapper.ParseContext$Document@632b4bf9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,000][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][10][org.elasticsearch.index.mapper.ParseContext$Document@5723e9b9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,002][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][11][org.elasticsearch.index.mapper.ParseContext$Document@5baf1ec3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,003][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][12][org.elasticsearch.index.mapper.ParseContext$Document@3614f621]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,004][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][13][org.elasticsearch.index.mapper.ParseContext$Document@60d6a7fb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,005][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@1a882e78]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,005][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@6bbe3a1e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,006][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@586cdcb2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,006][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@696bde39]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,007][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@323fb087]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,007][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@da19224]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,008][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@db5b39b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,009][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@5618b55d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,010][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@38d891d0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,011][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@3527f068]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,012][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@5f4bf5cb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,013][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@4328e329]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,013][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@6db17a60]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,014][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@178a6914]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,014][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@3deb1ee1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,015][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@15b1c1bf]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,015][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][30][org.elasticsearch.index.mapper.ParseContext$Document@53687107]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,016][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][31][org.elasticsearch.index.mapper.ParseContext$Document@27953cde]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,016][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][32][org.elasticsearch.index.mapper.ParseContext$Document@a209767]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,016][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][33][org.elasticsearch.index.mapper.ParseContext$Document@2db0b748]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,017][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][34][org.elasticsearch.index.mapper.ParseContext$Document@38850ea2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,017][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][35][org.elasticsearch.index.mapper.ParseContext$Document@5bc04256]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,018][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][36][org.elasticsearch.index.mapper.ParseContext$Document@7ce2b346]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,018][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][37][org.elasticsearch.index.mapper.ParseContext$Document@4361e82f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,019][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][38][org.elasticsearch.index.mapper.ParseContext$Document@540f9ddf]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,019][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][39][org.elasticsearch.index.mapper.ParseContext$Document@541b6bc2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,020][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][40][org.elasticsearch.index.mapper.ParseContext$Document@328fcc23]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,021][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][41][org.elasticsearch.index.mapper.ParseContext$Document@1bd7927b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,021][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][42][org.elasticsearch.index.mapper.ParseContext$Document@7fc5f688]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,022][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][43][org.elasticsearch.index.mapper.ParseContext$Document@21b0aefc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,022][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][44][org.elasticsearch.index.mapper.ParseContext$Document@7cab0da4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,023][TRACE][org.elasticsearch.index.shard] [s0] [test][0] index [type][45][org.elasticsearch.index.mapper.ParseContext$Document@4300dc60]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,023][TRACE][org.elasticsearch.index.shard] [s0] [test][0] flush with FlushRequest{waitIfOngoing=false, force=false}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,371][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,372][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=oRZDISEVSIe2iFQacbQ59w]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,459][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]->[RECOVERING], reason [remote]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,596][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][46][org.elasticsearch.index.mapper.ParseContext$Document@6b56aaac]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,607][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][47][org.elasticsearch.index.mapper.ParseContext$Document@5347b79d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,608][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][48][org.elasticsearch.index.mapper.ParseContext$Document@2c77ea68]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,608][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][49][org.elasticsearch.index.mapper.ParseContext$Document@2c72570c]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,609][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][50][org.elasticsearch.index.mapper.ParseContext$Document@446e62d4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,610][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][51][org.elasticsearch.index.mapper.ParseContext$Document@75cc0be]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,610][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][52][org.elasticsearch.index.mapper.ParseContext$Document@286589d5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,611][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][53][org.elasticsearch.index.mapper.ParseContext$Document@31d828d1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,612][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][54][org.elasticsearch.index.mapper.ParseContext$Document@7b9200cf]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,612][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][55][org.elasticsearch.index.mapper.ParseContext$Document@59945de3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,614][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][56][org.elasticsearch.index.mapper.ParseContext$Document@25ef559d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,614][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][57][org.elasticsearch.index.mapper.ParseContext$Document@24dab55e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,827][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][46]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,827][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][46][org.elasticsearch.index.mapper.ParseContext$Document@4e87d65]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,832][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][47]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,833][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][47][org.elasticsearch.index.mapper.ParseContext$Document@203620a4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,833][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][48]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,833][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][48][org.elasticsearch.index.mapper.ParseContext$Document@2d6e7960]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,834][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][49]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,834][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][49][org.elasticsearch.index.mapper.ParseContext$Document@190ff611]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,839][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][50]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,841][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][50][org.elasticsearch.index.mapper.ParseContext$Document@7662a04b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,841][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][51]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,842][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][51][org.elasticsearch.index.mapper.ParseContext$Document@7655a18d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,842][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][52]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,842][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][52][org.elasticsearch.index.mapper.ParseContext$Document@76e607f8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,843][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][53]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,843][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][53][org.elasticsearch.index.mapper.ParseContext$Document@5e8cf8c8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,843][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][54]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,844][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][54][org.elasticsearch.index.mapper.ParseContext$Document@21a04e93]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,844][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][55]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,844][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][55][org.elasticsearch.index.mapper.ParseContext$Document@6e6afd09]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,845][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][56]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,845][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][56][org.elasticsearch.index.mapper.ParseContext$Document@50dd35ab]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,848][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [translog] recover [index] op of [type][57]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:19,848][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][57][org.elasticsearch.index.mapper.ParseContext$Document@76ccf12d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,568][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [peer recovery done]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,568][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,568][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,568][TRACE][org.elasticsearch.index.shard] [s1] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [147.6kb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,702][TRACE][org.elasticsearch.index.shard] [s1] [test][0] remove [147.6kb] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,704][TRACE][org.elasticsearch.index.shard] [s1] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [0b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,704][TRACE][org.elasticsearch.index.shard] [s1] [test][0] remove [0b] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,707][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:46:20,759][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474197378881,
  "executionTime": 1932
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474197380813,
  "executionTime": 147
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoveriesCollectionTests",
  "startTimestamp": 1474197377617,
  "executionTime": 3463
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NumberFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testConversions",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testHalfFloatRange",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197381087
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381103,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381105,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381107,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381109,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381112,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381116,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197381118,
  "executionTime": 3454
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197384573,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197384589,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474197384591,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NumberFieldTypeTests",
  "startTimestamp": 1474197381087,
  "executionTime": 3508
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.InternalSearchHitTests",
   "displayName": "org.elasticsearch.search.internal.InternalSearchHitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.InternalSearchHitTests",
   "children": [
    {
     "id": "ID#testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)",
     "displayName": "testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)",
     "methodName": "testSerializeShardTarget",
     "className": "org.elasticsearch.search.internal.InternalSearchHitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197384601
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)",
  "startTimestamp": 1474197384650,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.InternalSearchHitTests",
  "startTimestamp": 1474197384601,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
   "displayName": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
   "children": [
    {
     "id": "ID#testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "displayName": "testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "methodName": "testFilterFreqs",
     "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
     "children": []
    },
    {
     "id": "ID#testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "displayName": "testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "methodName": "testAllFreqs",
     "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
     "children": []
    },
    {
     "id": "ID#testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "displayName": "testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "methodName": "testNonDeletedFreqs",
     "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197384665
 }
]

[
 "TEST_STARTED",
 "ID#testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
  "startTimestamp": 1474197384685,
  "executionTime": 1398
 }
]

[
 "TEST_STARTED",
 "ID#testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
  "startTimestamp": 1474197386083,
  "executionTime": 1259
 }
]

[
 "TEST_STARTED",
 "ID#testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
  "startTimestamp": 1474197387342,
  "executionTime": 210
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
  "startTimestamp": 1474197384665,
  "executionTime": 2889
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testFillerToken",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testInverseMappingNoShingles",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testInverseMapping",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387561
 }
]

[
 "TEST_STARTED",
 "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474197387580,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474197387613,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474197387624,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474197387633,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
  "startTimestamp": 1474197387561,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387654
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:27,681][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fDc6RuRkS8O-o79nnFc34Q}{local}{local[261]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474197387691,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474197387699,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474197387704,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
  "startTimestamp": 1474197387654,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
   "displayName": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
   "children": [
    {
     "id": "ID#testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "displayName": "testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "methodName": "testIsTimeout",
     "className": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "displayName": "testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "methodName": "testClusterHealth",
     "className": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387718
 }
]

[
 "TEST_STARTED",
 "ID#testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
  "startTimestamp": 1474197387738,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
  "startTimestamp": 1474197387740,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
  "startTimestamp": 1474197387718,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.PercentilesTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387749
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:27,773][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Cej7TpVJQt-r8YHf4BKPCw}{local}{local[262]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
  "startTimestamp": 1474197387782,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
  "startTimestamp": 1474197387825,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
  "startTimestamp": 1474197387837,
  "executionTime": 33
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.PercentilesTests",
  "startTimestamp": 1474197387749,
  "executionTime": 126
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.PrimaryTermsTests",
   "displayName": "org.elasticsearch.cluster.routing.PrimaryTermsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.PrimaryTermsTests",
   "children": [
    {
     "id": "ID#testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)",
     "displayName": "testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)",
     "methodName": "testPrimaryTermMetaDataSync",
     "className": "org.elasticsearch.cluster.routing.PrimaryTermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197387881
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,925][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 2 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,927][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 3 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,928][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [0], t [0], init shards: [4], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,928][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][1], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=itiPywt_TOiOd6QCIo-hVw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=P7ZO_sP7QXGPe0ekIDEnkQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,929][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [2], t [2], init shards: [6], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,930][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=d7ud4CEYRG-d34U8AhEkVg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node0], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=Ud1d2Cq7ToK1NuvV6VUS6w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,930][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [4], init shards: [8], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,931][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][0], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=D5I3QA97Q3KGlbau6aLJ8w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test1][1], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Ec3Fb9zuQ5CmrE_DEUrl1Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=aa89FC4rShyUpo3dSeG3Ow], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test1][1], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=zM0Ji10ZT9eWxm8HGKJO3g], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,931][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [8], init shards: [4], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,932][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][1], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=GEoo703qRpi9af0P8b4gaQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test2][0], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=DJajBQmdTKGLXXqldVZgLw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=1OoRMQ8SRxOYqHkttrQDFA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]], [test2][0], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=NCVZyaGkRFuvmz65gj38wA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:27.926Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,932][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][1], [test2][0], [test2][1], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,932][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,933][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding [9] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,941][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,941][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,941][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,941][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[extra_1], relocating [node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=weod1m46QiuGskNH1YgUkA, rId=NCVZyaGkRFuvmz65gj38wA], [test2][1], node[extra_2], relocating [node0], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=UytLYpKmSgaINILhj58dHg, rId=Ud1d2Cq7ToK1NuvV6VUS6w]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,945][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,946][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,946][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,946][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[extra_0], relocating [node2], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=ltAt9i60Rwiq2DX7k72kSQ, rId=d7ud4CEYRG-d34U8AhEkVg], [test2][1], node[extra_5], relocating [node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=gnKA9O-JT8em6y_VFlcbDg, rId=GEoo703qRpi9af0P8b4gaQ]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,949][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,949][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][0], node[extra_6], relocating [node1], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=uEj6SjXtSBGKO_-ledGKJA, rId=P7ZO_sP7QXGPe0ekIDEnkQ], [test1][1], node[extra_3], relocating [node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=k2kBvQA-TAKx-hdgoo-L_A, rId=Ec3Fb9zuQ5CmrE_DEUrl1Q]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,969][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,970][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,977][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,977][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][0], node[extra_4], relocating [node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=QHfrhgC_RMGc1ayEppnFOw, rId=D5I3QA97Q3KGlbau6aLJ8w], [test1][1], node[extra_7], relocating [node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=MAC3gbB7TweguMbraFgQMw, rId=zM0Ji10ZT9eWxm8HGKJO3g]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,978][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,978][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[extra_8], relocating [node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=LezzJ7KuSvWzBWN_JROUQQ, rId=DJajBQmdTKGLXXqldVZgLw]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,979][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,979][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,989][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,989][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,990][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:27,990][INFO ][org.elasticsearch.cluster.routing] [node_s_0] failing primary shards [1] for index [test1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,001][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,001][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [11], init shards: [1], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,001][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][1], node[extra_1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=2wJAcjr4TZmtGyn_WPwxyg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-18T11:16:27.990Z], failed_attempts[1], delayed=false, details[test], allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,002][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,002][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,002][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[node2], relocating [extra_1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=vcDeNhXlTtyPWufs0gk8Ww, rId=weod1m46QiuGskNH1YgUkA]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,003][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,003][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,003][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,003][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:28,003][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [4], t [12], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)",
  "startTimestamp": 1474197387918,
  "executionTime": 85
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.PrimaryTermsTests",
  "startTimestamp": 1474197387881,
  "executionTime": 124
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
   "children": [
    {
     "id": "ID#testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testGenerateRolloverIndexName",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testCreateUpdateAliasRequest",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testCreateIndexRequest",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testEvaluateConditions",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197388012
 }
]

[
 "TEST_STARTED",
 "ID#testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474197388504,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474197388507,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474197388511,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474197388513,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474197388515,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
  "startTimestamp": 1474197388012,
  "executionTime": 512
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    },
    {
     "id": "ID#testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testThatSerializationIncludesAllElements",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    },
    {
     "id": "ID#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197388531
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:28,578][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:28,599][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:28,599][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:28,602][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:28,606][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:28,606][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,277][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,278][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,278][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,340][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nhXwSf5URTuYp6gmEafLIA}{6p0LnL9ISlqX-AM2bBL1lg}{local}{local[19]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,341][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,357][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,672][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:29,959][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474197388566,
  "executionTime": 1501
 }
]

[
 "TEST_STARTED",
 "ID#testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,226][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,309][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testThatSerializationIncludesAllElements]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474197390068,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,382][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,601][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,625][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474197390372,
  "executionTime": 314
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,693][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,831][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474197390686,
  "executionTime": 194
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,881][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,881][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,882][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:30,883][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
  "startTimestamp": 1474197388531,
  "executionTime": 2358
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "children": [
    {
     "id": "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "displayName": "testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "methodName": "testSimpleFormat",
     "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
     "children": []
    },
    {
     "id": "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "displayName": "testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "methodName": "testHtmlEncodeFormat",
     "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197390898
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
  "startTimestamp": 1474197390933,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
  "startTimestamp": 1474197390948,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
  "startTimestamp": 1474197390898,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ScalingThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
   "children": [
    {
     "id": "ID#testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "displayName": "testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "methodName": "testScalingThreadPoolIsBounded",
     "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "displayName": "testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "methodName": "testScalingThreadPoolConfiguration",
     "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "displayName": "testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "methodName": "testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive",
     "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197390964
 }
]

[
 "TEST_STARTED",
 "ID#testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
  "startTimestamp": 1474197391005,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
  "startTimestamp": 1474197391068,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
  "startTimestamp": 1474197391077,
  "executionTime": 69
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ScalingThreadPoolTests",
  "startTimestamp": 1474197390964,
  "executionTime": 183
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "children": [
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSinglePage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHasSinglePage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197391160
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391197,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391211,
  "executionTime": 207
 }
]

[
 "TEST_STARTED",
 "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391418,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391464,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391556,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391574,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391584,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391591,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391593,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391598,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391601,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391624,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391652,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391712,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391716,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391722,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391903,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197391942,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392091,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392127,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392131,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392188,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392196,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392202,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392207,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392234,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392247,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392249,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474197392268,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
  "startTimestamp": 1474197391160,
  "executionTime": 1126
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "displayName": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "children": [
    {
     "id": "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalCET_DST_End",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRounding_HalfDay_DST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeInterval_Kathmandu_DST_Start",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRounding_NotDivisibleInteval",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingMonotonic_CET",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCTimeUnitRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testLenientConversionDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testEdgeCasesTransition",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeUnitRoundingDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testAmbiguousHoursAfterDSTSwitch",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalCET_DST_Start",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197392302
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197392439,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197392454,
  "executionTime": 0
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197392454,
  "executionTime": 2243
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197394697,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197394700,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197394705,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197394708,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197394712,
  "executionTime": 387
 }
]

[
 "TEST_STARTED",
 "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395099,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395101,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395104,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395108,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395110,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395113,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395116,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395118,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474197395124,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
  "startTimestamp": 1474197392302,
  "executionTime": 2828
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportServiceHandshakeTests",
   "displayName": "org.elasticsearch.transport.TransportServiceHandshakeTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
   "children": [
    {
     "id": "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testIgnoreMismatchedClusterName",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testMismatchedClusterName",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testIncompatibleVersions",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testConnectToNodeLight",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197395148
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:35,724][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:36,234][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474197395183,
  "executionTime": 1108
 }
]

[
 "TEST_STARTED",
 "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:36,691][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:37,066][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474197396291,
  "executionTime": 781
 }
]

[
 "TEST_STARTED",
 "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:37,590][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:38,062][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474197397072,
  "executionTime": 1002
 }
]

[
 "TEST_STARTED",
 "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:38,557][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,126][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474197398074,
  "executionTime": 1071
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportServiceHandshakeTests",
  "startTimestamp": 1474197395148,
  "executionTime": 4000
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hppc.HppcMapsTests",
   "displayName": "org.elasticsearch.common.hppc.HppcMapsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.hppc.HppcMapsTests",
   "children": [
    {
     "id": "ID#testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)",
     "displayName": "testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)",
     "methodName": "testIntersection",
     "className": "org.elasticsearch.common.hppc.HppcMapsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399156
 }
]

[
 "TEST_STARTED",
 "ID#testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)",
  "startTimestamp": 1474197399179,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hppc.HppcMapsTests",
  "startTimestamp": 1474197399156,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJsonVerbose",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399190
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,268][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{azkLq9fSQTKDX1GF7Zvdeg}{local}{local[275]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,280][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,280][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,335][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,338][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,338][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,339][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,342][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,342][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,342][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,347][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,347][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,347][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:16:39,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [WuGg] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399233,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399354,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399370,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399373,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399376,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399394,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399397,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399399,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399405,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399408,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474197399411,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
  "startTimestamp": 1474197399190,
  "executionTime": 228
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexServiceTests",
   "displayName": "org.elasticsearch.index.IndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexServiceTests",
   "children": [
    {
     "id": "ID#testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testDetermineShadowEngineShouldBeUsed",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testAliasFilters(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testAliasFilters(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testAliasFilters",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRescheduleAsyncFsync",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testBaseAsyncTask",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRefreshActuallyWorks",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testAsyncFsyncActuallyWorks",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRefreshTaskIsUpdated",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRemovedAliasFilter",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testIllegalFsyncInterval",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testUnknownAliasFilter",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testFilteringAliases(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testFilteringAliases(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testFilteringAliases",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testFsyncTaskIsRunning",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399428
 }
]

[
 "TEST_STARTED",
 "ID#testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,466][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,508][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,509][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,514][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,516][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,516][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,686][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,686][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,686][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,687][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Bu4JvLxBQQi4YhWNo3wBbQ}{wvjTe-LtQfGIcFuY_Qu-Og}{local}{local[20]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,688][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,700][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,714][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testDetermineShadowEngineShouldBeUsed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197399454,
  "executionTime": 261
 }
]

[
 "TEST_STARTED",
 "ID#testAliasFilters(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,721][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,798][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,847][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testAliasFilters]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasFilters(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197399715,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,902][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,994][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,998][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/B-Tea0ehSpSteLXUtYjNxg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,999][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,036][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,039][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRescheduleAsyncFsync]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197399895,
  "executionTime": 331
 }
]

[
 "TEST_STARTED",
 "ID#testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,347][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testBaseAsyncTask]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197400226,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,428][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,442][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,447][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/TFNzB2GhRIuEA625Aj6xQw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,447][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [-1] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,472][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [1ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,608][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRefreshActuallyWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197400366,
  "executionTime": 272
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,702][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,716][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/YdrmVbqiRv-907A2obUc4g] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,887][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testAsyncFsyncActuallyWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197400638,
  "executionTime": 380
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,024][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,232][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,244][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,245][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [-1] to [100ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,245][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [100ms] to [200ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,263][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRefreshTaskIsUpdated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197401018,
  "executionTime": 263
 }
]

[
 "TEST_STARTED",
 "ID#testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,355][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,373][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRemovedAliasFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197401281,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,425][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testIllegalFsyncInterval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197401422,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,432][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,509][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testUnknownAliasFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197401426,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testFilteringAliases(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,665][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testFilteringAliases]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilteringAliases(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197401530,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,715][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,771][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,813][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,813][WARN ][org.elasticsearch.indices.cluster] [[test][0]] marking and sending shard failed due to [master marked shard as active, but shard has not been created, mark shard as failed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,814][WARN ][org.elasticsearch.cluster.action.shard] [test][0] received shard failed for shard id [[test][0]], allocation id [YAvgQw7fR5Olya_6hg8AkA], primary term [0], message [master marked shard as active, but shard has not been created, mark shard as failed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,865][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,938][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testFsyncTaskIsRunning]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474197401708,
  "executionTime": 306
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,015][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,016][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,016][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,017][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexServiceTests",
  "startTimestamp": 1474197399428,
  "executionTime": 2607
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197402044
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402075,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402078,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402080,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402082,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402153,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402156,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402158,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402160,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474197402162,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldTypeTests",
  "startTimestamp": 1474197402044,
  "executionTime": 122
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "children": [
    {
     "id": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testRandomStrings",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testWhitespacePattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testHugeDocument",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testCustomPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testNonWordPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197402172
 }
]

[
 "TEST_STARTED",
 "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474197402212,
  "executionTime": 1555
 }
]

[
 "TEST_STARTED",
 "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474197403767,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474197403769,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474197403772,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474197403774,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
  "startTimestamp": 1474197402172,
  "executionTime": 1610
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.PolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
   "children": [
    {
     "id": "ID#testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testCoerceHole",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testCoerceShell",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197403792
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474197403895,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474197403897,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474197403899,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474197403956,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474197403968,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.PolygonBuilderTests",
  "startTimestamp": 1474197403792,
  "executionTime": 188
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
   "displayName": "org.elasticsearch.fieldstats.FieldStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.fieldstats.FieldStatsTests",
   "children": [
    {
     "id": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testShort",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge_notAvailable",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testLong",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testByte",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testHalfFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testNumberFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testString",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testInteger",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMetaFieldsNotIndexed",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering_optionalFormat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197404031
 }
]

[
 "TEST_STARTED",
 "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,117][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,151][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,151][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,154][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,157][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,157][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,547][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,547][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,547][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,613][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rsGxCqFkQ0OsHz5KIbmNXw}{KiAKT3s_Q2u5GJG-uzVqFA}{local}{local[21]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,614][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,698][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,753][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:44,900][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:45,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:45,028][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:45,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:45,744][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:45,878][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:45,949][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:46,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:46,058][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:46,136][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:46,887][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:46,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:46,998][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,084][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,214][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,875][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testShort]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197404103,
  "executionTime": 3773
 }
]

[
 "TEST_STARTED",
 "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,881][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge_notAvailable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197407877,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,890][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:47,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:48,005][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:48,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:48,088][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:48,160][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,318][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,400][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,418][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,472][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,494][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:49,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:50,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:50,055][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:50,106][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:50,123][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:50,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:51,248][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197407882,
  "executionTime": 3367
 }
]

[
 "TEST_STARTED",
 "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:51,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:51,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:51,381][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,337][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,755][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,798][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,834][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:52,902][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:53,490][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:53,542][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:53,557][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:53,605][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:53,621][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:53,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,064][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testByte]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197411249,
  "executionTime": 2816
 }
]

[
 "TEST_STARTED",
 "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,073][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,208][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,565][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testHalfFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197414065,
  "executionTime": 528
 }
]

[
 "TEST_STARTED",
 "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,600][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,647][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,661][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/OVxE0EkVSwu9X2EE12tGeg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,701][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:54,802][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/pvYIEpz3TFa7Y1g3KPWigQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:55,748][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testNumberFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197414593,
  "executionTime": 1402
 }
]

[
 "TEST_STARTED",
 "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,004][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,562][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197415996,
  "executionTime": 606
 }
]

[
 "TEST_STARTED",
 "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,610][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,713][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,728][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,826][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:56,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:57,561][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:57,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:57,702][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:57,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:57,828][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:57,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:58,528][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:58,604][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:58,620][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:58,701][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:58,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:58,769][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,387][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197416602,
  "executionTime": 2786
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,412][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,472][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,491][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/xyxhIaG2Rle8rC6-xAJyIA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,523][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,590][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/k_-WwVPFR_KCDOBqZAGOwQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,912][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197419388,
  "executionTime": 573
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:01:59,969][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,090][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197419962,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,122][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,220][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,806][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDouble]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197420115,
  "executionTime": 780
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,898][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197420895,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:00,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,035][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/7WZXRfkxQCyErFgW846RtQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,307][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMetaFieldsNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197420900,
  "executionTime": 458
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,452][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,744][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197421358,
  "executionTime": 419
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,788][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,897][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:01,922][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:02,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:02,686][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering_optionalFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474197421777,
  "executionTime": 966
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:02,743][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:02,744][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:02,744][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:02:02,746][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
  "startTimestamp": 1474197404031,
  "executionTime": 18725
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasChildQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testAvgFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testMinFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testNoneFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testNonDefaultSimilarity",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testSumFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testMaxFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testThatUnrecognizedFromStringThrowsException",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testThatNullFromStringThrowsException",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197422766
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,857][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Li5zMQyATNao6Xbdv-XZUw}{local}{local[276]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,864][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,865][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,889][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,889][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,889][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,890][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,891][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,891][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,893][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,893][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,893][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,896][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,896][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,896][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,898][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,898][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,898][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,907][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,907][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,910][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:02,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [wyThY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422806,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422927,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422932,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422935,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422983,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422988,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197422991,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423043,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423163,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423166,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:03,176][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:17:03,177][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423168,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423177,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423182,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423184,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423187,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423193,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423196,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423201,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474197423206,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasChildQueryBuilderTests",
  "startTimestamp": 1474197422766,
  "executionTime": 465
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.index.IndexRequestTests",
   "displayName": "org.elasticsearch.action.index.IndexRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.index.IndexRequestTests",
   "children": [
    {
     "id": "ID#testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testIndexRequestOpTypeFromString",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testCreateOperationRejectsVersions",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testIndexingRejectsLongIds",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testWaitForActiveShards",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testSetTTLAsLong",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testReadBogusString",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testSetTTLAsString",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testAutoGenIdTimestampIsSet",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testValidateTTL",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testSetTTLAsTimeValue",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423242
 }
]

[
 "TEST_STARTED",
 "ID#testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423304,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423311,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423313,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423318,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423319,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423323,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423325,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423327,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474197423329,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.index.IndexRequestTests",
  "startTimestamp": 1474197423242,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionLookupTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
   "children": [
    {
     "id": "ID#testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "displayName": "testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "methodName": "testTwoDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423354
 }
]

[
 "TEST_STARTED",
 "ID#testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
  "startTimestamp": 1474197423382,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
  "startTimestamp": 1474197423459,
  "executionTime": 67
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionLookupTests",
  "startTimestamp": 1474197423354,
  "executionTime": 174
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestMetadataTests",
   "displayName": "org.elasticsearch.ingest.IngestMetadataTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestMetadataTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)",
     "displayName": "testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.ingest.IngestMetadataTests",
     "children": []
    },
    {
     "id": "ID#testDiff(org.elasticsearch.ingest.IngestMetadataTests)",
     "displayName": "testDiff(org.elasticsearch.ingest.IngestMetadataTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.ingest.IngestMetadataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423535
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)",
  "startTimestamp": 1474197423553,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.ingest.IngestMetadataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.ingest.IngestMetadataTests)",
  "startTimestamp": 1474197423556,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestMetadataTests",
  "startTimestamp": 1474197423535,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    },
    {
     "id": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testBuildWordScorer",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423615
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474197423647,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474197423649,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474197423651,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474197423654,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
  "startTimestamp": 1474197423615,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423670
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,715][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eFnOvhQaQB-xOfz4QjSuGQ}{local}{local[277]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,723][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,723][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,737][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,737][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,737][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,742][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,742][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,742][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,743][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,743][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,743][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,745][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,745][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,745][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,747][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,748][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,748][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,749][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,749][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,749][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,753][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,753][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,753][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,755][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,755][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,755][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,756][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,757][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,757][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,759][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,759][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,759][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,763][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,763][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,763][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,764][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,764][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,767][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,771][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,771][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,771][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,774][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,774][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [oLDnIB] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,775][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:36]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,776][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:75]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:03,776][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:75]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423693,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423777,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423780,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423849,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423853,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423896,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423902,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423905,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423914,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423940,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423943,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474197423946,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoostingQueryBuilderTests",
  "startTimestamp": 1474197423670,
  "executionTime": 283
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
   "displayName": "org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)",
     "displayName": "testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423959
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)",
  "startTimestamp": 1474197424077,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
  "startTimestamp": 1474197423959,
  "executionTime": 127
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
   "displayName": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197424096
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
  "startTimestamp": 1474197424127,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
  "startTimestamp": 1474197424136,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
  "startTimestamp": 1474197424139,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
  "startTimestamp": 1474197424096,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
   "children": [
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testMissingScalingFactor",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testIllegalScalingFactor",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testCoerce",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197424156
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,210][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,238][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,238][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,242][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,244][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,244][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,374][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,374][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,375][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,392][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{4lJzUQZgQeuRY4sa6mrP8Q}{2Lfanx5KS_ejJ27xlwEqBA}{local}{local[22]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,393][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,549][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,584][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,791][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197424199,
  "executionTime": 672
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,961][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197424871,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:04,997][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,052][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,068][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197424992,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,135][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,239][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,271][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197425111,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,307][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,363][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,378][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testMissingScalingFactor]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197425300,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,415][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,539][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197425409,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,637][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,719][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,748][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,814][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [ScaledFloatFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197425624,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,880][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,947][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197425875,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:05,981][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,032][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,043][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testIllegalScalingFactor]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197425975,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,158][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197426070,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,189][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,252][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,265][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testCoerce]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474197426184,
  "executionTime": 111
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,296][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,296][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,296][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,298][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
  "startTimestamp": 1474197424156,
  "executionTime": 2159
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.QueueRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.QueueRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
   "children": [
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426321
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474197426341,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474197426346,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474197426348,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474197426350,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474197426352,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.QueueRecyclerTests",
  "startTimestamp": 1474197426321,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.ActiveShardCountTests",
   "displayName": "org.elasticsearch.action.support.ActiveShardCountTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.ActiveShardCountTests",
   "children": [
    {
     "id": "ID#testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveLevelOne",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveLevelDefault",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveRandom",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testValidate(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveZero",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveValueBased",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testFromIntValue",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveLevelAll",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testParseString(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testParseString(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testParseString",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426363
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426393,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426395,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426397,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426399,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426401,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426403,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426406,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426408,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426410,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseString(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseString(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474197426411,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.ActiveShardCountTests",
  "startTimestamp": 1474197426363,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "children": [
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    },
    {
     "id": "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testBuildFromSimplifiedDef",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426423
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1474197426447,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1474197426450,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
  "startTimestamp": 1474197426423,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "children": [
    {
     "id": "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testNullCategoryIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426462
 }
]

[
 "TEST_STARTED",
 "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1474197426481,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1474197426491,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1474197426493,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
  "startTimestamp": 1474197426462,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.query.QueryPhaseTests",
   "displayName": "org.elasticsearch.search.query.QueryPhaseTests",
   "methodName": null,
   "className": "org.elasticsearch.search.query.QueryPhaseTests",
   "children": [
    {
     "id": "ID#testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testCountWithoutDeletions",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    },
    {
     "id": "ID#testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testPostFilterDisablesCountOptimization",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testMinScoreDisablesCountOptimization",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    },
    {
     "id": "ID#testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testCountWithDeletions",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426514
 }
]

[
 "TEST_STARTED",
 "ID#testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474197426541,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474197426591,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474197426595,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474197426598,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.query.QueryPhaseTests",
  "startTimestamp": 1474197426514,
  "executionTime": 102
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426623
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,645][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{URsNIsCaTX2giCWeXLZi_A}{local}{local[278]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,668][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"avg_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:06,669][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"avg_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
  "startTimestamp": 1474197426666,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
  "startTimestamp": 1474197426669,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
  "startTimestamp": 1474197426672,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
  "startTimestamp": 1474197426623,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientHeadersTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
   "children": [
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testWithSniffing",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426709
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,735][INFO ][org.elasticsearch.plugins] [test-testOverrideHeader] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,735][INFO ][org.elasticsearch.plugins] [test-testOverrideHeader] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,776][INFO ][org.elasticsearch.client.transport] [test-testOverrideHeader] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1474197426724,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,793][INFO ][org.elasticsearch.plugins] [test-testActions] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,793][INFO ][org.elasticsearch.plugins] [test-testActions] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,832][INFO ][org.elasticsearch.client.transport] [test-testActions] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1474197426787,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,844][INFO ][org.elasticsearch.plugins] [test-testWithSniffing] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,844][INFO ][org.elasticsearch.plugins] [test-testWithSniffing] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,864][INFO ][org.elasticsearch.client.transport] [test-testWithSniffing] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,867][INFO ][org.elasticsearch.plugins] [transport_client_testWithSniffing_1] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,867][INFO ][org.elasticsearch.plugins] [transport_client_testWithSniffing_1] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:17:06,888][INFO ][org.elasticsearch.client.transport] [transport_client_testWithSniffing_1] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1474197426838,
  "executionTime": 55
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientHeadersTests",
  "startTimestamp": 1474197426709,
  "executionTime": 189
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkShardRequestTests",
   "displayName": "org.elasticsearch.action.bulk.BulkShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkShardRequestTests",
   "children": [
    {
     "id": "ID#testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)",
     "displayName": "testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.action.bulk.BulkShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426903
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)",
  "startTimestamp": 1474197426917,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkShardRequestTests",
  "startTimestamp": 1474197426903,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.compress.DeflateCompressedXContentTests",
   "displayName": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
   "children": [
    {
     "id": "ID#testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "displayName": "testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
     "children": []
    },
    {
     "id": "ID#testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "displayName": "testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "methodName": "testDifferentCompressedRepresentation",
     "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "displayName": "testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197426925
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
  "startTimestamp": 1474197426940,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
  "startTimestamp": 1474197426942,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
  "startTimestamp": 1474197426944,
  "executionTime": 1693
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.compress.DeflateCompressedXContentTests",
  "startTimestamp": 1474197426925,
  "executionTime": 1714
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
   "displayName": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testWithEmptyArray",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testBadTypes",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testWithNullArray",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428649
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474197428677,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474197428690,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474197428691,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474197428695,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474197428698,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474197428704,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
  "startTimestamp": 1474197428649,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterStateTests",
   "displayName": "org.elasticsearch.cluster.ClusterStateTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterStateTests",
   "children": [
    {
     "id": "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
     "displayName": "testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
     "methodName": "testSupersedes",
     "className": "org.elasticsearch.cluster.ClusterStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428713
 }
]

[
 "TEST_STARTED",
 "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
  "startTimestamp": 1474197428739,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterStateTests",
  "startTimestamp": 1474197428713,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CommonTermsQueryParserTests",
   "displayName": "org.elasticsearch.index.query.CommonTermsQueryParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CommonTermsQueryParserTests",
   "children": [
    {
     "id": "ID#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)",
     "displayName": "testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)",
     "methodName": "testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown",
     "className": "org.elasticsearch.index.query.CommonTermsQueryParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197428754
 }
]

[
 "TEST_STARTED",
 "ID#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,782][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,817][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,817][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,822][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,825][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,825][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,979][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,979][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,979][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,981][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7h0vXLYXSZWmq8LBTkcn2Q}{smFwLZb_Rw6TNMDje4wolw}{local}{local[27]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:08,981][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,005][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,039][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test-type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,085][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,104][INFO ][org.elasticsearch.index.query] [CommonTermsQueryParserTests#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)",
  "startTimestamp": 1474197428773,
  "executionTime": 376
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,149][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,150][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,150][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,152][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CommonTermsQueryParserTests",
  "startTimestamp": 1474197428754,
  "executionTime": 404
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429163
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,182][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ax-qq5HDRzSl7n4c_4ckpw}{local}{local[281]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,202][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"sum_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:17:09,203][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"sum_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
  "startTimestamp": 1474197429200,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
  "startTimestamp": 1474197429203,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
  "startTimestamp": 1474197429205,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
  "startTimestamp": 1474197429163,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.RepositoryDataTests",
   "displayName": "org.elasticsearch.repositories.RepositoryDataTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.RepositoryDataTests",
   "children": [
    {
     "id": "ID#testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testInitIndices",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testResolveIndexId",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testRemoveSnapshot",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testAddSnapshots",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testXContent(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429215
 }
]

[
 "TEST_STARTED",
 "ID#testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474197429230,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474197429232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474197429234,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474197429237,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474197429240,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474197429242,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.RepositoryDataTests",
  "startTimestamp": 1474197429215,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "children": [
    {
     "id": "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "displayName": "testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "methodName": "testDocValue",
     "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429263
 }
]

[
 "TEST_STARTED",
 "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,286][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,311][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,311][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,314][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[6664], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,317][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,317][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,418][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,419][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,419][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,421][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{oWQJdKUpQvuStHo-qE45zA}{v4oALMKKTOC3pN2O14JDVQ}{local}{local[28]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,421][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,432][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,450][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,510][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,572][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [BinaryDVFieldDataTests#testDocValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
  "startTimestamp": 1474197429278,
  "executionTime": 319
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,672][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [BinaryDVFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
  "startTimestamp": 1474197429597,
  "executionTime": 106
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,703][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,704][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,704][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:09,706][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
  "startTimestamp": 1474197429263,
  "executionTime": 451
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsTests",
   "displayName": "org.elasticsearch.common.settings.SettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsTests",
   "children": [
    {
     "id": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testNames(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testNames",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testGetAsSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testPrefixNormalization",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testUnFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoresPrompt",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderByEnvironmentVariables",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemProperty",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testFallbackToFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testThatArraysAreOverriddenCorrectly",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429722
 }
]

[
 "TEST_STARTED",
 "ID#testNames(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429738,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429740,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429742,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429744,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429748,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429753,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429755,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429757,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474197429789,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsTests",
  "startTimestamp": 1474197429722,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
   "children": [
    {
     "id": "ID#testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testFingerprint",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testLimit",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testAsciifolding",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429800
 }
]

[
 "TEST_STARTED",
 "ID#testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474197429815,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474197429825,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474197429828,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474197429830,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
  "startTimestamp": 1474197429800,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.PublishPortTests",
   "displayName": "org.elasticsearch.transport.PublishPortTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.PublishPortTests",
   "children": [
    {
     "id": "ID#testPublishPort(org.elasticsearch.transport.PublishPortTests)",
     "displayName": "testPublishPort(org.elasticsearch.transport.PublishPortTests)",
     "methodName": "testPublishPort",
     "className": "org.elasticsearch.transport.PublishPortTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429838
 }
]

[
 "TEST_STARTED",
 "ID#testPublishPort(org.elasticsearch.transport.PublishPortTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishPort(org.elasticsearch.transport.PublishPortTests)",
  "startTimestamp": 1474197429853,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.PublishPortTests",
  "startTimestamp": 1474197429838,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429866
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
  "startTimestamp": 1474197429880,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateProcessorResultTests",
  "startTimestamp": 1474197429866,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "displayName": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "children": [
    {
     "id": "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
     "displayName": "testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
     "methodName": "testQueryRewriteOnRefresh",
     "className": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197429901
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)"
]

