[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "7496@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1",
   "junit4.childvm.id": "1",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "7496@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J1-20160916_193111_542.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J1-20160916_193111_542.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.haltonfailure": "false",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "229C635BFFC33CB2",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
   "children": [
    {
     "id": "ID#testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testIsForceExecutuonDefaultsFalse",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testOnRejection",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testOnAfterFailure",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testRunSuccess",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testOnAfterSuccess",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    },
    {
     "id": "ID#testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "displayName": "testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
     "methodName": "testRunFailure",
     "className": "org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047072854
 }
]

[
 "TEST_STARTED",
 "ID#testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsForceExecutuonDefaultsFalse(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1474047077923,
  "executionTime": 613
 }
]

[
 "TEST_STARTED",
 "ID#testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnRejection(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1474047078537,
  "executionTime": 1225
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1474047079764,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1474047079869,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterSuccess(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1474047079875,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunFailure(org.elasticsearch.common.util.concurrent.AbstractRunnableTests)",
  "startTimestamp": 1474047079938,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AbstractRunnableTests",
  "startTimestamp": 1474047072854,
  "executionTime": 7208
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ParseFieldTests",
   "displayName": "org.elasticsearch.common.ParseFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ParseFieldTests",
   "children": [
    {
     "id": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testAllDeprecated",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testParse(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    },
    {
     "id": "ID#testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testGetAllNamesIncludedDeprecated",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047080077
 }
]

[
 "TEST_STARTED",
 "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:20,263][WARN ][org.elasticsearch.deprecation.common] Deprecated field [text] used, replaced by [like]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1474047080159,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.common.ParseFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:20,314][WARN ][org.elasticsearch.deprecation.common] Deprecated field [barFoo] used, expected [foo_bar] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:20,314][WARN ][org.elasticsearch.deprecation.common] Deprecated field [bar_foo] used, expected [foo_bar] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:20,314][WARN ][org.elasticsearch.deprecation.common] Deprecated field [Foobar] used, expected [foo_bar] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1474047080305,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAllNamesIncludedDeprecated(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1474047080320,
  "executionTime": 41
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ParseFieldTests",
  "startTimestamp": 1474047080077,
  "executionTime": 291
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
   "displayName": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
   "children": [
    {
     "id": "ID#testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "displayName": "testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "methodName": "testAllFreqs",
     "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
     "children": []
    },
    {
     "id": "ID#testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "displayName": "testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "methodName": "testNonDeletedFreqs",
     "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
     "children": []
    },
    {
     "id": "ID#testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "displayName": "testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
     "methodName": "testFilterFreqs",
     "className": "org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047080396
 }
]

[
 "TEST_STARTED",
 "ID#testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
  "startTimestamp": 1474047080442,
  "executionTime": 3126
 }
]

[
 "TEST_STARTED",
 "ID#testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDeletedFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
  "startTimestamp": 1474047083568,
  "executionTime": 733
 }
]

[
 "TEST_STARTED",
 "ID#testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterFreqs(org.elasticsearch.common.lucene.index.FreqTermsEnumTests)",
  "startTimestamp": 1474047084301,
  "executionTime": 178
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.index.FreqTermsEnumTests",
  "startTimestamp": 1474047080396,
  "executionTime": 4088
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.compress.DeflateCompressedXContentTests",
   "displayName": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
   "children": [
    {
     "id": "ID#testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "displayName": "testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "methodName": "testDifferentCompressedRepresentation",
     "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "displayName": "testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "displayName": "testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.compress.DeflateCompressedXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047084503
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentCompressedRepresentation(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
  "startTimestamp": 1474047084532,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
  "startTimestamp": 1474047084611,
  "executionTime": 2301
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.compress.DeflateCompressedXContentTests)",
  "startTimestamp": 1474047086912,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.compress.DeflateCompressedXContentTests",
  "startTimestamp": 1474047084503,
  "executionTime": 2419
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.process.ProcessProbeTests",
   "displayName": "org.elasticsearch.monitor.process.ProcessProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.process.ProcessProbeTests",
   "children": [
    {
     "id": "ID#testProcessStats(org.elasticsearch.monitor.process.ProcessProbeTests)",
     "displayName": "testProcessStats(org.elasticsearch.monitor.process.ProcessProbeTests)",
     "methodName": "testProcessStats",
     "className": "org.elasticsearch.monitor.process.ProcessProbeTests",
     "children": []
    },
    {
     "id": "ID#testProcessInfo(org.elasticsearch.monitor.process.ProcessProbeTests)",
     "displayName": "testProcessInfo(org.elasticsearch.monitor.process.ProcessProbeTests)",
     "methodName": "testProcessInfo",
     "className": "org.elasticsearch.monitor.process.ProcessProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047086930
 }
]

[
 "TEST_STARTED",
 "ID#testProcessStats(org.elasticsearch.monitor.process.ProcessProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessStats(org.elasticsearch.monitor.process.ProcessProbeTests)",
  "startTimestamp": 1474047087100,
  "executionTime": 651
 }
]

[
 "TEST_STARTED",
 "ID#testProcessInfo(org.elasticsearch.monitor.process.ProcessProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessInfo(org.elasticsearch.monitor.process.ProcessProbeTests)",
  "startTimestamp": 1474047087751,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.process.ProcessProbeTests",
  "startTimestamp": 1474047086930,
  "executionTime": 831
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.ActiveShardCountTests",
   "displayName": "org.elasticsearch.action.support.ActiveShardCountTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.ActiveShardCountTests",
   "children": [
    {
     "id": "ID#testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveZero",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testValidate(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveLevelDefault",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveLevelAll",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveRandom",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testParseString(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testParseString(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testParseString",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveValueBased",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testFromIntValue",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    },
    {
     "id": "ID#testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)",
     "displayName": "testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)",
     "methodName": "testEnoughShardsActiveLevelOne",
     "className": "org.elasticsearch.action.support.ActiveShardCountTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047087796
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveZero(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047087832,
  "executionTime": 998
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088830,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveLevelDefault(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088835,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088845,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveLevelAll(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088851,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveRandom(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088856,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseString(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseString(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088862,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveValueBased(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088866,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromIntValue(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088874,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughShardsActiveLevelOne(org.elasticsearch.action.support.ActiveShardCountTests)",
  "startTimestamp": 1474047088879,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.ActiveShardCountTests",
  "startTimestamp": 1474047087796,
  "executionTime": 1091
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047088924
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047088972,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047089184,
  "executionTime": 580
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047089764,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047089783,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047089790,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047089794,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047089801,
  "executionTime": 875
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047090676,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474047090721,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldTypeTests",
  "startTimestamp": 1474047088924,
  "executionTime": 1804
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ActionModuleTests",
   "displayName": "org.elasticsearch.action.ActionModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ActionModuleTests",
   "children": [
    {
     "id": "ID#testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCanRegisterAction",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCantOverwriteBuiltinRestHandler",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCanRegisterRestHandler",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testSetupRestHandlerContainsKnownBuiltin",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testPluginCantOverwriteBuiltinAction",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "displayName": "testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
     "methodName": "testSetupActionsContainsKnownBuiltin",
     "className": "org.elasticsearch.action.ActionModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047090749
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCanRegisterAction(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474047090834,
  "executionTime": 1070
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCantOverwriteBuiltinRestHandler(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474047091904,
  "executionTime": 245
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCanRegisterRestHandler(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474047092149,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupRestHandlerContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474047092156,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginCantOverwriteBuiltinAction(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474047092159,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupActionsContainsKnownBuiltin(org.elasticsearch.action.ActionModuleTests)",
  "startTimestamp": 1474047092163,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ActionModuleTests",
  "startTimestamp": 1474047090749,
  "executionTime": 1431
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "children": [
    {
     "id": "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
     "displayName": "testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
     "methodName": "testRun",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047092223
 }
]

[
 "TEST_STARTED",
 "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:33,931][INFO ][org.elasticsearch.cluster.routing.allocation] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:32:59,698][INFO ][org.elasticsearch.cluster] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[tweets-2014-12-29:00][3], [tweets-2014-12-29:00][2], [tweets-2014-12-29:00][1], [tweets-2014-12-29:00][4], [tweets-2014-12-29:00][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
  "startTimestamp": 1474047093734,
  "executionTime": 85966
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
  "startTimestamp": 1474047092223,
  "executionTime": 87485
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryShardContextTests",
   "displayName": "org.elasticsearch.index.query.QueryShardContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryShardContextTests",
   "children": [
    {
     "id": "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
     "displayName": "testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
     "methodName": "testFailIfFieldMappingNotFound",
     "className": "org.elasticsearch.index.query.QueryShardContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047179731
 }
]

[
 "TEST_STARTED",
 "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
  "startTimestamp": 1474047179781,
  "executionTime": 425
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryShardContextTests",
  "startTimestamp": 1474047179731,
  "executionTime": 478
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.AllocationIdTests",
   "displayName": "org.elasticsearch.cluster.routing.AllocationIdTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
   "children": [
    {
     "id": "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testCancelRelocation",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testMoveToUnassigned",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testSuccessfulRelocation",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testReinitializing",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testShardToStarted",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047180217
 }
]

[
 "TEST_STARTED",
 "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,241][INFO ][org.elasticsearch.cluster.routing] -- build started shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,244][INFO ][org.elasticsearch.cluster.routing] -- relocate the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,244][INFO ][org.elasticsearch.cluster.routing] -- cancel relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1474047180239,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1474047180245,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,279][INFO ][org.elasticsearch.cluster.routing] -- build started shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,279][INFO ][org.elasticsearch.cluster.routing] -- move to unassigned%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1474047180276,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,283][INFO ][org.elasticsearch.cluster.routing] -- build started shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,283][INFO ][org.elasticsearch.cluster.routing] -- relocate the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,284][INFO ][org.elasticsearch.cluster.routing] -- finalize the relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1474047180280,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,287][INFO ][org.elasticsearch.cluster.routing] -- build started shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,287][INFO ][org.elasticsearch.cluster.routing] -- reinitializing shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1474047180285,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,289][INFO ][org.elasticsearch.cluster.routing] -- create unassigned shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,290][INFO ][org.elasticsearch.cluster.routing] -- initialize the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:00,290][INFO ][org.elasticsearch.cluster.routing] -- start the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1474047180287,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.AllocationIdTests",
  "startTimestamp": 1474047180217,
  "executionTime": 76
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "displayName": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "children": [
    {
     "id": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithoutBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterBecomesAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToFailingMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterNotAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterFailoverAfterStepDown",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testForceLocalOperation",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047180314
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,678][INFO ][org.elasticsearch.cluster.service] new_master {node}{qKCyth32S4S5SiComVzShA}{local}{local[5]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,733][INFO ][org.elasticsearch.cluster.service] master {new {local_node}{hH87of3WQHWHXMmY-9SvWA}{local}{local[6]}, previous {node}{qKCyth32S4S5SiComVzShA}{local}{local[5]}}, removed {{node}{qKCyth32S4S5SiComVzShA}{local}{local[5]},}, added {{remote_node}{AFCe9Li1TtOrczbjV2wFKQ}{local}{local[7]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047180461,
  "executionTime": 412
 }
]

[
 "TEST_STARTED",
 "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,911][INFO ][org.elasticsearch.cluster.service] new_master {node}{GmLq58YkRLqU1T0lHib70w}{local}{local[8]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,913][INFO ][org.elasticsearch.cluster.service] removed {{node}{GmLq58YkRLqU1T0lHib70w}{local}{local[8]},}, added {{remote_node}{An9A5mLnSXCgc3lpmCqEiQ}{local}{local[10]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,931][INFO ][org.elasticsearch.cluster.service] new_master {local_node}{siqsW8y8T0SpIXqFRTHxYg}{local}{local[9]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047180874,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,940][INFO ][org.elasticsearch.cluster.service] new_master {node}{bTpcgxPaRPqRvQdUiVcX6A}{local}{local[11]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:00,943][INFO ][org.elasticsearch.cluster.service] master {new {remote_node}{muheeg4tThKUlsjN0YUJog}{local}{local[13]}, previous {node}{bTpcgxPaRPqRvQdUiVcX6A}{local}{local[11]}}, removed {{node}{bTpcgxPaRPqRvQdUiVcX6A}{local}{local[11]},}, added {{remote_node}{muheeg4tThKUlsjN0YUJog}{local}{local[13]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047180932,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,012][INFO ][org.elasticsearch.cluster.service] new_master {node}{gLgjU-s4TmKCtDAdlBkywA}{local}{local[14]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,014][INFO ][org.elasticsearch.cluster.service] master {new {local_node}{3i92quHeSMGPE1wdm_a16g}{local}{local[15]}, previous {node}{gLgjU-s4TmKCtDAdlBkywA}{local}{local[14]}}, removed {{node}{gLgjU-s4TmKCtDAdlBkywA}{local}{local[14]},}, added {{remote_node}{SUVD76i3RXS8PNjXhcKAeA}{local}{local[16]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047180982,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,027][INFO ][org.elasticsearch.cluster.service] new_master {node}{2xhHI6znRxiXW_OO4tDOVw}{local}{local[17]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,029][INFO ][org.elasticsearch.cluster.service] removed {{node}{2xhHI6znRxiXW_OO4tDOVw}{local}{local[17]},}, added {{remote_node}{xIQQP5NUR8SPfaQsbbLDOA}{local}{local[19]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047181017,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,040][INFO ][org.elasticsearch.cluster.service] new_master {node}{QDbGXIkgSIud7lU4NQxK1A}{local}{local[20]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,042][INFO ][org.elasticsearch.cluster.service] master {new {local_node}{zzHZDNOdTgGR6IfYGH0jQQ}{local}{local[21]}, previous {node}{QDbGXIkgSIud7lU4NQxK1A}{local}{local[20]}}, removed {{node}{QDbGXIkgSIud7lU4NQxK1A}{local}{local[20]},}, added {{remote_node}{kuWtPdD0QGSDL4iSvtp_cg}{local}{local[22]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,047][INFO ][org.elasticsearch.cluster.service] detected_master {remote_node}{kuWtPdD0QGSDL4iSvtp_cg}{local}{local[22]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047181032,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,233][INFO ][org.elasticsearch.cluster.service] new_master {node}{ZHG08Op7QX2BkpVKLaR02Q}{local}{local[23]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,235][INFO ][org.elasticsearch.cluster.service] removed {{node}{ZHG08Op7QX2BkpVKLaR02Q}{local}{local[23]},}, added {{remote_node}{gqDB4LCnRJiI1aoANaHuXw}{local}{local[25]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047181049,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,366][INFO ][org.elasticsearch.cluster.service] new_master {node}{iqnUPmKtTD-tC3Gap5m2UA}{local}{local[26]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:01,368][INFO ][org.elasticsearch.cluster.service] master {new {remote_node}{Tgn-FbIfTyqz0arDt64eCA}{local}{local[28]}, previous {node}{iqnUPmKtTD-tC3Gap5m2UA}{local}{local[26]}}, removed {{node}{iqnUPmKtTD-tC3Gap5m2UA}{local}{local[26]},}, added {{remote_node}{Tgn-FbIfTyqz0arDt64eCA}{local}{local[28]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474047181258,
  "executionTime": 112
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
  "startTimestamp": 1474047180314,
  "executionTime": 1061
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoJSONShapeParserTests",
   "displayName": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
   "children": [
    {
     "id": "ID#testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_envelope(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_envelope(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_envelope",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_OGCPolygonWithoutHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_OGCPolygonWithoutHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_OGCPolygonWithoutHoles",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_selfCrossingPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_selfCrossingPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_selfCrossingPolygon",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_multiDimensionShapes(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_multiDimensionShapes(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_multiDimensionShapes",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_simplePoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_simplePoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_simplePoint",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_multiLineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_multiLineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_multiLineString",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_polygonNoHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_polygonNoHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_polygonNoHoles",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_orientationOption(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_orientationOption(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_orientationOption",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_polygonWithHole(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_polygonWithHole(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_polygonWithHole",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_invalidPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_invalidPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_invalidPolygon",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_invalidPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_invalidPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_invalidPoint",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_lineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_lineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_lineString",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_geometryCollection(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_geometryCollection(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_geometryCollection",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_OGCPolygonWithHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_OGCPolygonWithHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_OGCPolygonWithHoles",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_multiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_multiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_multiPolygon",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_invalidMultiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_invalidMultiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_invalidMultiPolygon",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_circle(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_circle(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_circle",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_invalidMultipoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_invalidMultipoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_invalidMultipoint",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    },
    {
     "id": "ID#testParse_multiPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "displayName": "testParse_multiPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
     "methodName": "testParse_multiPoint",
     "className": "org.elasticsearch.common.geo.GeoJSONShapeParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047181547
 }
]

[
 "TEST_STARTED",
 "ID#testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatParserExtractsCorrectTypeAndCoordinatesFromArbitraryJson(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047181860,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testParse_envelope(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_envelope(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182061,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testParse_OGCPolygonWithoutHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_OGCPolygonWithoutHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182092,
  "executionTime": 289
 }
]

[
 "TEST_STARTED",
 "ID#testParse_selfCrossingPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_selfCrossingPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182382,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testParse_multiDimensionShapes(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_multiDimensionShapes(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182394,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParse_simplePoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_simplePoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182400,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParse_multiLineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_multiLineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182403,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParse_polygonNoHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_polygonNoHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182407,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParse_orientationOption(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_orientationOption(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182411,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testParse_polygonWithHole(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_polygonWithHole(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182433,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParse_invalidPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_invalidPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182442,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParse_invalidPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_invalidPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182447,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParse_lineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_lineString(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182449,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParse_geometryCollection(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_geometryCollection(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182452,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParse_OGCPolygonWithHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_OGCPolygonWithHoles(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182458,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testParse_multiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_multiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182469,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParse_invalidMultiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_invalidMultiPolygon(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182478,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParse_circle(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_circle(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182481,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParse_invalidMultipoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_invalidMultipoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182485,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParse_multiPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse_multiPoint(org.elasticsearch.common.geo.GeoJSONShapeParserTests)",
  "startTimestamp": 1474047182487,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoJSONShapeParserTests",
  "startTimestamp": 1474047181547,
  "executionTime": 946
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "children": [
    {
     "id": "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testReduce",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testScoreMutual",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testAssertions",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testBasicScoreProperties",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testGNDCornerCases",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testBuilderAndParser",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047182570
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047182593,
  "executionTime": 2022
 }
]

[
 "TEST_STARTED",
 "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047184615,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047184642,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047184647,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047184650,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047184655,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1474047184657,
  "executionTime": 71
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
  "startTimestamp": 1474047182570,
  "executionTime": 2161
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesModuleTests",
   "displayName": "org.elasticsearch.indices.IndicesModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesModuleTests",
   "children": [
    {
     "id": "ID#testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateBuiltinMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testFieldNamesIsLast",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testFieldNamesIsLastWithPlugins",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateBuiltinMetadataMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testBuiltinMappers",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testBuiltinWithPlugins",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateOtherPluginMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateOtherPluginMetadataMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "displayName": "testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)",
     "methodName": "testDuplicateFieldNamesMapper",
     "className": "org.elasticsearch.indices.IndicesModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047184740
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateBuiltinMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047184787,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNamesIsLast(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047184939,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNamesIsLastWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185024,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateBuiltinMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185028,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltinMappers(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185034,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltinWithPlugins(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185036,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateOtherPluginMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185039,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateOtherPluginMetadataMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185045,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateFieldNamesMapper(org.elasticsearch.indices.IndicesModuleTests)",
  "startTimestamp": 1474047185048,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesModuleTests",
  "startTimestamp": 1474047184740,
  "executionTime": 317
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.transport.BoundTransportAddressTests",
   "displayName": "org.elasticsearch.common.transport.BoundTransportAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "displayName": "testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
     "children": []
    },
    {
     "id": "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "displayName": "testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "methodName": "testBadBoundAddressArray",
     "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047185066
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
  "startTimestamp": 1474047185101,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
  "startTimestamp": 1474047185109,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.transport.BoundTransportAddressTests",
  "startTimestamp": 1474047185066,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
   "children": [
    {
     "id": "ID#testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testEmptyTaskListProducesSameClusterState",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testDuplicateFailuresAreOkay",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testTriviallySuccessfulTasksBatchedWithFailingTasks",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testNonExistentShardsAreMarkedAsSuccessful",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testIllegalShardFailureRequests",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047185134
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047185185,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047185198,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 03:03:05,343 TEST-ShardFailedClusterStateTaskExecutorTests.testTriviallySuccessfulTasksBatchedWithFailingTasks-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedClusterStateTaskExecutor.execute(ShardStateAction.java:320)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests.testTriviallySuccessfulTasksBatchedWithFailingTasks(ShardFailedClusterStateTaskExecutorTests.java:127)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047185270,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047185362,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047185386,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
  "startTimestamp": 1474047185134,
  "executionTime": 268
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
   "children": [
    {
     "id": "ID#testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testIllegalScalingFactor",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testMissingScalingFactor",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "displayName": "testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
     "methodName": "testCoerce",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047185438
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:05,584][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:05,759][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:05,760][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:05,768][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:05,866][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:05,867][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:11,858][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:11,859][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:11,870][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:11,959][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{mSjHuZPuQhShl1tlBAPrUQ}{YUmlFyakTiSUM0LGirt-Xg}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:11,974][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:12,144][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:12,331][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:12,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:12,740][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testIllegalScalingFactor]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047185498,
  "executionTime": 7288
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:12,795][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:12,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,051][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047192786,
  "executionTime": 305
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,103][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,191][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,214][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047193092,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,269][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,425][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047193248,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,491][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,584][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,616][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testMissingScalingFactor]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingScalingFactor(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047193476,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,663][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,793][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047193654,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,860][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:13,982][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047193832,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,068][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,151][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,166][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047194059,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,214][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,296][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,331][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,404][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,425][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [ScaledFloatFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047194206,
  "executionTime": 271
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,486][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,555][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,593][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047194477,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,656][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,726][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,747][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ScaledFloatFieldMapperTests#testCoerce]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerce(org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests)",
  "startTimestamp": 1474047194648,
  "executionTime": 135
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,783][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,786][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,787][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:14,803][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldMapperTests",
  "startTimestamp": 1474047185438,
  "executionTime": 9510
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047194956
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)",
  "startTimestamp": 1474047195023,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
  "startTimestamp": 1474047194956,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.NestedQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.NestedQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047195060
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,152][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ysjQoVoDRImqJ6S1qbofAg}{local}{local[64]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,162][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,162][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,273][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,287][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,287][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,312][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,312][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,312][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,323][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,332][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,345][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,345][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,345][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,352][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,352][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,353][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,355][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,355][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,356][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,365][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,365][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,365][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,375][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,376][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,376][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,378][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,378][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,378][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,385][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:03:15,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [kY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047195119,
  "executionTime": 791
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047195911,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047195979,
  "executionTime": 429
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196408,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196415,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196442,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196459,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196475,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196488,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047196501,
  "executionTime": 711
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1474047197212,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.NestedQueryBuilderTests",
  "startTimestamp": 1474047195060,
  "executionTime": 3766
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "displayName": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "children": [
    {
     "id": "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAddDefaultRouting",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAliasAndAliasesThrowsError",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseIndexAndIndicesThrowsError",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAdd",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseRemoveIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testEmptyAlias",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseRemove",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testBadOptionsInNonIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047198951
 }
]

[
 "TEST_STARTED",
 "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199005,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199034,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199039,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199041,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199049,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199055,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199058,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199079,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199086,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199090,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1474047199093,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
  "startTimestamp": 1474047198951,
  "executionTime": 147
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047199108
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
  "startTimestamp": 1474047199191,
  "executionTime": 59
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateProcessorResultTests",
  "startTimestamp": 1474047199108,
  "executionTime": 145
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ClassPermissionTests",
   "displayName": "org.elasticsearch.script.ClassPermissionTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ClassPermissionTests",
   "children": [
    {
     "id": "ID#testWildcards(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testWildcards(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testWildcards",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    },
    {
     "id": "ID#testPermissionCollectionWildcards(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testPermissionCollectionWildcards(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testPermissionCollectionWildcards",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    },
    {
     "id": "ID#testStandard(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testStandard(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testStandard",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testEquals(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    },
    {
     "id": "ID#testImplies(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testImplies(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testImplies",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    },
    {
     "id": "ID#testPermissionCollectionStandard(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testPermissionCollectionStandard(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testPermissionCollectionStandard",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    },
    {
     "id": "ID#testPermissionCollection(org.elasticsearch.script.ClassPermissionTests)",
     "displayName": "testPermissionCollection(org.elasticsearch.script.ClassPermissionTests)",
     "methodName": "testPermissionCollection",
     "className": "org.elasticsearch.script.ClassPermissionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047199335
 }
]

[
 "TEST_STARTED",
 "ID#testWildcards(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcards(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199448,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPermissionCollectionWildcards(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPermissionCollectionWildcards(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199456,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStandard(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStandard(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199458,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199461,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testImplies(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImplies(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199469,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPermissionCollectionStandard(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPermissionCollectionStandard(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199471,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPermissionCollection(org.elasticsearch.script.ClassPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPermissionCollection(org.elasticsearch.script.ClassPermissionTests)",
  "startTimestamp": 1474047199475,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ClassPermissionTests",
  "startTimestamp": 1474047199335,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.codecs.CodecTests",
   "displayName": "org.elasticsearch.codecs.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.codecs.CodecTests",
   "children": [
    {
     "id": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptPostingsFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    },
    {
     "id": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptDocValuesFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047199491
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,562][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,633][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,633][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,640][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,642][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,643][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,923][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,923][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,924][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,934][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{3Wbk-ebxSBGLKLwrO4LmVQ}{rVvUQKlBSoOPeTkShuAK-g}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:19,935][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,045][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,296][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,444][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,463][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,579][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,605][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,716][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,793][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,896][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:20,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,078][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,188][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,213][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,336][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,428][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,449][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,521][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,543][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,611][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,674][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,741][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,763][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,835][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,857][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:21,960][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,024][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,047][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,152][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,218][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,263][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,375][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,458][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,480][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-20] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-20][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,585][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-21] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,650][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-21][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:22,681][INFO ][org.elasticsearch.codecs ] [CodecTests#testAcceptPostingsFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1474047199548,
  "executionTime": 5037
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:24,616][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:24,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:24,875][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,040][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,064][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,145][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,175][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,234][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,253][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,372][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,465][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,683][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,756][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:25,790][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,205][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,275][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,304][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,384][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,490][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,509][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,618][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,672][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,767][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,887][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:26,923][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,001][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,023][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,093][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,114][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,208][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,355][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,382][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-20] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,463][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-20][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-21] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,556][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-21][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:27,582][INFO ][org.elasticsearch.codecs ] [CodecTests#testAcceptDocValuesFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1474047204585,
  "executionTime": 4027
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:28,612][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:28,613][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:28,614][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:33:28,615][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.codecs.CodecTests",
  "startTimestamp": 1474047199491,
  "executionTime": 9141
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
   "displayName": "org.elasticsearch.common.util.CancellableThreadsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CancellableThreadsTests",
   "children": [
    {
     "id": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "displayName": "testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "methodName": "testCancellableThreads",
     "className": "org.elasticsearch.common.util.CancellableThreadsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208645
 }
]

[
 "TEST_STARTED",
 "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
  "startTimestamp": 1474047208717,
  "executionTime": 68
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
  "startTimestamp": 1474047208645,
  "executionTime": 144
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.InternalSearchHitTests",
   "displayName": "org.elasticsearch.search.internal.InternalSearchHitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.InternalSearchHitTests",
   "children": [
    {
     "id": "ID#testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)",
     "displayName": "testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)",
     "methodName": "testSerializeShardTarget",
     "className": "org.elasticsearch.search.internal.InternalSearchHitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208795
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeShardTarget(org.elasticsearch.search.internal.InternalSearchHitTests)",
  "startTimestamp": 1474047208906,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.InternalSearchHitTests",
  "startTimestamp": 1474047208795,
  "executionTime": 159
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.PublishPortTests",
   "displayName": "org.elasticsearch.transport.PublishPortTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.PublishPortTests",
   "children": [
    {
     "id": "ID#testPublishPort(org.elasticsearch.transport.PublishPortTests)",
     "displayName": "testPublishPort(org.elasticsearch.transport.PublishPortTests)",
     "methodName": "testPublishPort",
     "className": "org.elasticsearch.transport.PublishPortTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208961
 }
]

[
 "TEST_STARTED",
 "ID#testPublishPort(org.elasticsearch.transport.PublishPortTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishPort(org.elasticsearch.transport.PublishPortTests)",
  "startTimestamp": 1474047209046,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.PublishPortTests",
  "startTimestamp": 1474047208961,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
   "displayName": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
   "children": [
    {
     "id": "ID#testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testBadTypes",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testWithNullArray",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "displayName": "testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
     "methodName": "testWithEmptyArray",
     "className": "org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047209076
 }
]

[
 "TEST_STARTED",
 "ID#testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadTypes(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474047209251,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474047209255,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474047209263,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithNullArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474047209267,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474047209269,
  "executionTime": 206
 }
]

[
 "TEST_STARTED",
 "ID#testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithEmptyArray(org.elasticsearch.search.searchafter.SearchAfterBuilderTests)",
  "startTimestamp": 1474047209475,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.searchafter.SearchAfterBuilderTests",
  "startTimestamp": 1474047209076,
  "executionTime": 403
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.BigArraysTests",
   "displayName": "org.elasticsearch.common.util.BigArraysTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.BigArraysTests",
   "children": [
    {
     "id": "ID#testDoubleArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testDoubleArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testDoubleArrayGrowth",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testByteArrayBulkGet(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testByteArrayBulkGet(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testByteArrayBulkGet",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testObjectArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testObjectArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testObjectArrayGrowth",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testByteArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testByteArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testByteArrayGrowth",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testMaxSizeExceededOnNew(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testMaxSizeExceededOnNew(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testMaxSizeExceededOnNew",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testByteArrayHashCode(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testByteArrayHashCode(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testByteArrayHashCode",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testFloatArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testFloatArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testFloatArrayFill",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testDoubleArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testDoubleArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testDoubleArrayFill",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testIntArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testIntArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testIntArrayGrowth",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testByteArrayEquals(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testByteArrayEquals(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testByteArrayEquals",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testByteArrayBulkSet(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testByteArrayBulkSet(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testByteArrayBulkSet",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testFloatArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testFloatArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testFloatArrayGrowth",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testLongArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testLongArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testLongArrayFill",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testMaxSizeExceededOnResize(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testMaxSizeExceededOnResize(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testMaxSizeExceededOnResize",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testLongArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testLongArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testLongArrayGrowth",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    },
    {
     "id": "ID#testByteArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "displayName": "testByteArrayFill(org.elasticsearch.common.util.BigArraysTests)",
     "methodName": "testByteArrayFill",
     "className": "org.elasticsearch.common.util.BigArraysTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047209487
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleArrayGrowth(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:29,624][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:29,688][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:29,688][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:29,691][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:29,695][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:29,695][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,003][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,003][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,004][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,008][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{W7aK6YmtQP6oTDbxtffinQ}{5KuO5I_9SO6gAsyBCEfl9A}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,039][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,088][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:30,284][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testDoubleArrayGrowth]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047209613,
  "executionTime": 673
 }
]

[
 "TEST_STARTED",
 "ID#testByteArrayBulkGet(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,529][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testByteArrayBulkGet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteArrayBulkGet(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047210286,
  "executionTime": 1244
 }
]

[
 "TEST_STARTED",
 "ID#testObjectArrayGrowth(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,923][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testObjectArrayGrowth]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047211530,
  "executionTime": 394
 }
]

[
 "TEST_STARTED",
 "ID#testByteArrayGrowth(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,436][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testByteArrayGrowth]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047211925,
  "executionTime": 1513
 }
]

[
 "TEST_STARTED",
 "ID#testMaxSizeExceededOnNew(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,444][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 1818624 [1.7mb] for data of [<reused_arrays>] would be larger than configured breaker: 1811318 [1.7mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,451][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 7258112 [6.9mb] for data of [<reused_arrays>] would be larger than configured breaker: 1811318 [1.7mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,456][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 14499840 [13.8mb] for data of [<reused_arrays>] would be larger than configured breaker: 1811318 [1.7mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,461][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 7258112 [6.9mb] for data of [<reused_arrays>] would be larger than configured breaker: 1811318 [1.7mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,467][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 7249920 [6.9mb] for data of [<reused_arrays>] would be larger than configured breaker: 1811318 [1.7mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,472][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 7258112 [6.9mb] for data of [<reused_arrays>] would be larger than configured breaker: 1811318 [1.7mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,472][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testMaxSizeExceededOnNew]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxSizeExceededOnNew(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213438,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testByteArrayHashCode(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,586][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testByteArrayHashCode]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteArrayHashCode(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213474,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testFloatArrayFill(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,618][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testFloatArrayFill]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloatArrayFill(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213587,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleArrayFill(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,626][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testDoubleArrayFill]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleArrayFill(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213621,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIntArrayGrowth(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,874][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testIntArrayGrowth]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213627,
  "executionTime": 248
 }
]

[
 "TEST_STARTED",
 "ID#testByteArrayEquals(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,879][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testByteArrayEquals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteArrayEquals(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213876,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testByteArrayBulkSet(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,958][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testByteArrayBulkSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteArrayBulkSet(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213880,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testFloatArrayGrowth(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,058][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testFloatArrayGrowth]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloatArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047213960,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testLongArrayFill(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,099][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testLongArrayFill]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongArrayFill(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047214059,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testMaxSizeExceededOnResize(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,108][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 1835008 [1.7mb] for data of [<reused_arrays>] would be larger than configured breaker: 958647 [936.1kb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,111][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 786432 [768kb] for data of [<reused_arrays>] would be larger than configured breaker: 628171 [613.4kb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,116][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 6291456 [6mb] for data of [<reused_arrays>] would be larger than configured breaker: 3382408 [3.2mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,121][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 1572864 [1.5mb] for data of [<reused_arrays>] would be larger than configured breaker: 838820 [819.1kb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,127][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 262144 [256kb] for data of [<reused_arrays>] would be larger than configured breaker: 231881 [226.4kb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,133][WARN ][org.elasticsearch.indices.breaker.request] [request] New used memory 2097152 [2mb] for data of [<reused_arrays>] would be larger than configured breaker: 1100665 [1mb], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,133][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testMaxSizeExceededOnResize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxSizeExceededOnResize(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047214101,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testLongArrayGrowth(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,254][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testLongArrayGrowth]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongArrayGrowth(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047214137,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testByteArrayFill(org.elasticsearch.common.util.BigArraysTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,286][INFO ][org.elasticsearch.common.util] [node_s_0] [BigArraysTests#testByteArrayFill]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteArrayFill(org.elasticsearch.common.util.BigArraysTests)",
  "startTimestamp": 1474047214255,
  "executionTime": 32
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,288][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,288][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,288][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:34,290][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.BigArraysTests",
  "startTimestamp": 1474047209487,
  "executionTime": 4807
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ParentFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047214300
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1474047214316,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1474047214318,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1474047214321,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1474047214323,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1474047214326,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ParentFieldTypeTests",
  "startTimestamp": 1474047214300,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NumberFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
   "children": [
    {
     "id": "ID#testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testConversions",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testHalfFloatRange",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.NumberFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047214339
 }
]

[
 "TEST_STARTED",
 "ID#testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConversions(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214357,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214363,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214366,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214368,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214370,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214373,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214375,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214377,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHalfFloatRange(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047214379,
  "executionTime": 2054
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.NumberFieldTypeTests)",
  "startTimestamp": 1474047216434,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NumberFieldTypeTests",
  "startTimestamp": 1474047214339,
  "executionTime": 2101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216455
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216491,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216506,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216510,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216515,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216518,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216520,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216524,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216526,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216528,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216532,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216535,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216537,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216540,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216542,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216545,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216551,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216560,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216562,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216565,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216567,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216570,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216573,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216576,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216578,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216581,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216584,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216587,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216589,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216592,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216594,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216596,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1474047216599,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
  "startTimestamp": 1474047216455,
  "executionTime": 149
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.FileWatcherTests",
   "displayName": "org.elasticsearch.watcher.FileWatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.FileWatcherTests",
   "children": [
    {
     "id": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleFileOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoFileOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testEmptyDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testFileReplacingDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoDirectoryOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNestedDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216645
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216736,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216748,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216753,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216796,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216806,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216822,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1474047216831,
  "executionTime": 40
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.FileWatcherTests",
  "startTimestamp": 1474047216645,
  "executionTime": 241
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216895
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:36,926][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{LvSmWiydSp6k7cdeT8a87w}{local}{local[65]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
  "startTimestamp": 1474047216942,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
  "startTimestamp": 1474047216951,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:36,955][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"sum_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:36,956][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"sum_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests)",
  "startTimestamp": 1474047216953,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.SumBucketTests",
  "startTimestamp": 1474047216895,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterStateTests",
   "displayName": "org.elasticsearch.cluster.ClusterStateTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterStateTests",
   "children": [
    {
     "id": "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
     "displayName": "testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
     "methodName": "testSupersedes",
     "className": "org.elasticsearch.cluster.ClusterStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216965
 }
]

[
 "TEST_STARTED",
 "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSupersedes(org.elasticsearch.cluster.ClusterStateTests)",
  "startTimestamp": 1474047217111,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterStateTests",
  "startTimestamp": 1474047216965,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskIdTests",
   "displayName": "org.elasticsearch.tasks.TaskIdTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskIdTests",
   "children": [
    {
     "id": "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
     "displayName": "testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
     "methodName": "testSerializationOfEmpty",
     "className": "org.elasticsearch.tasks.TaskIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)",
     "displayName": "testSerialization(org.elasticsearch.tasks.TaskIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.tasks.TaskIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047217121
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationOfEmpty(org.elasticsearch.tasks.TaskIdTests)",
  "startTimestamp": 1474047217162,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.tasks.TaskIdTests)",
  "startTimestamp": 1474047217164,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskIdTests",
  "startTimestamp": 1474047217121,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
   "children": [
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047217175
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
  "startTimestamp": 1474047217207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
  "startTimestamp": 1474047217210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
  "startTimestamp": 1474047217212,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
  "startTimestamp": 1474047217214,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.ConcurrentRecyclerTests)",
  "startTimestamp": 1474047217216,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.ConcurrentRecyclerTests",
  "startTimestamp": 1474047217175,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047217226
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474047217242,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474047217244,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474047217248,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474047217250,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474047217252,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldTypeTests",
  "startTimestamp": 1474047217226,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
   "displayName": "org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
   "children": [
    {
     "id": "ID#testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)",
     "displayName": "testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)",
     "methodName": "testFieldsParsing",
     "className": "org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047217277
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)",
  "startTimestamp": 1474047217295,
  "executionTime": 54
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
  "startTimestamp": 1474047217277,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "displayName": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "children": [
    {
     "id": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "displayName": "testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "methodName": "testDoubleIndexingSameDoc",
     "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047217357
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,381][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,403][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,403][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,407][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,415][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,415][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,645][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,645][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,646][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,649][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{m7J-PhEwROmgwbYWL2K6Ow}{44n7HTMFT5-Mz0Fc0c1Dgw}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,650][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,675][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,694][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,762][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,793][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/dpTw0CcoSCiBeWVCMRpL3w] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:37,835][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/dpTw0CcoSCiBeWVCMRpL3w] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:38,360][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DoubleIndexingDocTests#testDoubleIndexingSameDoc]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
  "startTimestamp": 1474047217372,
  "executionTime": 1027
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:38,400][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:38,415][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:38,415][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:38,418][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
  "startTimestamp": 1474047217357,
  "executionTime": 1072
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.InetAddressesTests",
   "displayName": "org.elasticsearch.common.network.InetAddressesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.InetAddressesTests",
   "children": [
    {
     "id": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testConvertDottedQuadToHex",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "test3ff31",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv4Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6EightColons",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringBogusInput",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047218436
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218467,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218473,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218475,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218479,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218481,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218483,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218485,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218488,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218512,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474047218513,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.InetAddressesTests",
  "startTimestamp": 1474047218436,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047218551
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,694][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0-eGuflpT6WL3HnRe_xh8Q}{local}{local[68]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,707][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,708][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,758][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,758][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,758][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,772][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,777][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,777][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,784][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,784][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,784][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [xgA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,791][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,792][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,793][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,793][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,794][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,794][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,795][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,799][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,800][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,807][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,807][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,808][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,808][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,811][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,812][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,815][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,815][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,819][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,819][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,820][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,821][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,823][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,824][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,825][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,825][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,826][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,826][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,826][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,827][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,827][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,828][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,829][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,829][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,833][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,833][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,835][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,836][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,844][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,844][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,847][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047218677,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,851][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047218848,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,854][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047218851,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,869][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,871][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,872][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,873][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,874][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,875][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,876][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,876][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,878][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,882][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,883][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:38,884][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,207][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,210][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,214][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,216][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,219][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,223][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,224][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,225][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047218867,
  "executionTime": 369
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,245][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047219242,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,249][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,249][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,251][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,252][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047219246,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,255][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,259][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,259][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,260][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,261][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,261][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,262][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,262][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,264][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,265][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,265][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,266][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,266][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,267][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,338][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,340][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,341][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,341][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,342][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,342][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047219253,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,346][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,348][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,352][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,354][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,354][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,355][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,355][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,356][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,356][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,358][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,359][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,360][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,360][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,360][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,361][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,362][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,362][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,363][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,363][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,364][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047219344,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,367][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047219364,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:39,369][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1474047219367,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IndicesQueryBuilderTests",
  "startTimestamp": 1474047218551,
  "executionTime": 826
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldLevelBoostTests",
   "displayName": "org.elasticsearch.index.mapper.FieldLevelBoostTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldLevelBoostTests",
   "children": [
    {
     "id": "ID#testBackCompatFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
     "displayName": "testBackCompatFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
     "methodName": "testBackCompatFieldLevelBoost",
     "className": "org.elasticsearch.index.mapper.FieldLevelBoostTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatInvalidFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
     "displayName": "testBackCompatInvalidFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
     "methodName": "testBackCompatInvalidFieldLevelBoost",
     "className": "org.elasticsearch.index.mapper.FieldLevelBoostTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatFieldLevelMappingBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
     "displayName": "testBackCompatFieldLevelMappingBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
     "methodName": "testBackCompatFieldLevelMappingBoost",
     "className": "org.elasticsearch.index.mapper.FieldLevelBoostTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047219386
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,438][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,487][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,487][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,491][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,493][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,494][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,632][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,632][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,633][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,634][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{cYRkmQZBRjmE2-fCug7tVA}{Y4rKE5uuQxSGBASyCugdfQ}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,635][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,653][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,685][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,769][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,784][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,793][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,793][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,793][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,801][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,805][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,814][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,845][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldLevelBoostTests#testBackCompatFieldLevelBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
  "startTimestamp": 1474047219428,
  "executionTime": 447
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatInvalidFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,883][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,940][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,953][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,954][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,954][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,954][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,954][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,954][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,954][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:39,957][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldLevelBoostTests#testBackCompatInvalidFieldLevelBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatInvalidFieldLevelBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
  "startTimestamp": 1474047219875,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatFieldLevelMappingBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,008][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,120][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,195][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [FieldLevelBoostTests#testBackCompatFieldLevelMappingBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatFieldLevelMappingBoost(org.elasticsearch.index.mapper.FieldLevelBoostTests)",
  "startTimestamp": 1474047220000,
  "executionTime": 240
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,241][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,241][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,242][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:40,243][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldLevelBoostTests",
  "startTimestamp": 1474047219386,
  "executionTime": 869
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingTests",
   "displayName": "org.elasticsearch.common.settings.SettingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingTests",
   "children": [
    {
     "id": "ID#testGet(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testGet(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testComplexType(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testComplexType(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testComplexType",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testSimpleUpdate",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testDynamicKeySetting",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testListSettingAcceptsNumberSyntax",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testAdfixKeySetting",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testGroups(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testGroups(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testGroups",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testMinMaxInt(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testMinMaxInt(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testMinMaxInt",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testByteSize(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testByteSize(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testByteSize",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testDefault(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testUpdaterIsIsolated",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testListSettings(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testListSettings(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testListSettings",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testUpdateNotDynamic",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testType(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testType(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testType",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testMutuallyExclusiveScopes",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testRejectNullProperties",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testComposite(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testComposite(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testComposite",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047220267
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220291,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testComplexType(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,296][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [] to [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,299][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [2] to []%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexType(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220293,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,301][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220299,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220304,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220307,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGroups(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,312][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.] from [{}] to [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"},\"3\":{\"value\":\"3\"}}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,313][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.] from [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"},\"3\":{\"value\":\"3\"}}] to [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"}}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,313][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.] from [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"}}] to [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"4\"}}]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGroups(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220310,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMinMaxInt(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinMaxInt(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220315,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testByteSize(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,319][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [a.byte.size] from [2048b] to [12b]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteSize(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220317,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220320,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,324][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220322,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListSettings(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,328][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"foo,bar\"]] to [[\"test\",\"test1, test2\",\"test\",\",,,,\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,329][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"test\",\"test1, test2\",\"test\",\",,,,\"]] to [[\"123\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,329][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"123\"]] to [[\"1\",\"2\",\"3\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:40,329][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"1\",\"2\",\"3\"]] to [[\"foo,bar\"]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSettings(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220325,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220331,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testType(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testType(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220334,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220336,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220338,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testComposite(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComposite(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474047220340,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingTests",
  "startTimestamp": 1474047220267,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047220358
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,415][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MC-RqAPJSoCsq5qiD-E32g}{local}{local[69]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,423][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,423][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,447][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,449][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,450][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,452][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,452][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,452][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,461][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,462][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,462][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,465][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,465][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,465][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,471][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,471][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,471][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,475][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,475][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,475][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,482][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,482][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,482][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,486][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,493][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,493][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,493][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,502][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,503][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,503][WARN ][org.elasticsearch.deprecation.index.mapper]  [W] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220392,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220520,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220524,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,540][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:36]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,540][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:75]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:40,541][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:75]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220538,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220544,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220600,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220603,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220661,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220711,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220716,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220728,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1474047220731,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoostingQueryBuilderTests",
  "startTimestamp": 1474047220358,
  "executionTime": 396
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "displayName": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "children": [
    {
     "id": "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testAddingAClosedReader",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    },
    {
     "id": "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testMissingShard",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047220760
 }
]

[
 "TEST_STARTED",
 "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1474047220841,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1474047220941,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1474047220957,
  "executionTime": 176
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
  "startTimestamp": 1474047220760,
  "executionTime": 375
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.RepositoryDataTests",
   "displayName": "org.elasticsearch.repositories.RepositoryDataTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.RepositoryDataTests",
   "children": [
    {
     "id": "ID#testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testAddSnapshots",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testRemoveSnapshot",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testXContent(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testInitIndices",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)",
     "displayName": "testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)",
     "methodName": "testResolveIndexId",
     "className": "org.elasticsearch.repositories.RepositoryDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047221147
 }
]

[
 "TEST_STARTED",
 "ID#testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSnapshots(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474047221176,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveSnapshot(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474047221182,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474047221185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474047221187,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitIndices(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474047221192,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexId(org.elasticsearch.repositories.RepositoryDataTests)",
  "startTimestamp": 1474047221194,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.RepositoryDataTests",
  "startTimestamp": 1474047221147,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyStringMappingTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
   "children": [
    {
     "id": "ID#testPositionOffsetGapDeprecation(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testPositionOffsetGapDeprecation(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testPositionOffsetGapDeprecation",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeStringIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeStringIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeStringIntoStringWithSimilarity",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithNorms",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testSearchAnalyzerSerialization",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testKeywordFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testKeywordFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testKeywordFieldAsStringWithUnsupportedField",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoString",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithNorms",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoString",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithFielddataFrequencyFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithFielddataFrequencyFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithFielddataFrequencyFilter",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithStore",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithSimilarity",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithBoost",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithIncludeInAll",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithIndexOptions",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testBwCompatDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testBwCompatDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testBwCompatDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithEagerGlobalOrdinals(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithEagerGlobalOrdinals(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithEagerGlobalOrdinals",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithIncludeInAll",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testDisabledFielddata(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testDisabledFielddata(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testDisabledFielddata",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithFileddataDisabled(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithFileddataDisabled(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithFileddataDisabled",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testSearchQuoteAnalyzerSerialization",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithFields",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testTextFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testTextFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testTextFieldAsStringWithUnsupportedField",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithFields",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithIndexFalse(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithIndexFalse(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithIndexFalse",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithStore",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithCopyTo",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testLimit(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testLimit(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testLimit",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithIgnoreAbove(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithIgnoreAbove(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testNonAnalyzedFieldPositionIncrement(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testNonAnalyzedFieldPositionIncrement(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testNonAnalyzedFieldPositionIncrement",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithPositionIncrementGap(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithPositionIncrementGap(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithPositionIncrementGap",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultsForNotAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testDefaultsForNotAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testDefaultsForNotAnalyzed",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testFielddataFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testFielddataFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testFielddataFilter",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testTermVectors(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testTermVectors(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testTermVectors",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithIndexOptions",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testDisableNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testDisableNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testDisableNorms",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeKeywordIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeKeywordIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeKeywordIntoStringWithDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithSearchQuoteAnayzer(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithSearchQuoteAnayzer(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithSearchQuoteAnayzer",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithBoost",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultsForAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testDefaultsForAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testDefaultsForAnalyzed",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeTextIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testMergeTextIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testMergeTextIntoStringWithCopyTo",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testFielddataLoading(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testFielddataLoading(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testFielddataLoading",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "displayName": "testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
     "methodName": "testAnalyzedFieldPositionIncrementWithoutPositions",
     "className": "org.elasticsearch.index.mapper.LegacyStringMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047221221
 }
]

[
 "TEST_STARTED",
 "ID#testPositionOffsetGapDeprecation(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,262][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,297][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,297][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,302][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,304][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,304][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,452][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,453][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,453][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,457][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HnS0yfCJRNSUtqV8TeT4aw}{2hUWqdvMTZm1kPul4cjK3w}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,458][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,473][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,495][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,553][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,568][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testPositionOffsetGapDeprecation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionOffsetGapDeprecation(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047221253,
  "executionTime": 345
 }
]

[
 "TEST_STARTED",
 "ID#testMergeStringIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,653][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,666][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"similarity\":\"BM25\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,670][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Tda1pkc9TzapMWMw0FDndA] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,683][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"similarity\":\"BM25\",\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,701][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeStringIntoStringWithSimilarity]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeStringIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047221599,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,737][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,840][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,857][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"norms\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,860][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/MduYLrOLTqidsyIFEqnXYw] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,920][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"norms\":false,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:41,962][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047221730,
  "executionTime": 312
 }
]

[
 "TEST_STARTED",
 "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,054][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,121][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,140][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testSearchAnalyzerSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222042,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,179][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,270][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"doc_values\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,273][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jdGUM_l-TtS3YM5qOEo-1w] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,285][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"doc_values\":false,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,301][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222173,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testKeywordFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,340][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,399][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testKeywordFieldAsStringWithUnsupportedField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeywordFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222330,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,433][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,495][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,498][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/wD4iojhFTMWVxkNYZbH0OQ] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,511][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,525][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222427,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,568][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,632][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"norms\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,635][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/RKhWIy0uQnW6nl3xrVrdsg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,650][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"norms\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,667][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"norms\":{\"enabled\":true,\"loading\":\"MlKuL\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,668][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,669][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,684][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"norms\":{\"enabled\":true,\"loading\":\"hOtEZ\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,685][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,686][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,706][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222562,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,737][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,791][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/lDRxw6wXSU-gYovgclalhg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,807][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,823][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoString(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222732,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithFielddataFrequencyFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,959][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,974][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"fielddata\":{\"format\":\"pagedbytes\",\"filter\":{\"frequency\":{\"min\":0.001,\"max\":0.1,\"min_segment_size\":100}}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,977][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/B2bPJoLjQSG9gs5WdJDYDg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:42,989][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"fielddata\":true,\"fielddata_frequency_filter\":{\"min\":0.001,\"max\":0.1,\"min_segment_size\":100}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,005][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithFielddataFrequencyFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithFielddataFrequencyFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047222850,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,038][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,094][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"store\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,099][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WgMtBCt9SoSMRHvEfAoxCg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,111][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"store\":true,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,126][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223031,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,158][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,206][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,219][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"similarity\":\"BM25\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,221][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/0oxomFvhSISa3-0CCMfizw] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,238][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"similarity\":\"BM25\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,253][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithSimilarity]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithSimilarity(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223151,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,371][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"boost\":1.5}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,376][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jKdsne-0TbC2MOrbDAWL8w] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,396][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"boost\":1.5}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,416][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"boost\":1.4}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,425][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jKdsne-0TbC2MOrbDAWL8w] update_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,447][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223281,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,521][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,594][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"include_in_all\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,597][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/HRnONncUQvecVx7q3O7YcQ] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,613][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"include_in_all\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,633][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223515,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,667][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,741][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223660,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,782][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,837][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,853][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index_options\":\"positions\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,856][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WpjBe40xTcqrzSJ10p9JsA] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,869][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"index_options\":\"positions\",\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,889][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223772,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:43,934][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,000][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,015][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,080][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [LegacyStringMappingTests#testBwCompatDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047223928,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithEagerGlobalOrdinals(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,169][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,221][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,234][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"fielddata\":{\"format\":\"pagedbytes\",\"loading\":\"eager_global_ordinals\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,237][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/ZZ73s_dXS6m6757sdjcKdg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,258][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"fielddata\":true,\"eager_global_ordinals\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,275][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithEagerGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithEagerGlobalOrdinals(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047224162,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,388][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"include_in_all\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,391][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/zZFKr4uAS2mpSsXh9fbUlw] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,402][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"include_in_all\":false,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,414][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithIncludeInAll(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047224315,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testDisabledFielddata(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,451][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,524][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,543][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testDisabledFielddata]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabledFielddata(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047224444,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithFileddataDisabled(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,669][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,684][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"fielddata\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,687][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/LgTpjusSSw-mLJ2lkIdzCA] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,705][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,737][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithFileddataDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithFileddataDisabled(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047224581,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,782][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,829][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,841][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testSearchQuoteAnalyzerSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047224776,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,951][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,955][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/t0F9tjXmR_SUzCWiBu3bDQ] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,972][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"fielddata\":true,\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,989][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"},\"bar\":{\"type\":\"string\",\"analyzer\":\"whitespace\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:44,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/t0F9tjXmR_SUzCWiBu3bDQ] update_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,011][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"fielddata\":true,\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"},\"bar\":{\"type\":\"string\",\"analyzer\":\"whitespace\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,029][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047224871,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testTextFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,068][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,134][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testTextFieldAsStringWithUnsupportedField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTextFieldAsStringWithUnsupportedField(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225059,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,171][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,222][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,235][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,238][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WjQmxkEeQ_iwG5yOvUchUQ] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,253][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,272][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"},\"bar\":{\"type\":\"string\",\"analyzer\":\"whitespace\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,276][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WjQmxkEeQ_iwG5yOvUchUQ] update_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,294][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"fields\":{\"foo\":{\"type\":\"string\",\"analyzer\":\"standard\"},\"bar\":{\"type\":\"string\",\"analyzer\":\"whitespace\"}}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,313][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithFields(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225163,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithIndexFalse(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,360][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,410][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,424][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"no\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,426][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/VXG88Zm1RmSpNONPPfx_0g] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,440][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"index\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,468][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithIndexFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithIndexFalse(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225353,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,575][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"store\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,578][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/7mVnts-XScenaeOhql96bw] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,595][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"store\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,611][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithStore(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225495,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,647][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,702][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,714][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"copy_to\":\"another_field\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-2fImBRXR8u6qSLjGsrdIQ] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,751][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"copy_to\":\"another_field\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,766][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithCopyTo]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225639,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testLimit(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,802][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,851][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,865][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimit(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225795,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithIgnoreAbove(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,975][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"ignore_above\":128}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:45,977][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/SqiQFirbTA6DDi-BYckwpg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,016][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"ignore_above\":128}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,030][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithIgnoreAbove(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047225901,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testNonAnalyzedFieldPositionIncrement(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,064][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,125][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testNonAnalyzedFieldPositionIncrement]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonAnalyzedFieldPositionIncrement(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226057,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithPositionIncrementGap(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,167][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,217][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,230][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"position_increment_gap\":6099}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/iyz0r6WCRo22kiKtCBDpRg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,266][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"position_increment_gap\":6099,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,299][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithPositionIncrementGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithPositionIncrementGap(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226160,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsForNotAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,330][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,367][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,381][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,383][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,384][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testDefaultsForNotAnalyzed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsForNotAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226324,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testFielddataFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,430][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,493][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,565][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testFielddataFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFielddataFilter(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226424,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectors(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,610][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,672][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testTermVectors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectors(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226602,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,706][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,754][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,766][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"index_options\":\"freqs\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,769][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/gzgEHH9HSFyenvNk0g8eKw] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,784][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"index_options\":\"freqs\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,800][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithIndexOptions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226699,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testDisableNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,836][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,888][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,904][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,906][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,907][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testDisableNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableNorms(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226830,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testMergeKeywordIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,940][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:46,995][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,006][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"index\":\"not_analyzed\",\"doc_values\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,009][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/gIxIXhULTCCC1GVYuPdZAA] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,030][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"keyword\",\"doc_values\":false}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,046][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeKeywordIntoStringWithDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeKeywordIntoStringWithDocValues(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047226933,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithSearchQuoteAnayzer(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,081][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,155][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"analyzer\":\"standard\",\"search_analyzer\":\"whitespace\",\"search_quote_analyzer\":\"keyword\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,157][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/klYf9FtBRxyA-TWQ1UbDdg] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,173][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"analyzer\":\"standard\",\"search_analyzer\":\"whitespace\",\"search_quote_analyzer\":\"keyword\",\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,191][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithSearchQuoteAnayzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithSearchQuoteAnayzer(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047227072,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,230][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,277][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,291][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"boost\":1.5}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,293][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-Ir1aZ8jSFOEXmXo7IOUVw] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,306][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"boost\":1.5,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,339][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"boost\":1.4,\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-Ir1aZ8jSFOEXmXo7IOUVw] update_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,355][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithBoost(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047227221,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsForAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,394][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,438][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,451][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testDefaultsForAnalyzed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsForAnalyzed(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047227387,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testMergeTextIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,489][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,568][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"string\",\"copy_to\":\"another_field\"}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,571][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/AEtgEFz1QOGcc8z9tlpfDA] create_mapping [test_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,589][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] --> Updating mapping to {\"test_type\":{\"properties\":{\"test_field\":{\"type\":\"text\",\"copy_to\":\"another_field\",\"fielddata\":true}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,605][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testMergeTextIntoStringWithCopyTo]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeTextIntoStringWithCopyTo(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047227483,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testFielddataLoading(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,649][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,724][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testFielddataLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFielddataLoading(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047227640,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.LegacyStringMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,807][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,825][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyStringMappingTests#testAnalyzedFieldPositionIncrementWithoutPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.LegacyStringMappingTests)",
  "startTimestamp": 1474047227753,
  "executionTime": 109
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,862][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,863][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,863][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:47,865][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyStringMappingTests",
  "startTimestamp": 1474047221221,
  "executionTime": 6657
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.BootstrapCheckTests",
   "displayName": "org.elasticsearch.bootstrap.BootstrapCheckTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
   "children": [
    {
     "id": "ID#testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testFileDescriptorLimits",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMlockallCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testFileDescriptorLimitsThrowsOnInvalidLimit",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMaxSizeVirtualMemory",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testNonProductionMode",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testIgnoringSystemChecks",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMightForkCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testClientJvmCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testOnErrorCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testEnforceLimitsWhenPublishingToNonLocalAddress",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testHeapSizeCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testExceptionAggregation",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testLogMessageInProductionMode",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testOnOutOfMemoryErrorCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testAlwaysEnforcedChecks",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testEnforceLimitsWhenBoundToNonLocalAddress",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMaxMapCountCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testNoLogMessageInNonProductionMode",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "displayName": "testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
     "methodName": "testMaxNumberOfThreadsCheck",
     "className": "org.elasticsearch.bootstrap.BootstrapCheckTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047228000
 }
]

[
 "TEST_STARTED",
 "ID#testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,030][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimits] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,033][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimits] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,033][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimits] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileDescriptorLimits(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228019,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,036][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,036][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,037][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,037][INFO ][org.elasticsearch.bootstrap] [testFileDescriptorLimitsThrowsOnInvalidLimit] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMlockallCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228033,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileDescriptorLimitsThrowsOnInvalidLimit(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228037,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,042][INFO ][org.elasticsearch.bootstrap] [testMaxSizeVirtualMemory] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,043][INFO ][org.elasticsearch.bootstrap] [testMaxSizeVirtualMemory] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,043][INFO ][org.elasticsearch.bootstrap] [testMaxSizeVirtualMemory] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxSizeVirtualMemory(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228040,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228044,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,075][INFO ][org.elasticsearch.bootstrap] [testIgnoringSystemChecks] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoringSystemChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228072,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,276][INFO ][org.elasticsearch.bootstrap] [testMightForkCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,276][WARN ][org.elasticsearch.bootstrap] [testMightForkCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,276][INFO ][org.elasticsearch.bootstrap] [testMightForkCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,276][WARN ][org.elasticsearch.bootstrap] [testMightForkCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,277][INFO ][org.elasticsearch.bootstrap] [testMightForkCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,277][WARN ][org.elasticsearch.bootstrap] [testMightForkCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMightForkCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228273,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,280][INFO ][org.elasticsearch.bootstrap] [testClientJvmCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,281][INFO ][org.elasticsearch.bootstrap] [testClientJvmCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClientJvmCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228278,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,284][INFO ][org.elasticsearch.bootstrap] [testOnErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,284][WARN ][org.elasticsearch.bootstrap] [testOnErrorCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,285][INFO ][org.elasticsearch.bootstrap] [testOnErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228281,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnforceLimitsWhenPublishingToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228285,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,291][INFO ][org.elasticsearch.bootstrap] [testHeapSizeCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,292][INFO ][org.elasticsearch.bootstrap] [testHeapSizeCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,292][INFO ][org.elasticsearch.bootstrap] [testHeapSizeCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHeapSizeCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228289,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,298][INFO ][org.elasticsearch.bootstrap] [testExceptionAggregation] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionAggregation(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228292,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLogMessageInProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228299,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,304][INFO ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,304][WARN ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,304][INFO ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,304][INFO ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,305][WARN ][org.elasticsearch.bootstrap] [testOnOutOfMemoryErrorCheck] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnOutOfMemoryErrorCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228301,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,308][INFO ][org.elasticsearch.bootstrap] [testAlwaysEnforcedChecks] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,308][WARN ][org.elasticsearch.bootstrap] [testAlwaysEnforcedChecks] enforcing bootstrap checks but ignoring system bootstrap checks, consider not ignoring system checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlwaysEnforcedChecks(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228305,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnforceLimitsWhenBoundToNonLocalAddress(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228309,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,315][INFO ][org.elasticsearch.bootstrap] [testMaxMapCountCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,316][INFO ][org.elasticsearch.bootstrap] [testMaxMapCountCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,316][INFO ][org.elasticsearch.bootstrap] [testMaxMapCountCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228313,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLogMessageInNonProductionMode(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228316,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,320][INFO ][org.elasticsearch.bootstrap] [testMaxNumberOfThreadsCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,322][INFO ][org.elasticsearch.bootstrap] [testMaxNumberOfThreadsCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:48,323][INFO ][org.elasticsearch.bootstrap] [testMaxNumberOfThreadsCheck] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxNumberOfThreadsCheck(org.elasticsearch.bootstrap.BootstrapCheckTests)",
  "startTimestamp": 1474047228318,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.BootstrapCheckTests",
  "startTimestamp": 1474047228000,
  "executionTime": 325
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineExecutionServiceTests",
   "displayName": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
   "children": [
    {
     "id": "ID#testExecuteIndexPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteIndexPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteIndexPipelineDoesNotExist",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestExecution(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testBulkRequestExecution(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testBulkRequestExecution",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testUpdatingStatsWhenRemovingPipelineWorks(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testUpdatingStatsWhenRemovingPipelineWorks(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testUpdatingStatsWhenRemovingPipelineWorks",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteFailure",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteSuccessWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteSuccessWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteSuccessWithOnFailure",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteFailureWithNestedOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteFailureWithNestedOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteFailureWithNestedOnFailure",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecutePropagateAllMetaDataUpdates(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecutePropagateAllMetaDataUpdates(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecutePropagateAllMetaDataUpdates",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteFailureWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteFailureWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteFailureWithOnFailure",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteSetInvalidTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteSetInvalidTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteSetInvalidTTL",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteBulkPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteBulkPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteBulkPipelineDoesNotExist",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestExecutionWithFailures(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testBulkRequestExecutionWithFailures(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testBulkRequestExecutionWithFailures",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteProvidedTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteProvidedTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteProvidedTTL",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteSetTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteSetTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteSetTTL",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testStats(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteSuccess(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteSuccess(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteSuccess",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteEmptyPipeline(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "displayName": "testExecuteEmptyPipeline(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
     "methodName": "testExecuteEmptyPipeline",
     "className": "org.elasticsearch.ingest.PipelineExecutionServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047228334
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteIndexPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteIndexPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228374,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestExecution(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestExecution(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228414,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUpdatingStatsWhenRemovingPipelineWorks(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdatingStatsWhenRemovingPipelineWorks(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228434,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228443,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteSuccessWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteSuccessWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228480,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteFailureWithNestedOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteFailureWithNestedOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228487,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testExecutePropagateAllMetaDataUpdates(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutePropagateAllMetaDataUpdates(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228498,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteFailureWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteFailureWithOnFailure(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228508,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteSetInvalidTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteSetInvalidTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228514,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteBulkPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteBulkPipelineDoesNotExist(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228520,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestExecutionWithFailures(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestExecutionWithFailures(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228528,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteProvidedTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteProvidedTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228552,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteSetTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteSetTTL(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228556,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228568,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteSuccess(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteSuccess(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228571,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteEmptyPipeline(org.elasticsearch.ingest.PipelineExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteEmptyPipeline(org.elasticsearch.ingest.PipelineExecutionServiceTests)",
  "startTimestamp": 1474047228574,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineExecutionServiceTests",
  "startTimestamp": 1474047228334,
  "executionTime": 247
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "children": [
    {
     "id": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testHugeDocument",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testCustomPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testWhitespacePattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testRandomStrings",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testNonWordPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047228605
 }
]

[
 "TEST_STARTED",
 "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474047228629,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474047228644,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474047228648,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474047228653,
  "executionTime": 1203
 }
]

[
 "TEST_STARTED",
 "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474047229857,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
  "startTimestamp": 1474047228605,
  "executionTime": 1256
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
   "children": [
    {
     "id": "ID#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    },
    {
     "id": "ID#testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testThatSerializationIncludesAllElements",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047229875
 }
]

[
 "TEST_STARTED",
 "ID#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:49,915][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,029][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,029][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,034][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,037][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,037][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,160][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,160][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,160][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,169][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{QoOBLW7dTfmywB8z1CSzmw}{izPKu2VFTgu033q75Pko3w}{local}{local[7]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,170][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,185][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,203][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,274][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,344][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSerializationCombinesToOneAnalyzerFieldIfBothAreEqual(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474047229906,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,382][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,451][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474047230374,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,497][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,590][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testThatSerializationIncludesAllElements]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSerializationIncludesAllElements(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474047230491,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,622][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,683][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapper2xTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapper2xTests)",
  "startTimestamp": 1474047230616,
  "executionTime": 97
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,713][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,714][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,714][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:50,716][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldMapper2xTests",
  "startTimestamp": 1474047229875,
  "executionTime": 848
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047230730
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:50,759][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rP98avh5T6CyODfj8V57YQ}{local}{local[70]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
  "startTimestamp": 1474047230800,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
  "startTimestamp": 1474047230803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests)",
  "startTimestamp": 1474047230806,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ExtendedStatsTests",
  "startTimestamp": 1474047230730,
  "executionTime": 111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047230848
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:50,878][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bsCfuOdERECx5Y8UNn6Zvw}{local}{local[71]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
  "startTimestamp": 1474047230962,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
  "startTimestamp": 1474047230968,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
  "startTimestamp": 1474047230970,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
  "startTimestamp": 1474047230848,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.TermsSliceQueryTests",
   "displayName": "org.elasticsearch.search.slice.TermsSliceQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.TermsSliceQueryTests",
   "children": [
    {
     "id": "ID#testSearch(org.elasticsearch.search.slice.TermsSliceQueryTests)",
     "displayName": "testSearch(org.elasticsearch.search.slice.TermsSliceQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.search.slice.TermsSliceQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.search.slice.TermsSliceQueryTests)",
     "displayName": "testBasics(org.elasticsearch.search.slice.TermsSliceQueryTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.search.slice.TermsSliceQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047230989
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.search.slice.TermsSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.search.slice.TermsSliceQueryTests)",
  "startTimestamp": 1474047231012,
  "executionTime": 459
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.search.slice.TermsSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.search.slice.TermsSliceQueryTests)",
  "startTimestamp": 1474047231471,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.TermsSliceQueryTests",
  "startTimestamp": 1474047230989,
  "executionTime": 487
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
   "displayName": "org.elasticsearch.common.collect.EvictingQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.EvictingQueueTests",
   "children": [
    {
     "id": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testAddAll",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeZero",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithZeroSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithNegativeSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047231483
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231516,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231545,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231547,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231550,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231552,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231554,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231557,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1474047231559,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
  "startTimestamp": 1474047231483,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
   "children": [
    {
     "id": "ID#testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testConvertWildcardsJustIndicesTests",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testAll",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testMultipleWildcards",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testConvertWildcardsTests",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "displayName": "testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
     "methodName": "testConvertWildcardsOpenClosedIndicesTests",
     "className": "org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047231572
 }
]

[
 "TEST_STARTED",
 "ID#testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertWildcardsJustIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474047231773,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAll(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474047231777,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleWildcards(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474047231779,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertWildcardsTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474047231789,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertWildcardsOpenClosedIndicesTests(org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests)",
  "startTimestamp": 1474047231797,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.WildcardExpressionResolverTests",
  "startTimestamp": 1474047231572,
  "executionTime": 237
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
     "children": []
    },
    {
     "id": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "displayName": "testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
     "methodName": "testBuildWordScorer",
     "className": "org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047231834
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
  "startTimestamp": 1474047231923,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
  "startTimestamp": 1474047231926,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
  "startTimestamp": 1474047231928,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests)",
  "startTimestamp": 1474047231930,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.LinearInterpolationModelTests",
  "startTimestamp": 1474047231834,
  "executionTime": 121
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
   "children": [
    {
     "id": "ID#testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidDateMathFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidEmptyDateMathFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidOpenEnded",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_MixedArray",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_Static",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_MultiParts",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_CustomFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_EscapeStatic",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpressionInvalidUnescaped",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testNormal",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_CustomTimeZoneInSetting",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_EscapeDateFormat",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "displayName": "testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
     "methodName": "testExpression_CustomTimeZoneInIndexName",
     "className": "org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047231963
 }
]

[
 "TEST_STARTED",
 "ID#testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047231992,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047231999,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidEmptyDateMathFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232001,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidOpenEnded(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232003,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_MixedArray(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232005,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_Static(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232007,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232009,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_MultiParts(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232011,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_CustomFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232013,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_EscapeStatic(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232015,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpressionInvalidUnescaped(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232017,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormal(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232019,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] timezone: [-05:31], now [2016-09-16T00:00:00.022Z], name: [.marvel-2016.09.15]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_CustomTimeZoneInSetting(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232020,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_EscapeDateFormat(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232030,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,034][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] timezone: [-03:15], now [2016-09-16T00:00:00.033Z], name: [.marvel-2016.09.15]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpression_CustomTimeZoneInIndexName(org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests)",
  "startTimestamp": 1474047232032,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.DateMathExpressionResolverTests",
  "startTimestamp": 1474047231963,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.PrimaryTermsTests",
   "displayName": "org.elasticsearch.cluster.routing.PrimaryTermsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.PrimaryTermsTests",
   "children": [
    {
     "id": "ID#testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)",
     "displayName": "testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)",
     "methodName": "testPrimaryTermMetaDataSync",
     "className": "org.elasticsearch.cluster.routing.PrimaryTermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047232044
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,073][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 4 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,077][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,079][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [0], t [0], init shards: [6], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,080][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][2], node[node4], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=jFQ0YZ16SR2QJk4y8n8qAQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node0], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=ahidQpEaR4OBfsOmEopRaA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][1], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=BEdGqbcAQ--6kfvolbdeGw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,082][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [3], t [3], init shards: [15], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,083][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[node4], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=kfgytLsgTtCREEZyyaSCcQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=vgFQEnLGT9yiLpW5RIP1Sw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][2], node[node3], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=eB79ClVeTryIdg4-tR9uZw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,084][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [6], init shards: [24], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,085][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][1], node[node4], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=H1UwKecSTJSK6hpRHpwlow], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node4], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=6SA3U-iWQfS-rSjGhpAPyQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][2], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Ht5t3OxPQEin1w6BeeJzBA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][1], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=IVY34su8QMinO3449r9GbA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=h6yRKXKNQgOjhFUb_GJUog], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][2], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=UnvJ29QNSFOhxCf2a3UghA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][1], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=TdYjW9u-QKKRRBpya4DxJA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=wFkR9vv1SXa2EygCg23VVg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][2], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=WML2P8rdT_e7QV6RX9l-hw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][1], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=kpczlQvGQ32b3znLcnsbCQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][2], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Z0lUTSQXQYiPYRPUpEHqKw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test1][0], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=2CAUcP3gT_iGKphz1kIodg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,103][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [18], init shards: [12], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,104][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][2], node[node4], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=kscvSXBVSf6Qs3uOaWGrxw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node4], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=FlqjimIcQgefi_Sv9HGfow], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][2], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=cYGnERs2RRaY1wSjGMYY8w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][0], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=1mEsMdxWSZ2K6CH3UXq69w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=H777dCezSu2d9QVMcO1sig], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][0], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=qY0ufjMkRYKpaxQIXOowLg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][2], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=QqEz_V-wTIiMKDooryR74w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=PGNlPbp8SzWIcVm8Zph1Ig], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][0], node[node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=CxvQXzoFRIaI_GiXAUycdA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][2], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=BBmfMm-6SsGpcCBiPKGzTw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][1], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=K39jau1WQbO60qO9mdaayg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]], [test2][0], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=r7SUiWHyQ6Ox74f6WQDFSQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:52.076Z], delayed=false, allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,107][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][2], [test2][1], [test2][2], [test2][0], [test2][1], [test2][0], [test2][2], [test2][1], [test2][0], [test2][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,107][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,107][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding [7] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,110][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,110][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,110][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,110][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[extra_1], relocating [node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=br8jjBOFRk6R9Ar-96rICA, rId=r7SUiWHyQ6Ox74f6WQDFSQ], [test2][1], node[extra_2], relocating [node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Wj01YE_STcWgalBVprutNQ, rId=PGNlPbp8SzWIcVm8Zph1Ig]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,113][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,113][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,113][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,113][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[extra_0], relocating [node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=3oxxqh44QkyPTZsqK_vesw, rId=qY0ufjMkRYKpaxQIXOowLg], [test2][1], node[extra_5], relocating [node2], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=BD4cB3D7RiyDz1MWqFQvTA, rId=vgFQEnLGT9yiLpW5RIP1Sw]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,116][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,116][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,116][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,117][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][0], node[extra_6], relocating [node4], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=vNRq234wQFm5u21gwLBP2g, rId=kfgytLsgTtCREEZyyaSCcQ], [test2][1], node[extra_3], relocating [node4], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=PV70sFsJTgaBzLwrhsGWKg, rId=FlqjimIcQgefi_Sv9HGfow]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,119][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,119][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][1], node[extra_1], relocating [node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=QPkPzCJuTe-XcDmSR1HJJQ, rId=kpczlQvGQ32b3znLcnsbCQ], [test1][0], node[extra_4], relocating [node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=KNb7VP2OSv2vHbUWz8ktGQ, rId=2CAUcP3gT_iGKphz1kIodg]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,121][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,121][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,121][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,121][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][0], node[extra_2], relocating [node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=VohC7PSfSB6cq7bDe1RlCA, rId=wFkR9vv1SXa2EygCg23VVg], [test1][1], node[extra_0], relocating [node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=wfUQQqtUSp2VHFp3HAQHMg, rId=IVY34su8QMinO3449r9GbA]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,123][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,123][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,123][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,123][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][0], node[extra_5], relocating [node4], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=AhTEVmbjQ-qT9ieXobLPTA, rId=6SA3U-iWQfS-rSjGhpAPyQ], [test1][1], node[extra_6], relocating [node1], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=-NFlVaZYRhCRkmcinMqRxg, rId=BEdGqbcAQ--6kfvolbdeGw]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,124][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,125][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [[test2][2], node[extra_3], relocating [node3], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=f4p53RbfRByAb7JgFllVxA, rId=eB79ClVeTryIdg4-tR9uZw], [test2][0], node[extra_4], relocating [node0], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=dDUtLK2uQL6lu_vH2ScVAQ, rId=CxvQXzoFRIaI_GiXAUycdA]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,125][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,126][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][0], node[extra_3], relocating [node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=s5TEI0PHRxydtrjDq7SxIQ, rId=h6yRKXKNQgOjhFUb_GJUog]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,126][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,126][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,126][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,127][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,127][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,127][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,127][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,127][INFO ][org.elasticsearch.cluster.routing] [node_s_0] failing primary shards [0, 1] for index [test1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,129][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,129][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [28], init shards: [2], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,129][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [[test1][1], node[extra_5], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G4V9RW2jQ_e7RGf_WUqxOw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:33:52.127Z], failed_attempts[1], delayed=false, details[test], allocation_status[no_attempt]], [test1][0], node[extra_6], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=n3QR02ORQw-2p90Sj11teg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:33:52.127Z], failed_attempts[1], delayed=false, details[test], allocation_status[no_attempt]]] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,130][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,130][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,131][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,131][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,131][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test1]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,131][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,131][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index [test2]: [] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,131][INFO ][org.elasticsearch.cluster.routing] [node_s_0] applied reroute. active shards: p [6], t [30], init shards: [0], relocating: [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryTermMetaDataSync(org.elasticsearch.cluster.routing.PrimaryTermsTests)",
  "startTimestamp": 1474047232065,
  "executionTime": 66
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.PrimaryTermsTests",
  "startTimestamp": 1474047232044,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
   "displayName": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047232139
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1474047232205,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1474047232207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1474047232209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.SubAggCollectionModeTests)",
  "startTimestamp": 1474047232211,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.SubAggCollectionModeTests",
  "startTimestamp": 1474047232139,
  "executionTime": 76
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompoundTypesTests",
   "displayName": "org.elasticsearch.index.mapper.CompoundTypesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompoundTypesTests",
   "children": [
    {
     "id": "ID#testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)",
     "displayName": "testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)",
     "methodName": "testBackCompatStringType",
     "className": "org.elasticsearch.index.mapper.CompoundTypesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047232222
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,265][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,301][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,302][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,305][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,308][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,308][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,455][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,456][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,456][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,469][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{oMxjBNUISHe4bMkQCrwSOQ}{4lw5Cr7bQqyYm-7s68aiDQ}{local}{local[8]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,469][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,500][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,523][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,597][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompoundTypesTests#testBackCompatStringType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)",
  "startTimestamp": 1474047232257,
  "executionTime": 371
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,629][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,629][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,630][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:52,632][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompoundTypesTests",
  "startTimestamp": 1474047232222,
  "executionTime": 415
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogVersionTests",
   "displayName": "org.elasticsearch.index.translog.TranslogVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogVersionTests",
   "children": [
    {
     "id": "ID#testV0LegacyTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)",
     "displayName": "testV0LegacyTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)",
     "methodName": "testV0LegacyTranslogVersion",
     "className": "org.elasticsearch.index.translog.TranslogVersionTests",
     "children": []
    },
    {
     "id": "ID#testTruncatedTranslog(org.elasticsearch.index.translog.TranslogVersionTests)",
     "displayName": "testTruncatedTranslog(org.elasticsearch.index.translog.TranslogVersionTests)",
     "methodName": "testTruncatedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogVersionTests",
     "children": []
    },
    {
     "id": "ID#testV1ChecksummedTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)",
     "displayName": "testV1ChecksummedTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)",
     "methodName": "testV1ChecksummedTranslogVersion",
     "className": "org.elasticsearch.index.translog.TranslogVersionTests",
     "children": []
    },
    {
     "id": "ID#testCorruptedTranslogs(org.elasticsearch.index.translog.TranslogVersionTests)",
     "displayName": "testCorruptedTranslogs(org.elasticsearch.index.translog.TranslogVersionTests)",
     "methodName": "testCorruptedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047232646
 }
]

[
 "TEST_STARTED",
 "ID#testV0LegacyTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testV0LegacyTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)",
  "startTimestamp": 1474047232663,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslog(org.elasticsearch.index.translog.TranslogVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslog(org.elasticsearch.index.translog.TranslogVersionTests)",
  "startTimestamp": 1474047232670,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testV1ChecksummedTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testV1ChecksummedTranslogVersion(org.elasticsearch.index.translog.TranslogVersionTests)",
  "startTimestamp": 1474047232673,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCorruptedTranslogs(org.elasticsearch.index.translog.TranslogVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorruptedTranslogs(org.elasticsearch.index.translog.TranslogVersionTests)",
  "startTimestamp": 1474047232676,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogVersionTests",
  "startTimestamp": 1474047232646,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyTermsLookup",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNullValues",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testGeo",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testTermsQueryWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testBothValuesAndLookupSet",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyFieldName",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047232756
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,873][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{B7rppRKdSyeHrKo_PWzTBA}{local}{local[84]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,881][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,881][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,902][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,902][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,902][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,909][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,909][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,909][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,937][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,938][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,938][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,942][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,943][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,943][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,945][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,945][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,945][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,965][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,967][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,967][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,976][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,976][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,977][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,986][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,987][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,987][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,989][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,989][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,989][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,998][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,999][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:52,999][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,013][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,013][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:53,013][WARN ][org.elasticsearch.deprecation.index.mapper]  [kcBXu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047232819,
  "executionTime": 276
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233095,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233102,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233112,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233118,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233127,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233135,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233160,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233167,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233177,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233180,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233183,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233225,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233229,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233264,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474047233317,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
  "startTimestamp": 1474047232756,
  "executionTime": 569
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "children": [
    {
     "id": "ID#testRejectingRestartedNodeJoinsBeforeProcessingNodeLeft(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testRejectingRestartedNodeJoinsBeforeProcessingNodeLeft(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testRejectingRestartedNodeJoinsBeforeProcessingNodeLeft",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNormalConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testFailingJoinsWhenNotMaster",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testMasterElectionTimeout",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testRejectingJoinWithSameIdButDifferentNode(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testRejectingJoinWithSameIdButDifferentNode(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testRejectingJoinWithSameIdButDifferentNode",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testElectionBasedOnConflictingNodes(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testElectionBasedOnConflictingNodes(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testElectionBasedOnConflictingNodes",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElection",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleJoinAccumulation",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testElectionWithConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testRejectingJoinWithSameAddressButDifferentId(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testRejectingJoinWithSameAddressButDifferentId(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testRejectingJoinWithSameAddressButDifferentId",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElectionWithoutRequiredJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNewClusterStateOnExistingNodeJoin",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047233364
 }
]

[
 "TEST_STARTED",
 "ID#testRejectingRestartedNodeJoinsBeforeProcessingNodeLeft(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,401][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{S0BAMYxaRYi7ecMGdFgB2A}{local}{local[85]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,418][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,423][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{node_10}{omjkIlPYTdujdqyd94gUPQ}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,424][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {node}{S0BAMYxaRYi7ecMGdFgB2A}{local}{local[85]} (id [1]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,427][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{node}{S0BAMYxaRYi7ecMGdFgB2A}{local}{local[85]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,427][DEBUG][org.elasticsearch.discovery.zen] future [join of {node}{S0BAMYxaRYi7ecMGdFgB2A}{local}{local[85]} (id [1]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,428][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {node}{sesyDfWeSXKHP6nnB6EdmQ}{local}{local[85]} (id [2]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,429][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {node}{sesyDfWeSXKHP6nnB6EdmQ}{local}{local[85]} (id [2]]%0D%0Ajava.lang.IllegalArgumentException: can't add node {node}{sesyDfWeSXKHP6nnB6EdmQ}{local}{local[85]}, found existing node {node}{S0BAMYxaRYi7ecMGdFgB2A}{local}{local[85]} with the same id but is a different node instance%0A%09at org.elasticsearch.cluster.node.DiscoveryNodes$Builder.add(DiscoveryNodes.java:600) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.NodeJoinController$JoinTaskExecutor.execute(NodeJoinController.java:448) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectingRestartedNodeJoinsBeforeProcessingNodeLeft(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233391,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,438][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{faXqqRcMQqWh5h96jLjBTA}{local}{local[89]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,444][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,449][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] {data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]} (id [3]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]} (id [4]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]} (id [5]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] {master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]} (id [6]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,450][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]} (id [7]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][DEBUG][org.elasticsearch.discovery.zen] {master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]},{data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]},}, reason: zen-disco-node-join[{master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]}, {data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]} (id [8]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]} (id [3]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]} (id [4]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,451][WARN ][org.elasticsearch.discovery.zen.elect] value for setting \"discovery.zen.minimum_master_nodes\" is too low. This can result in data loss! Please set it to at least a quorum of master-eligible nodes (current value: [-1], total number of master-eligible nodes used for publishing in this round: [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,452][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]},{master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]},{master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]},{master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]},}, reason: zen-disco-node-join[{master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]}, {master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]}, {master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]}, {master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,452][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]} (id [5]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,452][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]} (id [6]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,452][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]} (id [7]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,452][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]} (id [8]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,453][INFO ][org.elasticsearch.discovery.zen] assert for [[{node}{faXqqRcMQqWh5h96jLjBTA}{local}{local[89]}, {master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]}, {data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]}, {master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]}, {master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]}, {master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]}, {master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]}]] in:%0Acluster uuid: _na_%0Aversion: 6%0Astate uuid: vUIseaSsRtSTxp6_JDV4yQ%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {master_2}{2}{rWa2-EnIQM2ybO6WdbCE6g}{local}{local[test_2]}%0A   {master_4}{4}{XWUlfCffSsKNatBgq3NJIw}{local}{local[test_4]}%0A   {master_5}{5}{Y8_i8L_wSMC-unPiXQplDw}{local}{local[test_5]}%0A   {master_3}{3}{kA_8DNt4RPuFVS4MMSVN3Q}{local}{local[test_3]}%0A   {master_0}{0}{xAXdGzE5Qq2chDFoMGkX4w}{local}{local[test_0]}%0A   {data_1}{1}{0jLuaE-pQ0iEFzMhyKMrjA}{local}{local[test_1]}%0A   {node}{faXqqRcMQqWh5h96jLjBTA}{local}{local[89]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A-----node_id[node][V]%0A---- unassigned%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233432,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,465][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_Ei60cr8Qie6lAoPB0vozg}{local}{local[90]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,472][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,474][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{j0wBsfJsT6COIcc7ls_cOQ}{local}{local[test_0]} (id [9]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,475][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,476][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{j0wBsfJsT6COIcc7ls_cOQ}{local}{local[test_0]} (id [9]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{_Ei60cr8Qie6lAoPB0vozg}{local}{local[90]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,477][DEBUG][org.elasticsearch.discovery.zen] --> testing joins fail post accumulation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,477][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,480][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{uxza4FerRLy24fQUJg0tCg}{local}{local[test_1]} (id [10]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,481][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [0], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,481][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{sOuEMD75RvqaEFIJfZlLVQ}{local}{local[test_2]} (id [11]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,481][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,481][TRACE][org.elasticsearch.discovery.zen] stopping election ([test])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,482][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,483][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_1}{1}{uxza4FerRLy24fQUJg0tCg}{local}{local[test_1]} (id [10]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{_Ei60cr8Qie6lAoPB0vozg}{local}{local[90]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,483][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_2}{2}{sOuEMD75RvqaEFIJfZlLVQ}{local}{local[test_2]} (id [11]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{_Ei60cr8Qie6lAoPB0vozg}{local}{local[90]}] not master for join request%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233455,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,489][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,495][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,497][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,497][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,497][DEBUG][org.elasticsearch.discovery.zen] --> joining [4] nodes, with repetition a total of [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,497][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{nQO5Fis0QCGa2RC8kB9SnA}{local}{local[test_1]} (id [12]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,497][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,498][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{nQO5Fis0QCGa2RC8kB9SnA}{local}{local[test_1]} (id [13]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,498][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,498][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [14]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,500][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,500][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [15]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,500][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,500][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{e3nmIu2PTE-bgbxlcc2OoQ}{local}{local[test_2]} (id [16]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,501][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,501][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [17]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,502][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,502][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{LEZRnmFNQE-MLqieYDl2uQ}{local}{local[test_3]} (id [18]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,502][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [4], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,505][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [4], required [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,507][TRACE][org.elasticsearch.discovery.zen] timed out waiting to be elected. waited [1ms]. pending master node joins [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,507][TRACE][org.elasticsearch.discovery.zen] stopping election ([timed out waiting to be elected])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,508][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,508][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [14]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,508][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [15]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,508][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [17]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,508][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_3}{3}{LEZRnmFNQE-MLqieYDl2uQ}{local}{local[test_3]} (id [18]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,509][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{nQO5Fis0QCGa2RC8kB9SnA}{local}{local[test_1]} (id [12]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,509][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{nQO5Fis0QCGa2RC8kB9SnA}{local}{local[test_1]} (id [13]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,509][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_2}{2}{e3nmIu2PTE-bgbxlcc2OoQ}{local}{local[test_2]} (id [16]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{JOx6_WOpRMya9_uEElTNSg}{local}{local[91]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,509][DEBUG][org.elasticsearch.discovery.zen] --> verifying election timed out%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,509][DEBUG][org.elasticsearch.discovery.zen] --> verifying all joins are failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,509][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_1}{1}{nQO5Fis0QCGa2RC8kB9SnA}{local}{local[test_1]} (id [12]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,510][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_1}{1}{nQO5Fis0QCGa2RC8kB9SnA}{local}{local[test_1]} (id [13]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,510][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [14]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,510][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [15]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,510][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_2}{2}{e3nmIu2PTE-bgbxlcc2OoQ}{local}{local[test_2]} (id [16]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,510][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_0}{0}{6b_AwlkPTwurpyIyfBjTcA}{local}{local[test_0]} (id [17]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,510][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_3}{3}{LEZRnmFNQE-MLqieYDl2uQ}{local}{local[test_3]} (id [18]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233484,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testRejectingJoinWithSameIdButDifferentNode(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,517][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7ByC-CTTRtWCYi1NgyVpsg}{local}{local[92]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,525][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,529][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_name}{node}{9j0bRvc9Tw2KmEzdjWOdMQ}{local}{local[92]} (id [19]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,530][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {other_name}{node}{9j0bRvc9Tw2KmEzdjWOdMQ}{local}{local[92]} (id [19]]%0D%0Ajava.lang.IllegalArgumentException: can't add node {other_name}{node}{9j0bRvc9Tw2KmEzdjWOdMQ}{local}{local[92]}, found existing node {node}{7ByC-CTTRtWCYi1NgyVpsg}{local}{local[92]} with the same id but is a different node instance%0A%09at org.elasticsearch.cluster.node.DiscoveryNodes$Builder.add(DiscoveryNodes.java:600) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.NodeJoinController$JoinTaskExecutor.execute(NodeJoinController.java:448) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectingJoinWithSameIdButDifferentNode(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233511,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testElectionBasedOnConflictingNodes(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,547][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{j9eHh--IT_CPwBn2qbwqvg}{local}{local[93]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,552][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,554][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{other_node}{IF-09BjMQO6f4DjXRnpofA}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,555][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,555][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_node}{ZhpY6sPNTse8Ix3R4FosWw}{local}{local[95]} (id [20]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,555][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,556][TRACE][org.elasticsearch.discovery.zen] have enough joins for election. Got [1], required [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,557][DEBUG][org.elasticsearch.discovery.zen] removing existing node [{other_node}{IF-09BjMQO6f4DjXRnpofA}{local}{local[94]}], which conflicts with incoming join from [{other_node}{ZhpY6sPNTse8Ix3R4FosWw}{local}{local[95]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,557][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node}{j9eHh--IT_CPwBn2qbwqvg}{local}{local[93]}}, removed {{other_node}{IF-09BjMQO6f4DjXRnpofA}{local}{local[94]},}, added {{other_node}{ZhpY6sPNTse8Ix3R4FosWw}{local}{local[95]},}, reason: zen-disco-elected-as-master ([1] nodes joined)[{other_node}{ZhpY6sPNTse8Ix3R4FosWw}{local}{local[95]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,558][DEBUG][org.elasticsearch.discovery.zen] future [join of {other_node}{ZhpY6sPNTse8Ix3R4FosWw}{local}{local[95]} (id [20]] completed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectionBasedOnConflictingNodes(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233531,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,587][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,593][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,596][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,596][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{BVluR-QrQ0SAxFM3dAas1g}{local}{local[test_0]} (id [21]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,596][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,596][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{BVluR-QrQ0SAxFM3dAas1g}{local}{local[test_0]} (id [21]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,597][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{1l2a8Pk1R1CcDV921xfuZw}{local}{local[test_1]} (id [22]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,597][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,597][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{1l2a8Pk1R1CcDV921xfuZw}{local}{local[test_1]} (id [22]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,597][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{0nLQRnjeQJyj8PUxNZmryg}{local}{local[test_2]} (id [23]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,598][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,598][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_2}{2}{0nLQRnjeQJyj8PUxNZmryg}{local}{local[test_2]} (id [23]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,598][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{U9SDqVGlQoeHoTMKE0ynfQ}{local}{local[test_3]} (id [24]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,599][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,599][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_3}{3}{U9SDqVGlQoeHoTMKE0ynfQ}{local}{local[test_3]} (id [24]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,599][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{hkhnR__IQfKUk5sgJ0mBWw}{local}{local[test_4]} (id [25]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,599][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,599][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_4}{4}{hkhnR__IQfKUk5sgJ0mBWw}{local}{local[test_4]} (id [25]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,600][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][DEBUG][org.elasticsearch.discovery.zen] --> joining [0] unique master nodes. Total of [1] join requests%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{_qxmZNC4RJOfLQ_t__6gDg}{local}{local[test_5]} (id [26]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [0], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][DEBUG][org.elasticsearch.discovery.zen] --> asserting master election didn't finish yet%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][DEBUG][org.elasticsearch.discovery.zen] --> joining [5] nodes, with repetition a total of [12]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_6}{6}{NcBgWqxpRBa0w5N2j7qSEQ}{local}{local[test_6]} (id [27]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]} (id [28]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,601][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [29]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [30]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [31]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,602][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [32]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [33]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]} (id [34]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [4], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]} (id [35]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [4], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,636][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_8}{8}{3T4VHCWYQK2Q7GvKdfRYlA}{local}{local[test_8]} (id [36]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,637][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [5], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,637][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]} (id [37]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,637][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [5], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,637][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [38]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,637][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [5], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,637][DEBUG][org.elasticsearch.discovery.zen] --> waiting for master election to with no exception%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,661][TRACE][org.elasticsearch.discovery.zen] have enough joins for election. Got [5], required [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,665][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hQMRwR5lSS6OP5se67lWJA}{local}{local[96]}, added {{master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]},{master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]},{master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]},{master_6}{6}{NcBgWqxpRBa0w5N2j7qSEQ}{local}{local[test_6]},{data_5}{5}{_qxmZNC4RJOfLQ_t__6gDg}{local}{local[test_5]},{master_8}{8}{3T4VHCWYQK2Q7GvKdfRYlA}{local}{local[test_8]},{data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]},}, reason: zen-disco-elected-as-master ([7] nodes joined)[{master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]}, {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]}, {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]}, {master_6}{6}{NcBgWqxpRBa0w5N2j7qSEQ}{local}{local[test_6]}, {master_8}{8}{3T4VHCWYQK2Q7GvKdfRYlA}{local}{local[test_8]}, {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]}, {data_5}{5}{_qxmZNC4RJOfLQ_t__6gDg}{local}{local[test_5]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [29]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [30]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [31]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [32]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [33]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [38]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]} (id [28]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]} (id [35]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_6}{6}{NcBgWqxpRBa0w5N2j7qSEQ}{local}{local[test_6]} (id [27]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,666][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_8}{8}{3T4VHCWYQK2Q7GvKdfRYlA}{local}{local[test_8]} (id [36]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]} (id [34]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] --> waiting on all joins to be processed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]} (id [37]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{_qxmZNC4RJOfLQ_t__6gDg}{local}{local[test_5]} (id [26]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{_qxmZNC4RJOfLQ_t__6gDg}{local}{local[test_5]} (id [26]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_6}{6}{NcBgWqxpRBa0w5N2j7qSEQ}{local}{local[test_6]} (id [27]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]} (id [28]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][WARN ][org.elasticsearch.discovery.zen.elect] value for setting \"discovery.zen.minimum_master_nodes\" is too low. This can result in data loss! Please set it to at least a quorum of master-eligible nodes (current value: [-1], total number of master-eligible nodes used for publishing in this round: [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [29]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [30]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_7}{7}{nNzyMB-jR3S5wBoKp_yqvQ}{local}{local[test_7]} (id [31]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [32]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [33]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]} (id [34]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_11}{11}{7jGWDk7RQJOqzE1YlejTGg}{local}{local[test_11]} (id [35]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_8}{8}{3T4VHCWYQK2Q7GvKdfRYlA}{local}{local[test_8]} (id [36]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{x7GiI0hBSEiwrMHfrYK83g}{local}{local[test_10]} (id [37]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{on0yyEl4RK-XLqc5xcae2Q}{local}{local[test_9]} (id [38]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][DEBUG][org.elasticsearch.discovery.zen] --> testing accumulation stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,669][TRACE][org.elasticsearch.discovery.zen] stopping election ([test])%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233562,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,678][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{B4CjiezXQ-Ct-5b2Z5cg5Q}{local}{local[97]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,684][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,686][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_0}{0}{zmcAP1QqQKC0jvw6H8d8tQ}{local}{local[test_0]} (id [39]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,686][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{data_0}{0}{zmcAP1QqQKC0jvw6H8d8tQ}{local}{local[test_0]},}, reason: zen-disco-node-join[{data_0}{0}{zmcAP1QqQKC0jvw6H8d8tQ}{local}{local[test_0]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,687][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_0}{0}{zmcAP1QqQKC0jvw6H8d8tQ}{local}{local[test_0]} (id [39]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,687][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{Gv8Oly9nRn6nxU5io9HIAg}{local}{local[test_1]} (id [40]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,687][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{data_1}{1}{Gv8Oly9nRn6nxU5io9HIAg}{local}{local[test_1]},}, reason: zen-disco-node-join[{data_1}{1}{Gv8Oly9nRn6nxU5io9HIAg}{local}{local[test_1]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,687][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_1}{1}{Gv8Oly9nRn6nxU5io9HIAg}{local}{local[test_1]} (id [40]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,687][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{smZ3fAJNTV6XFVrZZZNjoA}{local}{local[test_2]} (id [41]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{data_2}{2}{smZ3fAJNTV6XFVrZZZNjoA}{local}{local[test_2]},}, reason: zen-disco-node-join[{data_2}{2}{smZ3fAJNTV6XFVrZZZNjoA}{local}{local[test_2]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_2}{2}{smZ3fAJNTV6XFVrZZZNjoA}{local}{local[test_2]} (id [41]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{vUC9DXnCQPiwGoXKbjkWbQ}{local}{local[test_3]} (id [42]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{uNFZ5kE1Q2Ckgv3iaj5V6g}{local}{local[test_4]} (id [43]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,688][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,689][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{vM443bSTRG2kwzRc9t_lGA}{local}{local[test_5]} (id [44]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,689][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,689][TRACE][org.elasticsearch.discovery.zen] stopping election ([test])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,689][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{nf5K9PKBSamm38zbEjrZFA}{local}{local[test_6]} (id [45]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,689][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{data_6}{6}{nf5K9PKBSamm38zbEjrZFA}{local}{local[test_6]},{master_4}{4}{uNFZ5kE1Q2Ckgv3iaj5V6g}{local}{local[test_4]},{master_3}{3}{vUC9DXnCQPiwGoXKbjkWbQ}{local}{local[test_3]},{data_5}{5}{vM443bSTRG2kwzRc9t_lGA}{local}{local[test_5]},}, reason: zen-disco-node-join[{data_6}{6}{nf5K9PKBSamm38zbEjrZFA}{local}{local[test_6]}], zen-disco-election-stop [test][{data_5}{5}{vM443bSTRG2kwzRc9t_lGA}{local}{local[test_5]}, {master_3}{3}{vUC9DXnCQPiwGoXKbjkWbQ}{local}{local[test_3]}, {master_4}{4}{uNFZ5kE1Q2Ckgv3iaj5V6g}{local}{local[test_4]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,689][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{vM443bSTRG2kwzRc9t_lGA}{local}{local[test_5]} (id [44]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,690][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{vUC9DXnCQPiwGoXKbjkWbQ}{local}{local[test_3]} (id [42]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,690][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{uNFZ5kE1Q2Ckgv3iaj5V6g}{local}{local[test_4]} (id [43]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,690][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{nf5K9PKBSamm38zbEjrZFA}{local}{local[test_6]} (id [45]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,690][WARN ][org.elasticsearch.discovery.zen.elect] value for setting \"discovery.zen.minimum_master_nodes\" is too low. This can result in data loss! Please set it to at least a quorum of master-eligible nodes (current value: [-1], total number of master-eligible nodes used for publishing in this round: [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,693][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_7}{7}{63xiOTLYRNaVY1vU0fJIiQ}{local}{local[test_7]} (id [46]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,693][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{master_7}{7}{63xiOTLYRNaVY1vU0fJIiQ}{local}{local[test_7]},}, reason: zen-disco-node-join[{master_7}{7}{63xiOTLYRNaVY1vU0fJIiQ}{local}{local[test_7]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,693][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_7}{7}{63xiOTLYRNaVY1vU0fJIiQ}{local}{local[test_7]} (id [46]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,695][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_8}{8}{YtB3GmfiQF-EKKbuEyIVCg}{local}{local[test_8]} (id [47]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,695][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{master_8}{8}{YtB3GmfiQF-EKKbuEyIVCg}{local}{local[test_8]},}, reason: zen-disco-node-join[{master_8}{8}{YtB3GmfiQF-EKKbuEyIVCg}{local}{local[test_8]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,695][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_8}{8}{YtB3GmfiQF-EKKbuEyIVCg}{local}{local[test_8]} (id [47]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,695][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_9}{9}{_iaaZ8GeRdiMMb4TRUoMGg}{local}{local[test_9]} (id [48]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{data_9}{9}{_iaaZ8GeRdiMMb4TRUoMGg}{local}{local[test_9]},}, reason: zen-disco-node-join[{data_9}{9}{_iaaZ8GeRdiMMb4TRUoMGg}{local}{local[test_9]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,696][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_9}{9}{_iaaZ8GeRdiMMb4TRUoMGg}{local}{local[test_9]} (id [48]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,696][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{2UEW9GIpTaOi_Y3-k73Yaw}{local}{local[test_10]} (id [49]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{master_10}{10}{2UEW9GIpTaOi_Y3-k73Yaw}{local}{local[test_10]},}, reason: zen-disco-node-join[{master_10}{10}{2UEW9GIpTaOi_Y3-k73Yaw}{local}{local[test_10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,696][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{2UEW9GIpTaOi_Y3-k73Yaw}{local}{local[test_10]} (id [49]] completed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233670,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,709][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2_dsh8nZTEWbzZGjc0vamQ}{local}{local[98]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,715][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,717][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,721][INFO ][org.elasticsearch.discovery.zen] --> waiting to be elected as master (required joins [5])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,722][DEBUG][org.elasticsearch.discovery.zen] {master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,722][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]} (id [50]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,721][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,722][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]} (id [51]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,722][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,721][DEBUG][org.elasticsearch.discovery.zen] {master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,721][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]} (id [52]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]} (id [53]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [4], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][DEBUG][org.elasticsearch.discovery.zen] {master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]} (id [54]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [5], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,721][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]} (id [55]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [6], required [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,723][TRACE][org.elasticsearch.discovery.zen] have enough joins for election. Got [6], required [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,724][DEBUG][org.elasticsearch.discovery.zen] {master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]} joining%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,724][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]} (id [56]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2_dsh8nZTEWbzZGjc0vamQ}{local}{local[98]}, added {{master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]},{master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]},{master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]},{master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]},{master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]},{master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]},{master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]},}, reason: zen-disco-node-join[{master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]}], zen-disco-elected-as-master ([6] nodes joined)[{master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]}, {master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]}, {master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]}, {master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]}, {master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]}, {master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]} (id [50]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]} (id [52]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]} (id [53]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]} (id [54]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]} (id [55]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]} (id [51]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]} (id [56]] completed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,725][WARN ][org.elasticsearch.discovery.zen.elect] value for setting \"discovery.zen.minimum_master_nodes\" is too low. This can result in data loss! Please set it to at least a quorum of master-eligible nodes (current value: [-1], total number of master-eligible nodes used for publishing in this round: [8])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,726][INFO ][org.elasticsearch.discovery.zen] assert for [[{node}{2_dsh8nZTEWbzZGjc0vamQ}{local}{local[98]}, {master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]}, {master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]}, {master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]}, {master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]}, {master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]}, {master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]}, {master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]}]] in:%0Acluster uuid: _na_%0Aversion: 6%0Astate uuid: t2QYQye8Q1SA_ecGtjBmEg%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {master_4}{4}{jIsNXVfsSvykEkqsfwKQgw}{local}{local[test_4]}%0A   {master_2}{2}{rPpjFMqLSSWZZYqxKlv5UQ}{local}{local[test_2]}%0A   {node}{2_dsh8nZTEWbzZGjc0vamQ}{local}{local[98]}, local, master%0A   {master_5}{5}{CHD8h_s6S8iyuyhyuUhA-g}{local}{local[test_5]}%0A   {master_3}{3}{WPGB1ApvRaKYWCyKd4MRiQ}{local}{local[test_3]}%0A   {master_0}{0}{tmGyHY75ShKmYanjRnZbaA}{local}{local[test_0]}%0A   {master_6}{6}{CLMtQilQS9OhKOnDI4LHJQ}{local}{local[test_6]}%0A   {master_1}{1}{J2Px49NVSvG90RxeRzpU3w}{local}{local[test_1]}%0Arouting_table (version 0):%0Arouting_nodes:%0A-----node_id[node][V]%0A---- unassigned%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233697,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testRejectingJoinWithSameAddressButDifferentId(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,734][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ill9kkQgQAa9XI-3x5xxgQ}{local}{local[99]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,740][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,741][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{node_10}{mtHn3Lk2R9OJRjUsYpPJXQ}{local}{local[100]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,742][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_node}{zyBuMVUxRtmK4dljhg-oBg}{local}{local[100]} (id [57]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,742][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {other_node}{zyBuMVUxRtmK4dljhg-oBg}{local}{local[100]} (id [57]]%0D%0Ajava.lang.IllegalArgumentException: can't add node {other_node}{zyBuMVUxRtmK4dljhg-oBg}{local}{local[100]}, found existing node {node_10}{mtHn3Lk2R9OJRjUsYpPJXQ}{local}{local[100]} with same address%0A%09at org.elasticsearch.cluster.node.DiscoveryNodes$Builder.add(DiscoveryNodes.java:600) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.NodeJoinController$JoinTaskExecutor.execute(NodeJoinController.java:448) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectingJoinWithSameAddressButDifferentId(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233726,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,751][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bMKs1Fs6QBSBpYlmE-tSbw}{local}{local[101]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,756][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,757][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,758][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{FYVT0_PkQNG9a6tiR5nz6A}{local}{local[test_0]} (id [58]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,758][TRACE][org.elasticsearch.discovery.zen] processing node joins, but we are not the master. current master: null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,758][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{FYVT0_PkQNG9a6tiR5nz6A}{local}{local[test_0]} (id [58]]%0D%0Aorg.elasticsearch.cluster.NotMasterException: Node [{node}{bMKs1Fs6QBSBpYlmE-tSbw}{local}{local[101]}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,759][TRACE][org.elasticsearch.discovery.zen] starting an election context, will accumulate joins%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,760][DEBUG][org.elasticsearch.discovery.zen] --> requiredJoins is set to 0. verifying election finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,763][TRACE][org.elasticsearch.discovery.zen] have enough joins for election. Got [0], required [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bMKs1Fs6QBSBpYlmE-tSbw}{local}{local[101]}, reason: zen-disco-elected-as-master ([0] nodes joined)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233744,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,801][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xSGm6RRWQVqNjDq1C_rkHw}{local}{local[102]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,809][DEBUG][org.elasticsearch.discovery.zen.elect] using minimum_master_nodes [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,812][INFO ][org.elasticsearch.cluster.service] [node_s_0] added {{other_node}{MlZyw6lkRlOKAuHvxwQ3zw}{local}{local[103]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,812][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_node}{MlZyw6lkRlOKAuHvxwQ3zw}{local}{local[103]} (id [59]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,812][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{other_node}{MlZyw6lkRlOKAuHvxwQ3zw}{local}{local[103]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,813][DEBUG][org.elasticsearch.discovery.zen] future [join of {other_node}{MlZyw6lkRlOKAuHvxwQ3zw}{local}{local[103]} (id [59]] completed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1474047233766,
  "executionTime": 47
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
  "startTimestamp": 1474047233364,
  "executionTime": 453
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.SingleObjectCacheTests",
   "displayName": "org.elasticsearch.common.util.SingleObjectCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
   "children": [
    {
     "id": "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "displayName": "testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "methodName": "testRefreshDoesntBlock",
     "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
     "children": []
    },
    {
     "id": "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "displayName": "testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "methodName": "testRefresh",
     "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047233825
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
  "startTimestamp": 1474047233862,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
  "startTimestamp": 1474047233869,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.SingleObjectCacheTests",
  "startTimestamp": 1474047233825,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.KeywordFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
   "children": [
    {
     "id": "ID#testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testDisableIndex",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testIndexOptions",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testEnableNorms",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testDisableDocValues",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testBoostImplicitlyEnablesNormsOnOldIndex",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testEnableStore",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testBoost",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047233882
 }
]

[
 "TEST_STARTED",
 "ID#testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,935][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,962][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,963][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,967][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,970][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:53,970][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,108][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,109][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,109][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,158][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{_UdYAXPfQCq9XOVgxIvdag}{iCEwDfy6TJyVjEzuHbBT7Q}{local}{local[9]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,159][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,177][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,196][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,270][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testDisableIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047233925,
  "executionTime": 374
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,306][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,353][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,367][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047234300,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,406][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,460][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,476][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047234398,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,521][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,569][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,603][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,675][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,690][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [KeywordFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047234515,
  "executionTime": 238
 }
]

[
 "TEST_STARTED",
 "ID#testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testEnableNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047234753,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,867][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,918][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,930][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testDisableDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047234859,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:54,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,050][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,068][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047234976,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,114][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,199][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,266][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,286][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [KeywordFieldMapperTests#testBoostImplicitlyEnablesNormsOnOldIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047235107,
  "executionTime": 258
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,373][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,433][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047235365,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,470][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,514][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,525][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testEnableStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047235460,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,552][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,628][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474047235545,
  "executionTime": 111
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,657][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,657][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,657][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:55,659][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.KeywordFieldMapperTests",
  "startTimestamp": 1474047233882,
  "executionTime": 1788
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayMetaStateTests",
   "displayName": "org.elasticsearch.gateway.GatewayMetaStateTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
   "children": [
    {
     "id": "ID#testNoWriteIfNothingChanged(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testNoWriteIfNothingChanged(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testNoWriteIfNothingChanged",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testAddCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testAddCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testAddCustomMetaDataOnUpgrade",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testMultipleCustomMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testMultipleCustomMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testMultipleCustomMetaDataUpgrade",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testVersionChangeIsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testVersionChangeIsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testVersionChangeIsAlwaysWritten",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testUpdateCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testUpdateCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testUpdateCustomMetaDataOnUpgrade",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testNoMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testNoMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testNoMetaDataUpgrade",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testWriteClosedIndex(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testWriteClosedIndex(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testWriteClosedIndex",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testNewShardsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testNewShardsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testNewShardsAlwaysWritten",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testCustomMetaDataValidation(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testCustomMetaDataValidation(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testCustomMetaDataValidation",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testAllUpToDateNothingWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testAllUpToDateNothingWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testAllUpToDateNothingWritten",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testCustomMetaDataNoChange(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testCustomMetaDataNoChange(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testCustomMetaDataNoChange",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testRemoveCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testRemoveCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testRemoveCustomMetaDataOnUpgrade",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "displayName": "testIndexMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
     "methodName": "testIndexMetaDataUpgrade",
     "className": "org.elasticsearch.gateway.GatewayMetaStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047235682
 }
]

[
 "TEST_STARTED",
 "ID#testNoWriteIfNothingChanged(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoWriteIfNothingChanged(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235700,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAddCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235708,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleCustomMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleCustomMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235712,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVersionChangeIsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionChangeIsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235715,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235720,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235723,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteClosedIndex(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteClosedIndex(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235725,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNewShardsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewShardsAlwaysWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235734,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCustomMetaDataValidation(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomMetaDataValidation(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235740,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllUpToDateNothingWritten(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllUpToDateNothingWritten(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235743,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCustomMetaDataNoChange(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomMetaDataNoChange(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveCustomMetaDataOnUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235753,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaDataUpgrade(org.elasticsearch.gateway.GatewayMetaStateTests)",
  "startTimestamp": 1474047235758,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayMetaStateTests",
  "startTimestamp": 1474047235682,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ExceptionSerializationTests",
   "displayName": "org.elasticsearch.ExceptionSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.ExceptionSerializationTests",
   "children": [
    {
     "id": "ID#testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testAliasesMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testFileSystemExceptions",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRoutingMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIndexFailedEngineException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testCircuitBreakingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testInvalidIndexTemplateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testFailedNodeException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRepositoryException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRepositoryException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRepositoryException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRecoveryEngineException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testThatIdsArePositive",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testTimestampParsingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testClusterBlockException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIOException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIOException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIOException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testExceptionRegistration",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIndexTemplateAlreadyExistsException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testActionNotFoundTransportException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testThatIdsAreUnique",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRecoverFilesRecoveryException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIllegalIndexShardStateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testConnectTransportException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIds(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIds(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIds",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testNoLongerPrimaryShardException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testNoLongerPrimaryShardException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testNoLongerPrimaryShardException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testInterruptedException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testInterruptedException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testInterruptedException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchPhaseExecutionException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testWithRestHeadersException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSnapshotException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSnapshotException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIllegalShardRoutingStateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testElasticsearchRemoteException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testElasticsearchRemoteException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testElasticsearchRemoteException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testNotSerializableExceptionWrapper",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testElasticsearchSecurityException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testParsingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testAlreadyExpiredException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testActionTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testActionTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testActionTransportException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchContextMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIndexTemplateMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchParseException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchParseException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchParseException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testQueryShardException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testQueryShardException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testQueryShardException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testBatchOperationException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047235774
 }
]

[
 "TEST_STARTED",
 "ID#testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235793,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235821,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235834,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235837,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235861,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235867,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235874,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRepositoryException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepositoryException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235878,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235898,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testSearchException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235934,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235940,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235944,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235947,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIOException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIOException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235951,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047235955,
  "executionTime": 15916
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251871,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251918,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251933,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251935,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251944,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251950,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testIds(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIds(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047251999,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoLongerPrimaryShardException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLongerPrimaryShardException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252003,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInterruptedException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInterruptedException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252006,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252010,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252016,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252022,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252028,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchRemoteException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchRemoteException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252035,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252038,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252061,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252064,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252069,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActionTransportException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionTransportException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252073,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252076,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252080,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSearchParseException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchParseException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252085,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryShardException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryShardException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252088,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1474047252093,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ExceptionSerializationTests",
  "startTimestamp": 1474047235774,
  "executionTime": 16326
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
   "children": [
    {
     "id": "ID#testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "displayName": "testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "methodName": "testDeleteMissing",
     "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "displayName": "testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "methodName": "testDeleteUnassigned",
     "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "displayName": "testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "methodName": "testDeleteSnapshotting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252106
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
  "startTimestamp": 1474047252151,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
  "startTimestamp": 1474047252167,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
  "startTimestamp": 1474047252171,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
  "startTimestamp": 1474047252106,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TextFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TextFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testPositionIncrementGap",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testEagerGlobalOrdinals",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testFielddata",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testAnalyzedFieldPositionIncrementWithoutPositions",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testEnableStore",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testIndexOptions",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDefaultPositionIncrementGap",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDisableNorms",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testTermVectors",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testFrequencyFilter",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testSearchQuoteAnalyzerSerialization",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testSearchAnalyzerSerialization",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testNotIndexedFieldPositionIncrement",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testNullConfigValuesFail",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDisableIndex",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252186
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,220][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,326][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,326][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,329][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,332][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,332][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,516][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,517][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,517][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,519][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{cxuiAJhXRte29vwanYmxSQ}{mW7vZvn6TXyGbr2metpTHg}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,519][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,531][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,548][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,787][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,861][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,894][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TextFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047252208,
  "executionTime": 747
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:12,962][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,033][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,048][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047252955,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,094][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,244][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,664][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testPositionIncrementGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047253085,
  "executionTime": 624
 }
]

[
 "TEST_STARTED",
 "ID#testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,715][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,803][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testEagerGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047253709,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,847][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,911][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,929][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testFielddata]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047253840,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:13,977][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,063][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testAnalyzedFieldPositionIncrementWithoutPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047253971,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,120][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,176][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,190][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testEnableStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254111,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,224][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,295][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254218,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,331][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,385][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,516][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDefaultPositionIncrementGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254324,
  "executionTime": 223
 }
]

[
 "TEST_STARTED",
 "ID#testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,553][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,648][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDisableNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254548,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,694][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,786][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testTermVectors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254688,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,833][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,926][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,944][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testFrequencyFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254826,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:14,989][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,045][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,059][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testSearchQuoteAnalyzerSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047254981,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,100][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,170][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testSearchAnalyzerSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047255094,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,217][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,283][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,296][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testNotIndexedFieldPositionIncrement]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047255211,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,333][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,401][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,414][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testNullConfigValuesFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047255327,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,457][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,539][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDisableIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474047255451,
  "executionTime": 122
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,574][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,574][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,574][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:34:15,576][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TextFieldMapperTests",
  "startTimestamp": 1474047252186,
  "executionTime": 3408
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.PrefixQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBlendedRewriteMethod(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testBlendedRewriteMethod(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testBlendedRewriteMethod",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.PrefixQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047255600
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,632][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6DN1Fl1YRLCQ2zqpvGEb5A}{local}{local[124]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,639][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,640][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,664][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,664][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,664][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,665][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,665][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,665][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,671][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,671][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,671][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,673][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,673][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,673][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,675][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,675][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,675][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,678][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,678][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,678][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,680][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,680][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,680][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,692][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,692][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,692][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,696][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,696][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,696][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,704][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,704][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,704][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,708][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,708][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,708][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,721][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,721][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:34:15,721][WARN ][org.elasticsearch.deprecation.index.mapper]  [uw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255618,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255738,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255740,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255743,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255776,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255779,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255783,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255786,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255791,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255795,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBlendedRewriteMethod(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendedRewriteMethod(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255801,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.PrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.PrefixQueryBuilderTests)",
  "startTimestamp": 1474047255803,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.PrefixQueryBuilderTests",
  "startTimestamp": 1474047255600,
  "executionTime": 239
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "children": [
    {
     "id": "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "displayName": "testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "methodName": "testDocValue",
     "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047255845
 }
]

[
 "TEST_STARTED",
 "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:15,882][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:15,961][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:15,961][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:15,970][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:15,973][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:15,973][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,151][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,152][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,152][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,156][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{fgEM94aCR36pPKszB0jg0g}{6-_ajeeZR42c0YpmaIGF-g}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,156][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,173][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,191][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,260][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,385][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [BinaryDVFieldDataTests#testDocValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
  "startTimestamp": 1474047255869,
  "executionTime": 578
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,454][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,633][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [BinaryDVFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
  "startTimestamp": 1474047256448,
  "executionTime": 226
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,675][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,676][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,676][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:16,678][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
  "startTimestamp": 1474047255845,
  "executionTime": 1091
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ElasticsearchCliTests",
   "displayName": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
   "children": [
    {
     "id": "ID#testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testVersion",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testThatPidFileCanBeConfigured",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testUnknownOption",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testElasticsearchSettingCanNotBeEmpty",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testElasticsearchSettings",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testThatParsingDaemonizeWorks",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testPositionalArgs",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047256952
 }
]

[
 "TEST_STARTED",
 "ID#testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257010,
  "executionTime": 307
 }
]

[
 "TEST_STARTED",
 "ID#testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257318,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257325,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257330,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257336,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257339,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474047257343,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ElasticsearchCliTests",
  "startTimestamp": 1474047256952,
  "executionTime": 403
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "children": [
    {
     "id": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "displayName": "testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "methodName": "testKeepTypes",
     "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047257359
 }
]

[
 "TEST_STARTED",
 "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
  "startTimestamp": 1474047257385,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
  "startTimestamp": 1474047257359,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginInfoTests",
   "displayName": "org.elasticsearch.plugins.PluginInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginInfoTests",
   "children": [
    {
     "id": "ID#testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesJvmMissingClassname",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesElasticsearchVersionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesBadJavaVersionFormat",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesBogusElasticsearchVersion",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesJavaVersionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testPluginListSorted",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesOldElasticsearchVersion",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesNameMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromProperties",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesJavaVersionIncompatible",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesVersionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    },
    {
     "id": "ID#testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "displayName": "testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)",
     "methodName": "testReadFromPropertiesDescriptionMissing",
     "className": "org.elasticsearch.plugins.PluginInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047257411
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesJvmMissingClassname(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257450,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesElasticsearchVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257470,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesBadJavaVersionFormat(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257486,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesBogusElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257499,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesJavaVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257512,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginListSorted(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257525,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesOldElasticsearchVersion(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257527,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesNameMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257545,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromProperties(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257586,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesJavaVersionIncompatible(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257598,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesVersionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257614,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromPropertiesDescriptionMissing(org.elasticsearch.plugins.PluginInfoTests)",
  "startTimestamp": 1474047257634,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginInfoTests",
  "startTimestamp": 1474047257411,
  "executionTime": 253
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.SuggestBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.SuggestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.SuggestBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.SuggestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalSuggestionName(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "displayName": "testIllegalSuggestionName(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "methodName": "testIllegalSuggestionName",
     "className": "org.elasticsearch.search.suggest.SuggestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.SuggestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.SuggestBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.SuggestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047257670
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.SuggestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.SuggestBuilderTests)",
  "startTimestamp": 1474047257692,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalSuggestionName(org.elasticsearch.search.suggest.SuggestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalSuggestionName(org.elasticsearch.search.suggest.SuggestBuilderTests)",
  "startTimestamp": 1474047257771,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.SuggestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.SuggestBuilderTests)",
  "startTimestamp": 1474047257774,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.SuggestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.SuggestBuilderTests)",
  "startTimestamp": 1474047257812,
  "executionTime": 147
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.SuggestBuilderTests",
  "startTimestamp": 1474047257670,
  "executionTime": 292
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.SuggestModeTests",
   "displayName": "org.elasticsearch.search.suggest.term.SuggestModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.SuggestModeTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.SuggestModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.SuggestModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.SuggestModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.SuggestModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.SuggestModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047257967
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SuggestModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SuggestModeTests)",
  "startTimestamp": 1474047258006,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.SuggestModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SuggestModeTests)",
  "startTimestamp": 1474047258008,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.SuggestModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SuggestModeTests)",
  "startTimestamp": 1474047258010,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.SuggestModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.SuggestModeTests)",
  "startTimestamp": 1474047258012,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.SuggestModeTests",
  "startTimestamp": 1474047257967,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.similarity.SimilarityTests",
   "displayName": "org.elasticsearch.index.similarity.SimilarityTests",
   "methodName": null,
   "className": "org.elasticsearch.index.similarity.SimilarityTests",
   "children": [
    {
     "id": "ID#testResolveSimilaritiesFromMapping_LMJelinekMercer(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_LMJelinekMercer(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_LMJelinekMercer",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testSimilarityDefaultBackCompat(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testSimilarityDefaultBackCompat(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testSimilarityDefaultBackCompat",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_DFI(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_DFI(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_DFI",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_classic(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_classic(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_classic",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveDefaultSimilarities(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveDefaultSimilarities(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveDefaultSimilarities",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_IB(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_IB(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_IB",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_bm25(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_bm25(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_bm25",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_LMDirichlet(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_LMDirichlet(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_LMDirichlet",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_Unknown(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_Unknown(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_Unknown",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    },
    {
     "id": "ID#testResolveSimilaritiesFromMapping_DFR(org.elasticsearch.index.similarity.SimilarityTests)",
     "displayName": "testResolveSimilaritiesFromMapping_DFR(org.elasticsearch.index.similarity.SimilarityTests)",
     "methodName": "testResolveSimilaritiesFromMapping_DFR",
     "className": "org.elasticsearch.index.similarity.SimilarityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047258021
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_LMJelinekMercer(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,075][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,102][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,102][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,106][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,108][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,108][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,320][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,321][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,321][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,322][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{qqgBMXJjTI6STJY7G9yrDg}{1CuCe4wCTjS2iSxh67OsjQ}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,323][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,334][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,373][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,435][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,449][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_LMJelinekMercer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_LMJelinekMercer(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047258063,
  "executionTime": 418
 }
]

[
 "TEST_STARTED",
 "ID#testSimilarityDefaultBackCompat(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_v2.x] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,532][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_v2.x][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,550][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_v3.x] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,597][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_v3.x][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,613][INFO ][org.elasticsearch.index.similarity] [node_s_0] [test_v3.x] [SimilarityTests#testSimilarityDefaultBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimilarityDefaultBackCompat(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047258481,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_DFI(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,664][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,719][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,732][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_DFI]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_DFI(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047258658,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_classic(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,766][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,824][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,837][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_classic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_classic(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047258759,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testResolveDefaultSimilarities(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,871][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:18,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,028][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveDefaultSimilarities]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveDefaultSimilarities(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047258865,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_IB(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,080][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,142][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_IB]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_IB(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047259073,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_bm25(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,182][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,228][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,242][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_bm25]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_bm25(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047259175,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_LMDirichlet(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,279][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,350][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_LMDirichlet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_LMDirichlet(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047259273,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_Unknown(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,381][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,425][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,443][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_Unknown]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_Unknown(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047259375,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testResolveSimilaritiesFromMapping_DFR(org.elasticsearch.index.similarity.SimilarityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,553][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,635][INFO ][org.elasticsearch.index.similarity] [node_s_0] [foo] [SimilarityTests#testResolveSimilaritiesFromMapping_DFR]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveSimilaritiesFromMapping_DFR(org.elasticsearch.index.similarity.SimilarityTests)",
  "startTimestamp": 1474047259482,
  "executionTime": 193
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,675][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,676][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,676][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:19,677][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.similarity.SimilarityTests",
  "startTimestamp": 1474047258021,
  "executionTime": 1666
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.DeprecationRestHandlerTests",
   "displayName": "org.elasticsearch.rest.DeprecationRestHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
   "children": [
    {
     "id": "ID#testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidHeaderValueNull",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testNullDeprecationLogger",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testHandleRequestLogsWarningThenForwards",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidHeaderValueEmpty",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testValidHeaderValue",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testNullHandler",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidHeaderValue",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidDeprecationMessageThrowsException",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047259693
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259718,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259739,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259741,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259780,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259784,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259786,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259790,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474047259793,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.DeprecationRestHandlerTests",
  "startTimestamp": 1474047259693,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
   "displayName": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
   "children": [
    {
     "id": "ID#testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testThreadedUpdatesToChildBreaker",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    },
    {
     "id": "ID#testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testThreadedUpdatesToBreaker",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    },
    {
     "id": "ID#testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testThreadedUpdatesToChildBreakerWithParentLimit",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    },
    {
     "id": "ID#testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testConstantFactor",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047259802
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,840][WARN ][org.elasticsearch.common.breaker] [request] New used memory 15608 [15.2kb] for data of [test] would be larger than configured breaker: 15607 [15.2kb], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474047259823,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,848][WARN ][org.elasticsearch.common.breaker] New used memory 18570 [18.1kb] from field [test] would be larger than configured breaker: 18569 [18.1kb], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474047259842,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,854][INFO ][org.elasticsearch.common.breaker] --> NUM_THREADS: [7], BYTES_PER_THREAD: [895], TOTAL_BYTES: [6265], PARENT_LIMIT: [6263], CHILD_LIMIT: [6273]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,854][INFO ][org.elasticsearch.common.breaker] --> starting threads...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,858][INFO ][org.elasticsearch.common.breaker] --> parent tripped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,858][INFO ][org.elasticsearch.common.breaker] --> parent tripped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,858][INFO ][org.elasticsearch.common.breaker] --> child breaker: used: 6263, limit: 6273%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,858][INFO ][org.elasticsearch.common.breaker] --> parent tripped: 2, total trip count: 2 (expecting 1-2 for each)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474047259850,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,860][WARN ][org.elasticsearch.common.breaker] New used memory 16 [16b] from field [myfield] would be larger than configured breaker: 15 [15b], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:19,861][WARN ][org.elasticsearch.common.breaker] New used memory 19 [19b] from field [myfield] would be larger than configured breaker: 15 [15b], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474047259859,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
  "startTimestamp": 1474047259802,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047259868
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:19,906][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AGzv3mKLTpSk3DGN8IsTSg}{local}{local[125]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474047259920,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474047259926,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474047260045,
  "executionTime": 47
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
  "startTimestamp": 1474047259868,
  "executionTime": 307
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260180
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,205][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MnndUO1QSP2pdbKhUvxuog}{local}{local[126]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
  "startTimestamp": 1474047260228,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
  "startTimestamp": 1474047260231,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,239][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"min_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,240][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"min_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests)",
  "startTimestamp": 1474047260234,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MinBucketTests",
  "startTimestamp": 1474047260180,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
   "displayName": "org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)",
     "displayName": "testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260249
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests)",
  "startTimestamp": 1474047260272,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.operation.hash.murmur3.Murmur3HashFunctionTests",
  "startTimestamp": 1474047260249,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
   "displayName": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "children": [
    {
     "id": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "displayName": "testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "methodName": "testListenerIsCallableFromNetworkThreads",
     "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260280
 }
]

[
 "TEST_STARTED",
 "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
  "startTimestamp": 1474047260298,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
  "startTimestamp": 1474047260280,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.SumTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.SumTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260310
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:20,331][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VTgUM5MPSDqpAMjZKv0FyA}{local}{local[127]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)",
  "startTimestamp": 1474047260342,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)",
  "startTimestamp": 1474047260345,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)",
  "startTimestamp": 1474047260347,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.SumTests",
  "startTimestamp": 1474047260310,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoveriesCollectionTests",
   "displayName": "org.elasticsearch.recovery.RecoveriesCollectionTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
   "children": [
    {
     "id": "ID#testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testLastAccessTimeUpdate",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testIndexingDuringFileRecovery",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testResetRecovery",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testRecoveryTimeout",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "displayName": "testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)",
     "methodName": "testRecoveryCancellation",
     "className": "org.elasticsearch.recovery.RecoveriesCollectionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260368
 }
]

[
 "TEST_STARTED",
 "ID#testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLastAccessTimeUpdate(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474047260381,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,503][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,503][TRACE][org.elasticsearch.index.shard] [s0] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=hyWs1B33QxezmgE4yQ00Wg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,531][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,532][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=yQ9ek8KpQI2CHrmrYPdwRw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,541][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]->[RECOVERING], reason [store]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,541][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] starting recovery from store ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,577][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [post recovery from shard_store]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,578][TRACE][org.elasticsearch.index.shard] [s1] [test][0] recovery completed from [shard_store], took [35ms]%0A    index    : files           [0] with total_size [0b], took[4ms]%0A             : recovered_files [0] with total_size [0b]%0A             : reusing_files   [0] with total_size [0b]%0A    verify_index    : took [0s], check_index [0s]%0A    translog : number_of_operations [0], took [30ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,579][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,579][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,580][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]->[RECOVERING], reason [remote]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,647][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [peer recovery done]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,647][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,647][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,650][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][1][org.elasticsearch.index.mapper.ParseContext$Document@4e8d6a58]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,659][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][1][org.elasticsearch.index.mapper.ParseContext$Document@edda74d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,665][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][2][org.elasticsearch.index.mapper.ParseContext$Document@2899080f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,665][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][2][org.elasticsearch.index.mapper.ParseContext$Document@6aac22ff]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,666][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][3][org.elasticsearch.index.mapper.ParseContext$Document@2b757ec4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,667][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][3][org.elasticsearch.index.mapper.ParseContext$Document@4ac15a32]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,670][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][4][org.elasticsearch.index.mapper.ParseContext$Document@6755f696]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,671][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][4][org.elasticsearch.index.mapper.ParseContext$Document@6f2526a8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,671][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][5][org.elasticsearch.index.mapper.ParseContext$Document@71b3654e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,672][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][5][org.elasticsearch.index.mapper.ParseContext$Document@375d3220]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,673][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][6][org.elasticsearch.index.mapper.ParseContext$Document@32763980]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,674][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][6][org.elasticsearch.index.mapper.ParseContext$Document@4712ad81]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,675][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][7][org.elasticsearch.index.mapper.ParseContext$Document@31ad3525]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,676][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][7][org.elasticsearch.index.mapper.ParseContext$Document@781fa089]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,676][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][8][org.elasticsearch.index.mapper.ParseContext$Document@37c6f95f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,677][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][8][org.elasticsearch.index.mapper.ParseContext$Document@32dfe5d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,678][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][9][org.elasticsearch.index.mapper.ParseContext$Document@3befdfc3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,679][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][9][org.elasticsearch.index.mapper.ParseContext$Document@499e8477]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,679][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][10][org.elasticsearch.index.mapper.ParseContext$Document@29a3c762]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,680][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][10][org.elasticsearch.index.mapper.ParseContext$Document@5b8dafd4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,681][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][11][org.elasticsearch.index.mapper.ParseContext$Document@38e6365d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,682][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][11][org.elasticsearch.index.mapper.ParseContext$Document@1b38678]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,683][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][12][org.elasticsearch.index.mapper.ParseContext$Document@4ca37d83]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,683][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][12][org.elasticsearch.index.mapper.ParseContext$Document@552eab76]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,684][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][13][org.elasticsearch.index.mapper.ParseContext$Document@3087937e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,685][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][13][org.elasticsearch.index.mapper.ParseContext$Document@4390e2b1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,685][TRACE][org.elasticsearch.index.shard] [s1] [test][0] flush with FlushRequest{waitIfOngoing=false, force=false}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:20,978][TRACE][org.elasticsearch.index.shard] [s1] [test][0] flush with FlushRequest{waitIfOngoing=false, force=false}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,165][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,166][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=fmfVlvSFRTKtKZHzRUvZIQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,181][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [CREATED]->[RECOVERING], reason [remote]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,250][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@1f37f5ab]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,272][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@37df419f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,279][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@36647417]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,279][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@4c4b114b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,280][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@7fa7f7b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,281][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@7f705e09]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,282][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@62682854]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,283][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@5aae6ba0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,284][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@2382dd07]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,284][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@32f91adc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,285][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@5c0844ae]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,286][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@21722097]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,287][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@687231fb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,288][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@3c81d471]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,288][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@3a8ed545]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,289][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@3d333eb0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,290][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@640ddf6d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,291][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@55520434]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,291][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@5fd5f573]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,292][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@68318e37]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,293][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@7e9963]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,294][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@73aaee6f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,295][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@734c8b76]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,295][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@34087085]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,296][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@499430e9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,297][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@748405f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,297][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@1162bcc5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,298][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@38e60e9d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,299][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@b0bb2b6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,300][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@31d47c09]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,301][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@35dd6a60]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,301][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@6e86006e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,371][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,371][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@858e9ad]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,375][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][15]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,375][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@13f1ba88]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,376][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][16]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,376][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@5e48ca1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,377][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,377][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@44c1f82a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,377][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][18]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,377][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@5ee20709]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,378][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][19]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,378][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@1eb8307a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,379][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,379][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@3f6fa93d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,379][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][21]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,379][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@29a328e6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,380][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][22]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,380][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@430621d4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,380][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][23]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,381][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@3ab123ff]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,381][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][24]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,382][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@5b8e9820]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,383][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][25]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,383][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@4c20c8e9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,384][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][26]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,384][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@6a1f947d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,384][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][27]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,385][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@320caf0b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,385][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][28]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,385][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@1b3dc718]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,385][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][29]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,386][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@3e762738]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,532][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [peer recovery done]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,532][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,532][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,532][TRACE][org.elasticsearch.index.shard] [s2] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [148.2kb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,635][TRACE][org.elasticsearch.index.shard] [s2] [test][0] remove [148.2kb] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,638][TRACE][org.elasticsearch.index.shard] [s2] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [148.2kb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,819][TRACE][org.elasticsearch.index.shard] [s2] [test][0] remove [148.2kb] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,820][TRACE][org.elasticsearch.index.shard] [s2] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [0b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,820][TRACE][org.elasticsearch.index.shard] [s2] [test][0] remove [0b] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,821][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,861][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:21,897][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingDuringFileRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474047260476,
  "executionTime": 1444
 }
]

[
 "TEST_STARTED",
 "ID#testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResetRecovery(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474047261920,
  "executionTime": 781
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryTimeout(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474047262701,
  "executionTime": 202
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryCancellation(org.elasticsearch.recovery.RecoveriesCollectionTests)",
  "startTimestamp": 1474047262904,
  "executionTime": 97
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoveriesCollectionTests",
  "startTimestamp": 1474047260368,
  "executionTime": 3003
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "children": [
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHasSinglePage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSinglePage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263380
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263483,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263496,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263571,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263584,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263649,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263670,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263714,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263716,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263721,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047263723,
  "executionTime": 332
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264055,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264059,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264066,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264081,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264088,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264115,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264119,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264137,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264159,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264177,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264192,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264199,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264204,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264217,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264239,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264260,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264300,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264314,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264335,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264395,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264430,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474047264470,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
  "startTimestamp": 1474047263380,
  "executionTime": 1102
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
   "children": [
    {
     "id": "ID#testMultipleFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "displayName": "testMultipleFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "methodName": "testMultipleFiltering",
     "className": "org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
     "children": []
    },
    {
     "id": "ID#testFetchSource(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "displayName": "testFetchSource(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "methodName": "testFetchSource",
     "className": "org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
     "children": []
    },
    {
     "id": "ID#testSourceDisabled(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "displayName": "testSourceDisabled(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "methodName": "testSourceDisabled",
     "className": "org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
     "children": []
    },
    {
     "id": "ID#testBasicFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "displayName": "testBasicFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
     "methodName": "testBasicFiltering",
     "className": "org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047264487
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
  "startTimestamp": 1474047264515,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFetchSource(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFetchSource(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
  "startTimestamp": 1474047264519,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSourceDisabled(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSourceDisabled(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
  "startTimestamp": 1474047264521,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasicFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicFiltering(org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests)",
  "startTimestamp": 1474047264523,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.FetchSourceSubPhaseTests",
  "startTimestamp": 1474047264487,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientHeadersTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
   "children": [
    {
     "id": "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testWithSniffing",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047264536
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,573][INFO ][org.elasticsearch.plugins] [test-testActions] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,574][INFO ][org.elasticsearch.plugins] [test-testActions] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,624][INFO ][org.elasticsearch.client.transport] [test-testActions] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1474047264563,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,665][INFO ][org.elasticsearch.plugins] [test-testWithSniffing] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,667][INFO ][org.elasticsearch.plugins] [test-testWithSniffing] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,701][INFO ][org.elasticsearch.client.transport] [test-testWithSniffing] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,706][INFO ][org.elasticsearch.plugins] [transport_client_testWithSniffing_1] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,706][INFO ][org.elasticsearch.plugins] [transport_client_testWithSniffing_1] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,749][INFO ][org.elasticsearch.client.transport] [transport_client_testWithSniffing_1] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1474047264648,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,778][INFO ][org.elasticsearch.plugins] [test-testOverrideHeader] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,778][INFO ][org.elasticsearch.plugins] [test-testOverrideHeader] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:24,810][INFO ][org.elasticsearch.client.transport] [test-testOverrideHeader] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1474047264769,
  "executionTime": 43
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientHeadersTests",
  "startTimestamp": 1474047264536,
  "executionTime": 286
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.replication.IndexLevelReplicationTests",
   "displayName": "org.elasticsearch.index.replication.IndexLevelReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.replication.IndexLevelReplicationTests",
   "children": [
    {
     "id": "ID#testSimpleAppendOnlyReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "displayName": "testSimpleAppendOnlyReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "methodName": "testSimpleAppendOnlyReplication",
     "className": "org.elasticsearch.index.replication.IndexLevelReplicationTests",
     "children": []
    },
    {
     "id": "ID#testAppendWhileRecovering(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "displayName": "testAppendWhileRecovering(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "methodName": "testAppendWhileRecovering",
     "className": "org.elasticsearch.index.replication.IndexLevelReplicationTests",
     "children": []
    },
    {
     "id": "ID#testSimpleReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "displayName": "testSimpleReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "methodName": "testSimpleReplication",
     "className": "org.elasticsearch.index.replication.IndexLevelReplicationTests",
     "children": []
    },
    {
     "id": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "displayName": "testIndexingDuringFileRecovery(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
     "methodName": "testIndexingDuringFileRecovery",
     "className": "org.elasticsearch.index.replication.IndexLevelReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047264828
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAppendOnlyReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAppendOnlyReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
  "startTimestamp": 1474047264845,
  "executionTime": 744
 }
]

[
 "TEST_STARTED",
 "ID#testAppendWhileRecovering(org.elasticsearch.index.replication.IndexLevelReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendWhileRecovering(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
  "startTimestamp": 1474047265589,
  "executionTime": 1041
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleReplication(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
  "startTimestamp": 1474047266631,
  "executionTime": 1610
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.IndexLevelReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,285][DEBUG][org.elasticsearch.index.shard] [s0] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,286][TRACE][org.elasticsearch.index.shard] [s0] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=Mi67cAl-Toyi4qVWMsxMGg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,334][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,335][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=GFNGHbdYS1WCHIRhrnhw6w]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,377][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]->[RECOVERING], reason [store]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,377][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] starting recovery from store ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,476][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [post recovery from shard_store]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,477][TRACE][org.elasticsearch.index.shard] [s1] [test][0] recovery completed from [shard_store], took [99ms]%0A    index    : files           [0] with total_size [0b], took[28ms]%0A             : recovered_files [0] with total_size [0b]%0A             : reusing_files   [0] with total_size [0b]%0A    verify_index    : took [0s], check_index [0s]%0A    translog : number_of_operations [0], took [70ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,477][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,477][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,477][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [CREATED]->[RECOVERING], reason [remote]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,494][TRACE][org.elasticsearch.index.replication] [s1] [test][0] captured translog id [-1] for recovery%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,506][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase1] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: recovering [segments_1], does not exists in remote%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,506][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase1] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: recovering_files [1] with total_size [130b], reusing_files [0] with total_size [0b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,579][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase1] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: prepare remote engine for translog%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase1] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: remote engine start took [78.1ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase1] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: took [0s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] snapshot translog for recovery. current size is [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase2] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: sending transaction log operations%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] no translog operations to send to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] sent final batch of [0][0b] (total: [0]) translog operations to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] recovery [phase2] to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: took [188.9micros]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] finalizing recovery to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [test][0] finalizing recovery to {s1}{s1}{yqCCX4K6RCeOzPqPtk3EkQ}{local}{local[s1]}: took [102.1micros]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,658][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [peer recovery done]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,659][DEBUG][org.elasticsearch.index.shard] [s1] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,659][TRACE][org.elasticsearch.index.shard] [s1] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,659][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][1][org.elasticsearch.index.mapper.ParseContext$Document@60a76a8f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,668][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][1], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,668][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][1], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,669][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][1][org.elasticsearch.index.mapper.ParseContext$Document@296bb480]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,696][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][2][org.elasticsearch.index.mapper.ParseContext$Document@3ea027e9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,696][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][2], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,697][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][2], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,697][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][2][org.elasticsearch.index.mapper.ParseContext$Document@11261005]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,697][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][3][org.elasticsearch.index.mapper.ParseContext$Document@669a91c8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,698][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][3], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,698][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][3], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,698][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][3][org.elasticsearch.index.mapper.ParseContext$Document@1b31776f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,699][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][4][org.elasticsearch.index.mapper.ParseContext$Document@2374e861]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,700][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][4], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,700][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][4], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,700][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][4][org.elasticsearch.index.mapper.ParseContext$Document@3ea5f4f2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,700][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][5][org.elasticsearch.index.mapper.ParseContext$Document@3a3e241b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,701][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][5], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,701][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][5], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,701][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][5][org.elasticsearch.index.mapper.ParseContext$Document@7e65192d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,702][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][6][org.elasticsearch.index.mapper.ParseContext$Document@64cef212]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,702][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][6], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,702][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][6], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,702][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][6][org.elasticsearch.index.mapper.ParseContext$Document@6e8c8ad6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,703][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][7][org.elasticsearch.index.mapper.ParseContext$Document@a853eed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,703][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][7], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,703][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][7], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,703][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][7][org.elasticsearch.index.mapper.ParseContext$Document@a2d4dba]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,704][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][8][org.elasticsearch.index.mapper.ParseContext$Document@70e086b7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,704][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][8], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,704][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][8], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,705][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][8][org.elasticsearch.index.mapper.ParseContext$Document@7d3ab483]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,705][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][9][org.elasticsearch.index.mapper.ParseContext$Document@57374edd]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,705][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][9], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,706][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][9], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,706][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][9][org.elasticsearch.index.mapper.ParseContext$Document@3105fde7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,707][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][10][org.elasticsearch.index.mapper.ParseContext$Document@4aa0066a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,713][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][10], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,713][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][10], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,713][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][10][org.elasticsearch.index.mapper.ParseContext$Document@538751f0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,714][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][11][org.elasticsearch.index.mapper.ParseContext$Document@593d5ac5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,714][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][11], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,715][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][11], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,715][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][11][org.elasticsearch.index.mapper.ParseContext$Document@66c246dc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,715][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][12][org.elasticsearch.index.mapper.ParseContext$Document@62a5643c]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,716][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][12], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,716][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][12], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,716][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][12][org.elasticsearch.index.mapper.ParseContext$Document@5e53161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,717][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][13][org.elasticsearch.index.mapper.ParseContext$Document@72563165]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,717][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][13], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,717][TRACE][org.elasticsearch.index.replication] [s1] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][13], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,717][TRACE][org.elasticsearch.index.shard] [s1] [test][0] index [type][13][org.elasticsearch.index.mapper.ParseContext$Document@4c23485]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:28,718][TRACE][org.elasticsearch.index.shard] [s1] [test][0] flush with FlushRequest{waitIfOngoing=false, force=false}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,325][TRACE][org.elasticsearch.index.shard] [s1] [test][0] flush with FlushRequest{waitIfOngoing=false, force=false}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,606][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [CREATED]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,606][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [test][0] writing shard state, reason [initial state with allocation id [[id=G8ihB6eLRESFX1inzfjFlw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,624][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [CREATED]->[RECOVERING], reason [remote]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,630][TRACE][org.elasticsearch.index.replication] [s2] [test][0] captured translog id [2] for recovery%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,637][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: recovering [_0.cfe], does not exists in remote%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,637][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: recovering [_0.si], does not exists in remote%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,637][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: recovering [_0.cfs], does not exists in remote%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,637][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: recovering [segments_2], does not exists in remote%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,637][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: recovering_files [4] with total_size [2.6kb], reusing_files [0] with total_size [0b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,489][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@8e20f23]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,548][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][14], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,548][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][14], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,548][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@c90d881]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,603][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][14], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:34:30,605 TEST-IndexLevelReplicationTests.testIndexingDuringFileRecovery-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.logParent(LoggerConfig.java:381)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:376)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.DefaultReliabilityStrategy.log(DefaultReliabilityStrategy.java:49)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.trace(AbstractLogger.java:2215)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation$1.onFailure(ReplicationOperation.java:193)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicasRef.performOn(ESIndexLevelReplicationTestCase.java:494)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicasRef.performOn(ESIndexLevelReplicationTestCase.java:479)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.performOnReplica(ReplicationOperation.java:184)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.performOnReplicas(ReplicationOperation.java:168)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:129)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicationGroup.index(ESIndexLevelReplicationTestCase.java:277)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicationGroup.indexDocs(ESIndexLevelReplicationTestCase.java:259)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase.testIndexingDuringFileRecovery(ESIndexLevelReplicationTestCase.java:158)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(Tes"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "tRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,609][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@512d9a10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,610][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][15], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,610][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][15], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,610][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@706d6d35]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,614][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][15], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:34:30,617 TEST-IndexLevelReplicationTests.testIndexingDuringFileRecovery-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.logParent(LoggerConfig.java:381)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:376)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.DefaultReliabilityStrategy.log(DefaultReliabilityStrategy.java:49)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.trace(AbstractLogger.java:2215)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation$1.onFailure(ReplicationOperation.java:193)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicasRef.performOn(ESIndexLevelReplicationTestCase.java:494)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicasRef.performOn(ESIndexLevelReplicationTestCase.java:479)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.performOnReplica(ReplicationOperation.java:184)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.performOnReplicas(ReplicationOperation.java:168)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:129)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicationGroup.index(ESIndexLevelReplicationTestCase.java:277)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicationGroup.indexDocs(ESIndexLevelReplicationTestCase.java:259)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase.testIndexingDuringFileRecovery(ESIndexLevelReplicationTestCase.java:158)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(Tes"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "tRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,623][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@17db1f41]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,624][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][16], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,624][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][16], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,624][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@77fc6b8a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,625][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][16], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:34:30,627 TEST-IndexLevelReplicationTests.testIndexingDuringFileRecovery-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.logParent(LoggerConfig.java:381)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:376)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.DefaultReliabilityStrategy.log(DefaultReliabilityStrategy.java:49)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.trace(AbstractLogger.java:2215)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation$1.onFailure(ReplicationOperation.java:193)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicasRef.performOn(ESIndexLevelReplicationTestCase.java:494)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicasRef.performOn(ESIndexLevelReplicationTestCase.java:479)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.performOnReplica(ReplicationOperation.java:184)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.performOnReplicas(ReplicationOperation.java:168)%0D%0A%09at org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:129)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicationGroup.index(ESIndexLevelReplicationTestCase.java:277)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase$ReplicationGroup.indexDocs(ESIndexLevelReplicationTestCase.java:259)%0D%0A%09at org.elasticsearch.index.replication.ESIndexLevelReplicationTestCase.testIndexingDuringFileRecovery(ESIndexLevelReplicationTestCase.java:158)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(Tes"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "tRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,631][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@536bafa1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,631][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][17], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,631][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][17], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,631][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@3cfba380]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,632][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][17], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,634][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@7793ed21]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,634][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][18], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,634][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][18], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,635][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@2887c46b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,635][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][18], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,637][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@6325afac]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,638][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][19], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,638][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][19], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,638][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@30981c5b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,639][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][19], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,646][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@48876326]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,646][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][20], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,646][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][20], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,647][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@4f539253]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,701][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][20], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,706][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@350237ca]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,707][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][21], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,707][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][21], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,707][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@10e6f1f9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,707][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][21], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,710][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@d3bb3fc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,710][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][22], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,710][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][22], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,710][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@48f5dfe0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,711][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][22], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,731][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@2afb2320]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,732][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][23], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,732][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][23], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,732][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@7f89f701]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,734][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][23], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,742][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@8cdcced]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,742][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][24], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,743][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][24], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,748][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@89158ab]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,749][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][24], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,756][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@750ea727]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,756][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][25], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,756][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][25], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,757][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@4b7e57f6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,757][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][25], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,779][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@4dd57e10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,779][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][26], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,780][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][26], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,780][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@7ddfe81d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,780][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][26], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,783][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@40dddd60]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,786][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][27], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,786][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][27], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,786][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@38a9d83e]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,786][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][27], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,788][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@40ebcf6f]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,788][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][28], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,788][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][28], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,789][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@2e5ac3e1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,789][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][28], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,791][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@47188805]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,791][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] op [indexing] completed on primary for request [index {[test][type][29], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,791][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s1], [R], s[STARTED], a[id=GFNGHbdYS1WCHIRhrnhw6w] for request [index {[test][type][29], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,796][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@435afabf]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:30,796][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [[test][0]] sending op [indexing] to replica [test][0], node[s2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=G8ihB6eLRESFX1inzfjFlw], unassigned_info[[reason=REALLOCATED_REPLICA], at[2016-09-16T17:34:29.556Z], delayed=false, details[auto generated for test], allocation_status[no_attempt]] for request [index {[test][type][29], source[{}]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,341][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: prepare remote engine for translog%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,574][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: remote engine start took [232.4ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,574][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase1] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: took [0s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,574][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] snapshot translog for recovery. current size is [16]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,576][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase2] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: sending transaction log operations%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,577][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,577][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][14][org.elasticsearch.index.mapper.ParseContext$Document@7b7d6a53]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,585][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][15]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,585][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][15][org.elasticsearch.index.mapper.ParseContext$Document@f729435]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,585][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][16]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,585][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][16][org.elasticsearch.index.mapper.ParseContext$Document@58387fa2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,586][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,589][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][17][org.elasticsearch.index.mapper.ParseContext$Document@6c8c2e38]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,590][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][18]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,593][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][18][org.elasticsearch.index.mapper.ParseContext$Document@cb82095]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,594][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][19]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,594][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][19][org.elasticsearch.index.mapper.ParseContext$Document@50a38420]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,594][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,594][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][20][org.elasticsearch.index.mapper.ParseContext$Document@3e523f51]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,595][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][21]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,595][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][21][org.elasticsearch.index.mapper.ParseContext$Document@336c6ceb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,595][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][22]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,595][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][22][org.elasticsearch.index.mapper.ParseContext$Document@778a310c]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,595][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][23]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,595][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][23][org.elasticsearch.index.mapper.ParseContext$Document@4bb2b1d9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,596][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][24]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,596][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][24][org.elasticsearch.index.mapper.ParseContext$Document@5c85bb30]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,596][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][25]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,596][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][25][org.elasticsearch.index.mapper.ParseContext$Document@5532a354]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,597][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][26]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,597][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][26][org.elasticsearch.index.mapper.ParseContext$Document@5172fde4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,597][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][27]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,597][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][27][org.elasticsearch.index.mapper.ParseContext$Document@1d7abca6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,605][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][28]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,606][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][28][org.elasticsearch.index.mapper.ParseContext$Document@7d571db]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,606][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [translog] recover [index] op of [type][29]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,606][TRACE][org.elasticsearch.index.shard] [s2] [test][0] index [type][29][org.elasticsearch.index.mapper.ParseContext$Document@63b0f11]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,617][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] sent final batch of [16][416b] (total: [16]) translog operations to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,617][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] recovery [phase2] to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: took [40.6ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,617][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] finalizing recovery to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,777][TRACE][org.elasticsearch.index.replication] [s2] [test][0] [test][0] finalizing recovery to {s2}{s2}{CpBN1I0HRweojrsUJ-r4AA}{local}{local[s2]}: took [160.2ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,777][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [RECOVERING]->[POST_RECOVERY], reason [peer recovery done]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,777][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [POST_RECOVERY]->[STARTED], reason [global state is [STARTED]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,777][TRACE][org.elasticsearch.index.shard] [s2] [test][0] [test][0] skip writing shard state, has been written before%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,777][TRACE][org.elasticsearch.index.shard] [s2] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [148.2kb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,855][TRACE][org.elasticsearch.index.shard] [s2] [test][0] remove [148.2kb] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,855][TRACE][org.elasticsearch.index.shard] [s2] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [148.2kb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,954][TRACE][org.elasticsearch.index.shard] [s2] [test][0] remove [148.2kb] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,954][TRACE][org.elasticsearch.index.shard] [s2] [test][0] refresh with source [get_uids] indexBufferRAMBytesUsed [0b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,954][TRACE][org.elasticsearch.index.shard] [s2] [test][0] remove [0b] writing bytes for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,955][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,975][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:31,994][DEBUG][org.elasticsearch.index.shard] [s2] [test][0] state: [STARTED]->[CLOSED], reason [eol]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.IndexLevelReplicationTests)",
  "startTimestamp": 1474047268242,
  "executionTime": 3768
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.replication.IndexLevelReplicationTests",
  "startTimestamp": 1474047264828,
  "executionTime": 7276
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272108
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:32,130][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CjAPMj-CQBK2I3Sd0HjSYQ}{local}{local[128]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1474047272141,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1474047272145,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1474047272147,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
  "startTimestamp": 1474047272108,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.EsExecutorsTests",
   "displayName": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
   "children": [
    {
     "id": "ID#testScaleUp(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testScaleUp(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testScaleUp",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testRejectionMessageAndShuttingDownFlag(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testRejectionMessageAndShuttingDownFlag(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testRejectionMessageAndShuttingDownFlag",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testScaleDown(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testScaleDown(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testScaleDown",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testFixedForcedExecution(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testFixedForcedExecution(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testFixedForcedExecution",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testFixedRejected(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testFixedRejected(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testFixedRejected",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testInheritContext(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testInheritContext(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testInheritContext",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testGetTasks(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "displayName": "testGetTasks(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
     "methodName": "testGetTasks",
     "className": "org.elasticsearch.common.util.concurrent.EsExecutorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272163
 }
]

[
 "TEST_STARTED",
 "ID#testScaleUp(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScaleUp(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272176,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRejectionMessageAndShuttingDownFlag(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectionMessageAndShuttingDownFlag(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272180,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testScaleDown(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScaleDown(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272183,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testFixedForcedExecution(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFixedForcedExecution(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272260,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFixedRejected(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFixedRejected(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272263,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testInheritContext(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInheritContext(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272268,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetTasks(org.elasticsearch.common.util.concurrent.EsExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetTasks(org.elasticsearch.common.util.concurrent.EsExecutorsTests)",
  "startTimestamp": 1474047272271,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.EsExecutorsTests",
  "startTimestamp": 1474047272163,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
   "children": [
    {
     "id": "ID#testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "displayName": "testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "methodName": "testRemovingInitializingReplicasIfPrimariesFails",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
     "children": []
    },
    {
     "id": "ID#testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "displayName": "testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "methodName": "testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272287
 }
]

[
 "TEST_STARTED",
 "ID#testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,318][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,319][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,322][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail node with primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,323][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
  "startTimestamp": 1474047272308,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,338][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard (on node2)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,339][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding third node and reroute and kill first node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:32,340][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
  "startTimestamp": 1474047272324,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
  "startTimestamp": 1474047272287,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptMetaDataTests",
   "displayName": "org.elasticsearch.script.ScriptMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptMetaDataTests",
   "children": [
    {
     "id": "ID#testDiff(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testDiff(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testBuilder(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testBuilder(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testBuilder",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testToAndFromXContent",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testReadFromWriteTo",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testGetScript(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testGetScript(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testGetScript",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272350
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474047272379,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBuilder(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuilder(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474047272383,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474047272387,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474047272390,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetScript(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetScript(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474047272393,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptMetaDataTests",
  "startTimestamp": 1474047272350,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmMonitorTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
   "children": [
    {
     "id": "ID#testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testMonitorGc",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    },
    {
     "id": "ID#testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testMonitorFailure",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    },
    {
     "id": "ID#testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testSlowGc",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    },
    {
     "id": "ID#testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testCheckGcOverhead",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272402
 }
]

[
 "TEST_STARTED",
 "ID#testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1474047272456,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1474047272491,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1474047272512,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1474047272522,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmMonitorTests",
  "startTimestamp": 1474047272402,
  "executionTime": 125
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JarHellTests",
   "displayName": "org.elasticsearch.bootstrap.JarHellTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JarHellTests",
   "children": [
    {
     "id": "ID#testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testXmlBeansLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testCrazyEclipseClassPathWindows",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testBadJDKVersionInJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testGoodESVersionInJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testWithinSingleJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testRequiredJDKVersionIsOK",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testParseClassPathWindows",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testRequiredJDKVersionTooOld",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testEmptyClassPathUnix",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDuplicateClasspathLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testEmptyClassPathWindows",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDifferentJars",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testBadESVersionInJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testParseClassPathUnix",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDirAndJar",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testBaseDateTimeLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testDirsOnClasspath",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    },
    {
     "id": "ID#testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "displayName": "testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)",
     "methodName": "testLog4jLeniency",
     "className": "org.elasticsearch.bootstrap.JarHellTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272537
 }
]

[
 "TEST_STARTED",
 "ID#testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXmlBeansLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272585,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrazyEclipseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272603,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadJDKVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272606,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272657,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGoodESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272659,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithinSingleJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272712,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272716,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequiredJDKVersionIsOK(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272719,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272773,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequiredJDKVersionTooOld(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272778,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "message": "test is designed for unix-like systems only",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:70B6CC538DCD8A1]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.bootstrap.JarHellTests.testEmptyClassPathUnix(JarHellTests.java:265)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272851,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateClasspathLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047272865,
  "executionTime": 961
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyClassPathWindows(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047273826,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentJars(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047273829,
  "executionTime": 702
 }
]

[
 "TEST_STARTED",
 "ID#testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadESVersionInJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047274531,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "message": "test is designed for unix-like systems only",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:DF2F71C0D3AAF7DF]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.bootstrap.JarHellTests.testParseClassPathUnix(JarHellTests.java:251)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test is designed for unix-like systems only",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseClassPathUnix(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047274599,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDirAndJar(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047274606,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBaseDateTimeLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047274629,
  "executionTime": 649
 }
]

[
 "TEST_STARTED",
 "ID#testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDirsOnClasspath(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047275278,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLog4jLeniency(org.elasticsearch.bootstrap.JarHellTests)",
  "startTimestamp": 1474047275301,
  "executionTime": 509
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JarHellTests",
  "startTimestamp": 1474047272537,
  "executionTime": 4527
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "children": [
    {
     "id": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testNormalizeLatLonValuesDefault",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearch",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesWithGeohash",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayDynamic",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearchWithPrefix",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueWithGeohash",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoPointMapperMerge",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArray",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testArrayLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueArray",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testMultiField",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashIndexValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testOptionDeprecation",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayArrayStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testNoValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277073
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,109][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,130][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,131][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,136][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,138][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,138][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,348][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,348][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,348][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{bjhV9wKaReqbXlWs5OdpHA}{g2hiJ2tHRgixz8pcDTbsKQ}{local}{local[17]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,354][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,472][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,495][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,590][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testNormalizeLatLonValuesDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047277098,
  "executionTime": 544
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,651][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,651][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,652][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,652][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,653][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,681][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,681][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,686][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,686][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:37,826][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,059][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashSearch]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047277643,
  "executionTime": 504
 }
]

[
 "TEST_STARTED",
 "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,155][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,216][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,229][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,232][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testValidateLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047278147,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,270][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,330][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,330][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:38,331][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValuesWithGeohash]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047278261,
  "executionTime": 3501
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,775][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,897][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,944][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,945][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayDynamic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047281762,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,992][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,992][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,993][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,993][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,993][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,994][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,999][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,999][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:41,999][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,001][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,001][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,001][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,062][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,636][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashSearchWithPrefix]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047281983,
  "executionTime": 710
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,706][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,763][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,778][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,779][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047282693,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,819][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,881][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,894][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,895][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047282811,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:42,942][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,030][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,030][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,031][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueWithGeohash]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047282934,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,069][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,126][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,144][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,144][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,145][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,145][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,146][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,146][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,147][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,148][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,158][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,158][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,159][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoPointMapperMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047283059,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,218][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,269][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,280][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,281][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047283212,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,379][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,398][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,399][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testArrayLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047283310,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,461][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,518][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,534][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,535][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047283453,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,566][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,566][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,566][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,568][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,568][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,568][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,569][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,573][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,573][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,573][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,574][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,574][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,574][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:43,613][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,295][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047283559,
  "executionTime": 22852
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,418][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,571][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,572][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047306411,
  "executionTime": 191
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,648][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,661][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,662][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValuesStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047306602,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,772][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,938][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,993][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,993][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:06,993][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047306765,
  "executionTime": 259
 }
]

[
 "TEST_STARTED",
 "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,074][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,074][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,075][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,075][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,075][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,075][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,075][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,075][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,076][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,076][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,076][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,076][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,076][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testOptionDeprecation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047307024,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,102][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,146][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,149][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,243][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,250][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test_old] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,251][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [GeoPointFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047307097,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,296][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,443][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,445][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047307290,
  "executionTime": 182
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,479][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,529][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,540][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,540][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047307472,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,573][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,626][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,712][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,713][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayArrayStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047307566,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,834][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,835][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testNoValidateLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474047307746,
  "executionTime": 117
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,863][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,863][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,864][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:07,866][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
  "startTimestamp": 1474047277073,
  "executionTime": 30806
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolStatsTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
   "children": [
    {
     "id": "ID#testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "displayName": "testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "methodName": "testThreadPoolStatsToXContent",
     "className": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
     "children": []
    },
    {
     "id": "ID#testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "displayName": "testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "methodName": "testThreadPoolStatsSort",
     "className": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047307884
 }
]

[
 "TEST_STARTED",
 "ID#testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
  "startTimestamp": 1474047307901,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
  "startTimestamp": 1474047307905,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolStatsTests",
  "startTimestamp": 1474047307884,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "children": [
    {
     "id": "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointInPolygonQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointInBBoxQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testHighlightPhrase",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointDistanceQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047307916
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474047308002,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474047308178,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474047308340,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474047308406,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
  "startTimestamp": 1474047307916,
  "executionTime": 493
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.SizeValueTests",
   "displayName": "org.elasticsearch.common.unit.SizeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.SizeValueTests",
   "children": [
    {
     "id": "ID#testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "displayName": "testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "methodName": "testThatConversionWorks",
     "className": "org.elasticsearch.common.unit.SizeValueTests",
     "children": []
    },
    {
     "id": "ID#testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "displayName": "testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "methodName": "testThatParsingWorks",
     "className": "org.elasticsearch.common.unit.SizeValueTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)",
     "displayName": "testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)",
     "methodName": "testThatNegativeValuesThrowException",
     "className": "org.elasticsearch.common.unit.SizeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308414
 }
]

[
 "TEST_STARTED",
 "ID#testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)",
  "startTimestamp": 1474047308434,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)",
  "startTimestamp": 1474047308437,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)",
  "startTimestamp": 1474047308439,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.SizeValueTests",
  "startTimestamp": 1474047308414,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.SpatialStrategyTests",
   "displayName": "org.elasticsearch.common.geo.SpatialStrategyTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.SpatialStrategyTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.SpatialStrategyTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.SpatialStrategyTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.SpatialStrategyTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.SpatialStrategyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308450
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.SpatialStrategyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.SpatialStrategyTests)",
  "startTimestamp": 1474047308464,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)",
  "startTimestamp": 1474047308466,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.SpatialStrategyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.SpatialStrategyTests)",
  "startTimestamp": 1474047308467,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.SpatialStrategyTests)",
  "startTimestamp": 1474047308469,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.SpatialStrategyTests",
  "startTimestamp": 1474047308450,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
   "children": [
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromJsonCoerceDeprecated",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testParsingAndToQueryParsingExceptions",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testNullFieldName",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testInvalidClosedPolygon",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testEmptyPolygon",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedDeprecated",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testInvalidOpenPolygon",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308482
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,508][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{h93EYRN1SMqoiF9GTdMSlw}{local}{local[135]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,514][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,514][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,535][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,535][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,535][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,537][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,537][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,537][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,544][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,544][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,544][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,547][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,548][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,548][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,556][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,556][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,556][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,559][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,559][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,559][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,561][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,561][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,561][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,564][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,564][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,564][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,568][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,568][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:08,568][WARN ][org.elasticsearch.deprecation.index.mapper]  [jicqzBy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308502,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308571,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308588,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308655,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308659,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308662,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308698,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308701,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308753,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQueryParsingExceptions(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308756,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308766,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFieldName(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308815,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidClosedPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308825,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308832,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308836,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308839,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308846,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308855,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308864,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedDeprecated(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308870,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidOpenPolygon(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308872,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoPolygonQueryBuilderTests)",
  "startTimestamp": 1474047308875,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoPolygonQueryBuilderTests",
  "startTimestamp": 1474047308482,
  "executionTime": 399
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportServiceHandshakeTests",
   "displayName": "org.elasticsearch.transport.TransportServiceHandshakeTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
   "children": [
    {
     "id": "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testIncompatibleVersions",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testIgnoreMismatchedClusterName",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testMismatchedClusterName",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    },
    {
     "id": "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "displayName": "testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
     "methodName": "testConnectToNodeLight",
     "className": "org.elasticsearch.transport.TransportServiceHandshakeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308890
 }
]

[
 "TEST_STARTED",
 "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:09,490][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:09,751][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncompatibleVersions(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474047308985,
  "executionTime": 802
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:10,108][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:10,411][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474047309787,
  "executionTime": 636
 }
]

[
 "TEST_STARTED",
 "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:10,696][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:11,008][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMismatchedClusterName(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474047310423,
  "executionTime": 592
 }
]

[
 "TEST_STARTED",
 "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:11,302][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:11,530][INFO ][org.elasticsearch.test.transport] publish_address {127.0.0.1:9301}, bound_addresses {127.0.0.1:9301}, {[::1]:9301}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectToNodeLight(org.elasticsearch.transport.TransportServiceHandshakeTests)",
  "startTimestamp": 1474047311015,
  "executionTime": 519
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportServiceHandshakeTests",
  "startTimestamp": 1474047308890,
  "executionTime": 2659
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "displayName": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "children": [
    {
     "id": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoGetLatLon",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047311553
 }
]

[
 "TEST_STARTED",
 "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1474047311566,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1474047311570,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
  "startTimestamp": 1474047311553,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.WrapperQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testRewriteWithInnerBoost",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testRewriteWithInnerName",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.WrapperQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047311579
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,598][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TqqMoxB4QCSbtjZTVrXXqg}{local}{local[136]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,608][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,608][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,628][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,629][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,629][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,630][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,631][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,634][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,634][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,634][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,636][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,636][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,636][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,638][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,638][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,638][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,641][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,641][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,641][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,644][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,644][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,644][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,646][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,646][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,646][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,659][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,659][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,659][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,662][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,662][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,662][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,666][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,666][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:11,666][WARN ][org.elasticsearch.deprecation.index.mapper]  [kgpJgmA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311594,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteWithInnerBoost(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311674,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311677,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311679,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311683,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311686,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311688,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311692,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311701,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteWithInnerName(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311704,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311706,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.WrapperQueryBuilderTests)",
  "startTimestamp": 1474047311755,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.WrapperQueryBuilderTests",
  "startTimestamp": 1474047311579,
  "executionTime": 277
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
   "displayName": "org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testToXContent(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
     "displayName": "testToXContent(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
     "methodName": "testToXContent",
     "className": "org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047311860
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
  "startTimestamp": 1474047311912,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToXContent(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContent(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
  "startTimestamp": 1474047311915,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.WriteableIngestDocumentTests)",
  "startTimestamp": 1474047311918,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.WriteableIngestDocumentTests",
  "startTimestamp": 1474047311860,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexingSlowLogTests",
   "displayName": "org.elasticsearch.index.IndexingSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexingSlowLogTests",
   "children": [
    {
     "id": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSetLevels",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSlowLogParsedDocumentPrinterSourceToLog",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047311927
 }
]

[
 "TEST_STARTED",
 "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,946][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,948][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.threshold.index.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474047311942,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,960][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,961][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,961][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474047311958,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474047311965,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:05:11,971][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.indexing.slowlog.level] from [INFO] to [TRACE]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474047311968,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexingSlowLogTests",
  "startTimestamp": 1474047311927,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047311981
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1474047312000,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1474047312002,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1474047312004,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1474047312006,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1474047312008,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
  "startTimestamp": 1474047311981,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisServiceTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
   "children": [
    {
     "id": "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBuiltInAnalyzersAreCached",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultIndexAnalyzerIsUnsupported",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultSearchAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testConfigureCamelCaseTokenFilter",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBackCompatOverrideDefaultIndexAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBackCompatOverrideDefaultIndexAndSearchAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testNoTypeOrTokenizerErrorMessage",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testDefaultAnalyzers",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312019
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312040,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312045,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312049,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312053,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:12,070][WARN ][org.elasticsearch.deprecation.index.analysis]  [index] setting [index.analysis.analyzer.default_index] is deprecated, use [index.analysis.analyzer.default] instead for index [index]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312068,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:12,075][WARN ][org.elasticsearch.deprecation.index.analysis]  [index] setting [index.analysis.analyzer.default_index] is deprecated, use [index.analysis.analyzer.default] instead for index [index]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312072,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312075,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312106,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474047312110,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisServiceTests",
  "startTimestamp": 1474047312019,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NullValueObjectMappingTests",
   "displayName": "org.elasticsearch.index.mapper.NullValueObjectMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NullValueObjectMappingTests",
   "children": [
    {
     "id": "ID#testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)",
     "displayName": "testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)",
     "methodName": "testNullValueObject",
     "className": "org.elasticsearch.index.mapper.NullValueObjectMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312129
 }
]

[
 "TEST_STARTED",
 "ID#testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,184][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,205][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,205][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,208][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,210][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,210][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,323][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,323][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,324][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,326][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xaRICGQoQe-SqhA5wOdu8g}{3GqCKIQARpeWx8npqbmSKQ}{local}{local[18]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,327][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,339][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,356][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,420][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NullValueObjectMappingTests#testNullValueObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValueObject(org.elasticsearch.index.mapper.NullValueObjectMappingTests)",
  "startTimestamp": 1474047312175,
  "executionTime": 284
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,460][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,460][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,460][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:12,462][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NullValueObjectMappingTests",
  "startTimestamp": 1474047312129,
  "executionTime": 340
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312474
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312491,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312493,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312495,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312497,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312499,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyLongFieldTypeTests)",
  "startTimestamp": 1474047312502,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyLongFieldTypeTests",
  "startTimestamp": 1474047312474,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.iterable.IterablesTests",
   "displayName": "org.elasticsearch.common.util.iterable.IterablesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.iterable.IterablesTests",
   "children": [
    {
     "id": "ID#testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)",
     "displayName": "testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)",
     "methodName": "testFlatten",
     "className": "org.elasticsearch.common.util.iterable.IterablesTests",
     "children": []
    },
    {
     "id": "ID#testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)",
     "displayName": "testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)",
     "methodName": "testGetOverList",
     "className": "org.elasticsearch.common.util.iterable.IterablesTests",
     "children": []
    },
    {
     "id": "ID#testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)",
     "displayName": "testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)",
     "methodName": "testGetOverIterable",
     "className": "org.elasticsearch.common.util.iterable.IterablesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312511
 }
]

[
 "TEST_STARTED",
 "ID#testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)",
  "startTimestamp": 1474047312549,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)",
  "startTimestamp": 1474047312551,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)",
  "startTimestamp": 1474047312553,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.iterable.IterablesTests",
  "startTimestamp": 1474047312511,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312562
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:12,588][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9XedCBz1SXmCb1gzLQWvkQ}{local}{local[137]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
  "startTimestamp": 1474047312609,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
  "startTimestamp": 1474047312611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:12,615][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"derivative\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"unit\" : \"4d\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:12,616][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"derivative\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"unit\" : \"4d\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
  "startTimestamp": 1474047312613,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
  "startTimestamp": 1474047312562,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.DiffableTests",
   "displayName": "org.elasticsearch.cluster.serialization.DiffableTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.DiffableTests",
   "children": [
    {
     "id": "ID#testImmutableOpenIntMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
     "displayName": "testImmutableOpenIntMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
     "methodName": "testImmutableOpenIntMapDiff",
     "className": "org.elasticsearch.cluster.serialization.DiffableTests",
     "children": []
    },
    {
     "id": "ID#testJKDMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
     "displayName": "testJKDMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
     "methodName": "testJKDMapDiff",
     "className": "org.elasticsearch.cluster.serialization.DiffableTests",
     "children": []
    },
    {
     "id": "ID#testImmutableOpenMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
     "displayName": "testImmutableOpenMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
     "methodName": "testImmutableOpenMapDiff",
     "className": "org.elasticsearch.cluster.serialization.DiffableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312638
 }
]

[
 "TEST_STARTED",
 "ID#testImmutableOpenIntMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImmutableOpenIntMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
  "startTimestamp": 1474047312710,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testJKDMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJKDMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
  "startTimestamp": 1474047312722,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testImmutableOpenMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImmutableOpenMapDiff(org.elasticsearch.cluster.serialization.DiffableTests)",
  "startTimestamp": 1474047312725,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.DiffableTests",
  "startTimestamp": 1474047312638,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
   "children": [
    {
     "id": "ID#testDeadNodeWhileRelocatingOnFromNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
     "displayName": "testDeadNodeWhileRelocatingOnFromNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
     "methodName": "testDeadNodeWhileRelocatingOnFromNode",
     "className": "org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDeadNodeOnStartedPrimaryShard(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
     "displayName": "testSimpleDeadNodeOnStartedPrimaryShard(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
     "methodName": "testSimpleDeadNodeOnStartedPrimaryShard",
     "className": "org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
     "children": []
    },
    {
     "id": "ID#testDeadNodeWhileRelocatingOnToNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
     "displayName": "testDeadNodeWhileRelocatingOnToNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
     "methodName": "testDeadNodeWhileRelocatingOnToNode",
     "className": "org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312752
 }
]

[
 "TEST_STARTED",
 "ID#testDeadNodeWhileRelocatingOnFromNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,774][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 2 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,781][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,781][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verifying all is allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,781][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding additional node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,782][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> moving primary shard to node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,783][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail primary shard recovering instance on 'origPrimaryNodeId' being relocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,784][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeadNodeWhileRelocatingOnFromNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
  "startTimestamp": 1474047312766,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDeadNodeOnStartedPrimaryShard(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,790][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,791][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 2 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,792][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verifying all is allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail node with primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,792][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDeadNodeOnStartedPrimaryShard(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
  "startTimestamp": 1474047312785,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDeadNodeWhileRelocatingOnToNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 2 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,808][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,808][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verifying all is allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,808][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding additional node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> moving primary shard to node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:12,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail primary shard recovering instance on node3 being initialized by killing node3%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeadNodeWhileRelocatingOnToNode(org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests)",
  "startTimestamp": 1474047312800,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DeadNodesAllocationTests",
  "startTimestamp": 1474047312752,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.ShardUtilsTests",
   "displayName": "org.elasticsearch.index.shard.ShardUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.ShardUtilsTests",
   "children": [
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.shard.ShardUtilsTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.shard.ShardUtilsTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.shard.ShardUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312817
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.shard.ShardUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.shard.ShardUtilsTests)",
  "startTimestamp": 1474047312837,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.ShardUtilsTests",
  "startTimestamp": 1474047312817,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IdFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IdFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IdFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IdFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312869
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IdFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IdFieldTypeTests)",
  "startTimestamp": 1474047312896,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IdFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IdFieldTypeTests)",
  "startTimestamp": 1474047312898,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IdFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IdFieldTypeTests)",
  "startTimestamp": 1474047312900,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.IdFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.IdFieldTypeTests)",
  "startTimestamp": 1474047312902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IdFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IdFieldTypeTests)",
  "startTimestamp": 1474047312904,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IdFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IdFieldTypeTests)",
  "startTimestamp": 1474047312906,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IdFieldTypeTests",
  "startTimestamp": 1474047312869,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "displayName": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "children": [
    {
     "id": "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testUnresolvableRequestDoesNotHang",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testSuccessAfterRetryWithClusterStateUpdate",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testSuccessAfterRetryWithExceptionFromTransport",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testBasicRequestWorks",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testFailureWithoutRetry",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testRetryOfAnAlreadyTimedOutRequest",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312916
 }
]

[
 "TEST_STARTED",
 "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,953][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{N_5wyO_QSdGA8ea0Zlhovg}{local}{local[151]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,956][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{yUqHFuCuRmmFvF6VYDZfEA}{local}{local[153]}, previous {node}{N_5wyO_QSdGA8ea0Zlhovg}{local}{local[151]}}, removed {{node}{N_5wyO_QSdGA8ea0Zlhovg}{local}{local[151]},}, added {{node_1}{yUqHFuCuRmmFvF6VYDZfEA}{local}{local[153]},{node_2}{CWOtn9CXSiCxTf98BYwcDQ}{local}{local[154]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312947,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,962][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{w_0xCQdfRUColQ86kQMocg}{local}{local[158]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,963][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{yygTFoEXTlaL4DZV7MvoUA}{local}{local[160]}, previous {node}{w_0xCQdfRUColQ86kQMocg}{local}{local[158]}}, removed {{node}{w_0xCQdfRUColQ86kQMocg}{local}{local[158]},}, added {{node_1}{yygTFoEXTlaL4DZV7MvoUA}{local}{local[160]},{node_2}{ODCBglbmS36_QqKaxHmRTg}{local}{local[161]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,964][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{u-zntWQjStmGGtDBDmlAHQ}{local}{local[159]},{node_1}{yygTFoEXTlaL4DZV7MvoUA}{local}{local[160]},{node_2}{ODCBglbmS36_QqKaxHmRTg}{local}{local[161]},}, added {{node_1}{O92D0kHBS5GiPUj54jwfcA}{local}{local[166]},{node_2}{rkRkYrw2TnqCSXU9nYx5eg}{local}{local[167]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312958,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,971][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9yOGRvqxTJe-3V5y0OF_Mg}{local}{local[171]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,973][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{_buXpjl8ThiEHfEfIwIF0g}{local}{local[173]}, previous {node}{9yOGRvqxTJe-3V5y0OF_Mg}{local}{local[171]}}, removed {{node}{9yOGRvqxTJe-3V5y0OF_Mg}{local}{local[171]},}, added {{node_1}{_buXpjl8ThiEHfEfIwIF0g}{local}{local[173]},{node_2}{2Zrj-PTjRka1HJqWmRIP2A}{local}{local[174]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,974][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{aZf5sqK0SYOYSicxQQL--w}{local}{local[172]},{node_1}{_buXpjl8ThiEHfEfIwIF0g}{local}{local[173]},{node_2}{2Zrj-PTjRka1HJqWmRIP2A}{local}{local[174]},}, added {{node_1}{Xid3e9c4S2-6Qgt3PgebvQ}{local}{local[179]},{node_2}{bwEVQRM6TdSvsW4NI_wLsA}{local}{local[180]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312966,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,979][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CHFv6dQQTCWcBaLM8w0XaQ}{local}{local[184]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,980][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{yiRtF-PVTrWYCqeVcEoFRA}{local}{local[186]}, previous {node}{CHFv6dQQTCWcBaLM8w0XaQ}{local}{local[184]}}, removed {{node}{CHFv6dQQTCWcBaLM8w0XaQ}{local}{local[184]},}, added {{node_1}{yiRtF-PVTrWYCqeVcEoFRA}{local}{local[186]},{node_2}{5xpOGxD2TcSeyhrv4RJ0tQ}{local}{local[187]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312975,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,985][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8qxKYcfNQiqk3w28naU_SA}{local}{local[191]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,987][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{ajqGvMIfS9qmhzen68LoXQ}{local}{local[193]}, previous {node}{8qxKYcfNQiqk3w28naU_SA}{local}{local[191]}}, removed {{node}{8qxKYcfNQiqk3w28naU_SA}{local}{local[191]},}, added {{node_1}{ajqGvMIfS9qmhzen68LoXQ}{local}{local[193]},{node_2}{2XP20VUyTI6wy5xI26WiFA}{local}{local[194]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312981,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,993][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eF-oPS78SeiGD7NGhYu7AA}{local}{local[198]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:12,994][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Yfhul22XSWaZyz0vyw8jPA}{local}{local[200]}, previous {node}{eF-oPS78SeiGD7NGhYu7AA}{local}{local[198]}}, removed {{node}{eF-oPS78SeiGD7NGhYu7AA}{local}{local[198]},}, added {{node_1}{Yfhul22XSWaZyz0vyw8jPA}{local}{local[200]},{node_2}{rFkhwjgxS0-QpxFCAUN5Qw}{local}{local[201]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312989,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:13,001][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{QZHwgvHxTOSCrxet92Tjyg}{local}{local[205]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474047312997,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
  "startTimestamp": 1474047312916,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJsonVerbose",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047313027
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,056][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{p3zPiJeYS1S33pP8ZetbeQ}{local}{local[206]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,071][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,071][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,098][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,098][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,098][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,100][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,100][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,100][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,103][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,103][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,103][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,109][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,109][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,109][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,111][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,111][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,111][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,113][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,113][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,113][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,119][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,119][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,119][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,123][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,123][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,123][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,127][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,127][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,127][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,128][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,128][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,128][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,131][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,131][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,131][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,142][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,142][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,143][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,155][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,160][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,160][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,160][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,164][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,164][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:13,164][WARN ][org.elasticsearch.deprecation.index.mapper]  [KH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313050,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313166,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313173,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313204,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313210,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonVerbose(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313221,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313224,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313226,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313229,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1474047313234,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
  "startTimestamp": 1474047313027,
  "executionTime": 217
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MinTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MinTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047313249
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:13,265][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OGRGcb1TQty1M6GFucnMmw}{local}{local[207]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)",
  "startTimestamp": 1474047313276,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)",
  "startTimestamp": 1474047313279,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)",
  "startTimestamp": 1474047313281,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MinTests",
  "startTimestamp": 1474047313249,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "displayName": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "children": [
    {
     "id": "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testOverloadedList",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWritingBinaryToStream",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfCollectionOfPaths",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testRenderGeoPoint",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testReuseJsonGenerator",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_absolute",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testIndentIsPlatformIndependent",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testByteConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testDateTypesConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_relative",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_StringName",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteMapWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testPrettyWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testRaw",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteMapValueWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testCopyCurrentStructure",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteFieldMapWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testSimpleGenerator",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047313295
 }
]

[
 "TEST_STARTED",
 "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313323,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313325,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313326,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313327,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313328,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313329,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313330,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313332,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313333,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313335,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313336,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_StringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313337,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313339,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313340,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313341,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313342,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313344,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313345,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313346,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313363,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1474047313365,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
  "startTimestamp": 1474047313295,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TypeFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TypeFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047313374
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474047313391,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474047313394,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474047313396,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474047313397,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474047313425,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TypeFieldTypeTests)",
  "startTimestamp": 1474047313427,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TypeFieldTypeTests",
  "startTimestamp": 1474047313374,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasChildQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
   "children": [
    {
     "id": "ID#testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testNoneFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testThatUnrecognizedFromStringThrowsException",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testMinFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testAvgFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testMaxFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testSumFromString",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testThatNullFromStringThrowsException",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testNonDefaultSimilarity",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasChildQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047313439
 }
]

[
 "TEST_STARTED",
 "ID#testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,527][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fqjw0faFRB-ZTkcjik0pkQ}{local}{local[208]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,534][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,535][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,552][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,552][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,552][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,577][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,578][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,578][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,582][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,582][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,582][WARN ][org.elasticsearch.deprecation.index.mapper]  [mdI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoneFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313521,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313611,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313614,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUnrecognizedFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313625,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313628,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313632,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313635,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313639,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313641,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAvgFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313644,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313646,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313648,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313651,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,910][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:05:13,911][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313908,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSumFromString(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNullFromStringThrowsException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313913,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDefaultSimilarity(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313916,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313920,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313928,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313932,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasChildQueryBuilderTests)",
  "startTimestamp": 1474047313969,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasChildQueryBuilderTests",
  "startTimestamp": 1474047313439,
  "executionTime": 558
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "children": [
    {
     "id": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThreshold",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testShardRelocationsTakenIntoAccount",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testUnknownDiskUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithAbsoluteSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testAverageUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testCanRemainWithShardRelocatingAway",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testForSingleDataNode",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testFreeDiskPercentageAfterShardAssigned",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithShardSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047314011
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,037][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,040][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,043][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 1, unassigned: 1, initializing: 1, relocating: 0, started: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,043][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.037Z], delayed=false, allocation_status[no_attempt]]], initializing: [[test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=-V0pG-rOTJOA8u0sHeiAag], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.037Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[10]], relocating: [], started: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,043][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,043][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,044][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 1, unassigned: 1, initializing: 0, relocating: 0, started: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,044][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.037Z], delayed=false, allocation_status[no_attempt]]], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=-V0pG-rOTJOA8u0sHeiAag]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,044][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,044][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 1, unassigned: 1, initializing: 0, relocating: 0, started: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,044][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.037Z], delayed=false, allocation_status[no_attempt]]], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=-V0pG-rOTJOA8u0sHeiAag]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,044][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,045][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,045][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 0, initializing: 1, relocating: 0, started: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,045][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test][0], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=uLvJVIP_SwiulW-GKvBXIg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.037Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[10]], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=-V0pG-rOTJOA8u0sHeiAag]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,045][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,045][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,046][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 0, initializing: 0, relocating: 0, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,046][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=-V0pG-rOTJOA8u0sHeiAag], [test][0], node[node3], [R], s[STARTED], a[id=uLvJVIP_SwiulW-GKvBXIg]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,046][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> changing decider settings%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,049][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,050][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 0, initializing: 0, relocating: 0, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,050][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=-V0pG-rOTJOA8u0sHeiAag], [test][0], node[node3], [R], s[STARTED], a[id=uLvJVIP_SwiulW-GKvBXIg]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,050][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> changing settings again%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,053][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,054][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 0, initializing: 0, relocating: 0, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,054][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=-V0pG-rOTJOA8u0sHeiAag], [test][0], node[node3], [R], s[STARTED], a[id=uLvJVIP_SwiulW-GKvBXIg]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,054][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,054][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,055][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 1, relocating: 1, started: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,055][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test][0], node[node4], relocating [node2], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=nBECmR4oTgyOzXDZGSZ0AQ, rId=-V0pG-rOTJOA8u0sHeiAag], expected_shard_size[10]], relocating: [[test][0], node[node2], relocating [node4], [P], s[RELOCATING], a[id=-V0pG-rOTJOA8u0sHeiAag, rId=nBECmR4oTgyOzXDZGSZ0AQ], expected_shard_size[10]], started: [[test][0], node[node3], [R], s[STARTED], a[id=uLvJVIP_SwiulW-GKvBXIg]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,055][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> apply INITIALIZING shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,055][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,056][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 0, initializing: 0, relocating: 0, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,056][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node4], [P], s[STARTED], a[id=nBECmR4oTgyOzXDZGSZ0AQ], [test][0], node[node3], [R], s[STARTED], a[id=uLvJVIP_SwiulW-GKvBXIg]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314031,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,061][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,061][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,062][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 4, unassigned: 0, initializing: 4, relocating: 0, started: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,062][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test2][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=eWZnRtOuTC-7ztqMtl00cA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.061Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[1], [test][0], node[node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=8JruI5N8SSi49MfaM__9_g], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.061Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[14], [test2][0], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=d5DOtJvESXGgWSJ7DoA-IA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.061Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[1], [test][0], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=Tmyi5roJRy6NNFO7YA6a1A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.061Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[14]], relocating: [], started: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,063][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,063][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test][0], [test2][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,063][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 4, unassigned: 0, initializing: 0, relocating: 0, started: 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,063][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test2][0], node[node2], [P], s[STARTED], a[id=eWZnRtOuTC-7ztqMtl00cA], [test][0], node[node2], [R], s[STARTED], a[id=8JruI5N8SSi49MfaM__9_g], [test2][0], node[node1], [R], s[STARTED], a[id=d5DOtJvESXGgWSJ7DoA-IA], [test][0], node[node1], [P], s[STARTED], a[id=Tmyi5roJRy6NNFO7YA6a1A]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,064][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,064][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,064][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 5, unassigned: 0, initializing: 1, relocating: 1, started: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,064][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test][0], node[node3], relocating [node2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=NveenoHaRtqbiog-akGYYQ, rId=8JruI5N8SSi49MfaM__9_g], expected_shard_size[14]], relocating: [[test][0], node[node2], relocating [node3], [R], s[RELOCATING], a[id=8JruI5N8SSi49MfaM__9_g, rId=NveenoHaRtqbiog-akGYYQ], expected_shard_size[14]], started: [[test2][0], node[node2], [P], s[STARTED], a[id=eWZnRtOuTC-7ztqMtl00cA], [test2][0], node[node1], [R], s[STARTED], a[id=d5DOtJvESXGgWSJ7DoA-IA], [test][0], node[node1], [P], s[STARTED], a[id=Tmyi5roJRy6NNFO7YA6a1A]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,064][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314056,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,071][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,071][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,072][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,072][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,072][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,072][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 1, unassigned: 0, initializing: 0, relocating: 0, started: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,072][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node1], [P], s[STARTED], a[id=QF7s1Pm9S1q1-s78uCL3Gg]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314065,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,078][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node1 and node2 node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,078][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,079][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 1, unassigned: 2, initializing: 1, relocating: 0, started: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,079][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]], [test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]]], initializing: [[test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=Py0MUHIKS2-DIl-L_FhFLg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[10]], relocating: [], started: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,079][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> nodeWithPrimary: node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,080][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> nodeWithoutPrimary: node1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,081][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,082][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 1, initializing: 2, relocating: 0, started: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,082][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]]], initializing: [[test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=Py0MUHIKS2-DIl-L_FhFLg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[10], [test][0], node[node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=TgqdLvSQRdCC6xlHPz0M1Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[10]], relocating: [], started: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,082][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,082][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,083][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 2, unassigned: 1, initializing: 0, relocating: 0, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,083][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]]], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=Py0MUHIKS2-DIl-L_FhFLg], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,083][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,083][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,084][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 1, relocating: 0, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,084][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test][0], node[node3], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=dGYUjTroTqiAHZeKB2V3CA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.078Z], delayed=false, allocation_status[no_attempt]], expected_shard_size[10]], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=Py0MUHIKS2-DIl-L_FhFLg], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,084][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,084][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,084][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,085][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 0, relocating: 0, started: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,085][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=Py0MUHIKS2-DIl-L_FhFLg], [test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,085][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> changing decider settings%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,088][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,089][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 0, relocating: 0, started: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,089][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=Py0MUHIKS2-DIl-L_FhFLg], [test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,089][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> changing settings again%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,092][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,092][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 0, relocating: 0, started: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,092][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node2], [P], s[STARTED], a[id=Py0MUHIKS2-DIl-L_FhFLg], [test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,092][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,092][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 4, unassigned: 0, initializing: 1, relocating: 1, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test][0], node[node4], relocating [node2], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=QHqyMEy6TBSWbWbxQqR0Jg, rId=Py0MUHIKS2-DIl-L_FhFLg], expected_shard_size[10]], relocating: [[test][0], node[node2], relocating [node4], [P], s[RELOCATING], a[id=Py0MUHIKS2-DIl-L_FhFLg, rId=QHqyMEy6TBSWbWbxQqR0Jg], expected_shard_size[10]], started: [[test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> apply INITIALIZING shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 0, relocating: 0, started: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node4], [P], s[STARTED], a[id=QHqyMEy6TBSWbWbxQqR0Jg], [test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA], [test][0], node[node1], [R], s[STARTED], a[id=TgqdLvSQRdCC6xlHPz0M1Q]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,093][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,094][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,094][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 4, unassigned: 0, initializing: 1, relocating: 1, started: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,094][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [[test][0], node[node5], relocating [node1], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=S_h0Vs9DTc2z1hbMMTK_MA, rId=TgqdLvSQRdCC6xlHPz0M1Q], expected_shard_size[10]], relocating: [[test][0], node[node1], relocating [node5], [R], s[RELOCATING], a[id=TgqdLvSQRdCC6xlHPz0M1Q, rId=S_h0Vs9DTc2z1hbMMTK_MA], expected_shard_size[10]], started: [[test][0], node[node4], [P], s[STARTED], a[id=QHqyMEy6TBSWbWbxQqR0Jg], [test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,094][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> apply INITIALIZING shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,094][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,094][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> final cluster state:%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,095][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 3, unassigned: 0, initializing: 0, relocating: 0, started: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,095][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [], initializing: [], relocating: [], started: [[test][0], node[node4], [P], s[STARTED], a[id=QHqyMEy6TBSWbWbxQqR0Jg], [test][0], node[node5], [R], s[STARTED], a[id=S_h0Vs9DTc2z1hbMMTK_MA], [test][0], node[node3], [R], s[STARTED], a[id=dGYUjTroTqiAHZeKB2V3CA]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314073,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314095,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,104][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314099,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,107][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one master node, one data node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,109][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,109][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,109][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314104,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314110,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,119][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding node1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,119][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> calling fake getClusterInfo%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,120][WARN ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] after allocating, node [node1] would have more than the allowed 29%25 free disk threshold (21%25 free), preventing allocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,120][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,120][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> counts: total: 0, unassigned: 1, initializing: 0, relocating: 0, started: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:14,121][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> unassigned: [[test][0], node[null], [P], recovery_source[new shard recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:14.119Z], delayed=false, allocation_status[deciders_no]]], initializing: [], relocating: [], started: []%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1474047314113,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
  "startTimestamp": 1474047314011,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RangeQueryRewriteTests",
   "displayName": "org.elasticsearch.index.query.RangeQueryRewriteTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RangeQueryRewriteTests",
   "children": [
    {
     "id": "ID#testRewriteEmptyReader(org.elasticsearch.index.query.RangeQueryRewriteTests)",
     "displayName": "testRewriteEmptyReader(org.elasticsearch.index.query.RangeQueryRewriteTests)",
     "methodName": "testRewriteEmptyReader",
     "className": "org.elasticsearch.index.query.RangeQueryRewriteTests",
     "children": []
    },
    {
     "id": "ID#testRewriteMissingReader(org.elasticsearch.index.query.RangeQueryRewriteTests)",
     "displayName": "testRewriteMissingReader(org.elasticsearch.index.query.RangeQueryRewriteTests)",
     "methodName": "testRewriteMissingReader",
     "className": "org.elasticsearch.index.query.RangeQueryRewriteTests",
     "children": []
    },
    {
     "id": "ID#testRewriteMissingField(org.elasticsearch.index.query.RangeQueryRewriteTests)",
     "displayName": "testRewriteMissingField(org.elasticsearch.index.query.RangeQueryRewriteTests)",
     "methodName": "testRewriteMissingField",
     "className": "org.elasticsearch.index.query.RangeQueryRewriteTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047314128
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteEmptyReader(org.elasticsearch.index.query.RangeQueryRewriteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,155][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,176][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,177][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,180][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,183][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,183][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,314][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,315][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,315][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,323][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{hIqN9C-JR1WyiqjhQnPL4w}{ApMPnSwJQia9uod0l-nXNw}{local}{local[19]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,323][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,340][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,403][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,481][INFO ][org.elasticsearch.index.query] [RangeQueryRewriteTests#testRewriteEmptyReader]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteEmptyReader(org.elasticsearch.index.query.RangeQueryRewriteTests)",
  "startTimestamp": 1474047314147,
  "executionTime": 360
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteMissingReader(org.elasticsearch.index.query.RangeQueryRewriteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,513][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,561][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,575][INFO ][org.elasticsearch.index.query] [RangeQueryRewriteTests#testRewriteMissingReader]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteMissingReader(org.elasticsearch.index.query.RangeQueryRewriteTests)",
  "startTimestamp": 1474047314507,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteMissingField(org.elasticsearch.index.query.RangeQueryRewriteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,672][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,733][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,745][INFO ][org.elasticsearch.index.query] [RangeQueryRewriteTests#testRewriteMissingField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteMissingField(org.elasticsearch.index.query.RangeQueryRewriteTests)",
  "startTimestamp": 1474047314666,
  "executionTime": 136
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,802][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,803][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,803][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:35:14,805][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RangeQueryRewriteTests",
  "startTimestamp": 1474047314128,
  "executionTime": 683
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047314816
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1474047314842,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1474047314911,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1474047314937,
  "executionTime": 65
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
  "startTimestamp": 1474047314816,
  "executionTime": 188
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
   "displayName": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315012
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
  "startTimestamp": 1474047315057,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
  "startTimestamp": 1474047315059,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.FuzzyOptionsTests)",
  "startTimestamp": 1474047315061,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.FuzzyOptionsTests",
  "startTimestamp": 1474047315012,
  "executionTime": 52
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.BlobPathTests",
   "displayName": "org.elasticsearch.common.blobstore.BlobPathTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.BlobPathTests",
   "children": [
    {
     "id": "ID#testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)",
     "displayName": "testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)",
     "methodName": "testBuildAsString",
     "className": "org.elasticsearch.common.blobstore.BlobPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315068
 }
]

[
 "TEST_STARTED",
 "ID#testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildAsString(org.elasticsearch.common.blobstore.BlobPathTests)",
  "startTimestamp": 1474047315080,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.BlobPathTests",
  "startTimestamp": 1474047315068,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BackoffPolicyTests",
   "displayName": "org.elasticsearch.action.bulk.BackoffPolicyTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BackoffPolicyTests",
   "children": [
    {
     "id": "ID#testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)",
     "displayName": "testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)",
     "methodName": "testWrapBackoffPolicy",
     "className": "org.elasticsearch.action.bulk.BackoffPolicyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315088
 }
]

[
 "TEST_STARTED",
 "ID#testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)",
  "startTimestamp": 1474047315105,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BackoffPolicyTests",
  "startTimestamp": 1474047315088,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.ESFileStoreTests",
   "displayName": "org.elasticsearch.env.ESFileStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.env.ESFileStoreTests",
   "children": [
    {
     "id": "ID#testNegativeSpace(org.elasticsearch.env.ESFileStoreTests)",
     "displayName": "testNegativeSpace(org.elasticsearch.env.ESFileStoreTests)",
     "methodName": "testNegativeSpace",
     "className": "org.elasticsearch.env.ESFileStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315115
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeSpace(org.elasticsearch.env.ESFileStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeSpace(org.elasticsearch.env.ESFileStoreTests)",
  "startTimestamp": 1474047315134,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.ESFileStoreTests",
  "startTimestamp": 1474047315115,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.DiscoveryModuleTests",
   "displayName": "org.elasticsearch.discovery.DiscoveryModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
   "children": [
    {
     "id": "ID#testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testRegisterDiscovery",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testRegisterDefaults",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testRegisterMasterElectionService",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    },
    {
     "id": "ID#testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "displayName": "testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
     "methodName": "testLoadUnregisteredMasterElectionService",
     "className": "org.elasticsearch.discovery.DiscoveryModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315157
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterDiscovery(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474047315178,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterDefaults(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474047315183,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474047315198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadUnregisteredMasterElectionService(org.elasticsearch.discovery.DiscoveryModuleTests)",
  "startTimestamp": 1474047315200,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.DiscoveryModuleTests",
  "startTimestamp": 1474047315157,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharFilterTests",
   "displayName": "org.elasticsearch.index.analysis.CharFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharFilterTests",
   "children": [
    {
     "id": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testHtmlStripCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    },
    {
     "id": "ID#testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testPatternReplaceCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    },
    {
     "id": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testMappingCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315209
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1474047315230,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPatternReplaceCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1474047315292,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1474047315305,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharFilterTests",
  "startTimestamp": 1474047315209,
  "executionTime": 131
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.ScriptValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
   "children": [
    {
     "id": "ID#testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "displayName": "testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "methodName": "testBytes",
     "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
     "children": []
    },
    {
     "id": "ID#testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "displayName": "testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "methodName": "testLongs",
     "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
     "children": []
    },
    {
     "id": "ID#testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "displayName": "testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "methodName": "testDoubles",
     "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315346
 }
]

[
 "TEST_STARTED",
 "ID#testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
  "startTimestamp": 1474047315371,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
  "startTimestamp": 1474047315374,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
  "startTimestamp": 1474047315376,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.ScriptValuesTests",
  "startTimestamp": 1474047315346,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
   "children": [
    {
     "id": "ID#testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)",
     "displayName": "testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)",
     "methodName": "testSameHost",
     "className": "org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315386
 }
]

[
 "TEST_STARTED",
 "ID#testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes with the same host%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,427][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start all primary shards, no replica will be started since its on the same host%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,428][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node, with a different host, replicas will be allocating%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameHost(org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests)",
  "startTimestamp": 1474047315419,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.SameShardRoutingTests",
  "startTimestamp": 1474047315386,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
   "children": [
    {
     "id": "ID#testMultiValuesDocsWithOverlappingStorageArrays(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
     "displayName": "testMultiValuesDocsWithOverlappingStorageArrays(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
     "methodName": "testMultiValuesDocsWithOverlappingStorageArrays",
     "className": "org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testRandomValues(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
     "displayName": "testRandomValues(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
     "methodName": "testRandomValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testOrdinals(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
     "displayName": "testOrdinals(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
     "methodName": "testOrdinals",
     "className": "org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315436
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuesDocsWithOverlappingStorageArrays(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuesDocsWithOverlappingStorageArrays(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
  "startTimestamp": 1474047315455,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomValues(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomValues(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
  "startTimestamp": 1474047315458,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testOrdinals(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrdinals(org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests)",
  "startTimestamp": 1474047315645,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.MultiOrdinalsTests",
  "startTimestamp": 1474047315436,
  "executionTime": 215
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "displayName": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "children": [
    {
     "id": "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testNeedsUpgrade",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeCustomDataPath",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testPartialUpgradeCustomDataPath",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeRealIndex",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeIndices",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315659
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:15,838][INFO ][org.elasticsearch.env    ] [kQ3paE-] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:15,838][INFO ][org.elasticsearch.env    ] [kQ3paE-] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474047315761,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:15,928][INFO ][org.elasticsearch.env    ] [Grhc65l] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:15,928][INFO ][org.elasticsearch.env    ] [Grhc65l] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,075][INFO ][org.elasticsearch.common.util] [node_s_0] [FqidpbAUfz/_sBD2J6LROCH8M3x-TJJ5A] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-006\\nodes\\0\\indices\\FqidpbAUfz] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,078][INFO ][org.elasticsearch.common.util] [node_s_0] [FqidpbAUfz/_sBD2J6LROCH8M3x-TJJ5A] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-004\\FqidpbAUfz] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-004\\_sBD2J6LROCH8M3x-TJJ5A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,080][INFO ][org.elasticsearch.common.util] [node_s_0] [FqidpbAUfz/_sBD2J6LROCH8M3x-TJJ5A] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-006\\nodes\\0\\indices\\FqidpbAUfz] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-006\\nodes\\0\\indices\\_sBD2J6LROCH8M3x-TJJ5A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,083][INFO ][org.elasticsearch.common.util] [node_s_0] [FqidpbAUfz/_sBD2J6LROCH8M3x-TJJ5A] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-007\\nodes\\0\\indices\\FqidpbAUfz] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,084][INFO ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-004\\_sBD2J6LROCH8M3x-TJJ5A] no upgrade needed - already upgraded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,087][INFO ][org.elasticsearch.common.util] [node_s_0] [FqidpbAUfz/_sBD2J6LROCH8M3x-TJJ5A] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-007\\nodes\\0\\indices\\FqidpbAUfz] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-007\\nodes\\0\\indices\\_sBD2J6LROCH8M3x-TJJ5A]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474047315877,
  "executionTime": 244
 }
]

[
 "TEST_STARTED",
 "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,195][INFO ][org.elasticsearch.env    ] [541XiD-] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,195][INFO ][org.elasticsearch.env    ] [541XiD-] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,343][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-010\\nodes\\0\\indices\\oQBVAmnVjq] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,348][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-010\\nodes\\0\\indices\\oQBVAmnVjq] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,350][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-008\\oQBVAmnVjq] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-008\\j2-mG5c6RoOuLt4WUv1abg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,354][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-010\\nodes\\0\\indices\\oQBVAmnVjq] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-010\\nodes\\0\\indices\\j2-mG5c6RoOuLt4WUv1abg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,357][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-011\\nodes\\0\\indices\\oQBVAmnVjq] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,358][INFO ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-008\\j2-mG5c6RoOuLt4WUv1abg] no upgrade needed - already upgraded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,360][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-011\\nodes\\0\\indices\\oQBVAmnVjq] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-011\\nodes\\0\\indices\\j2-mG5c6RoOuLt4WUv1abg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,379][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-012\\nodes\\0\\indices\\oQBVAmnVjq] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,380][INFO ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-008\\j2-mG5c6RoOuLt4WUv1abg] no upgrade needed - already upgraded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,382][INFO ][org.elasticsearch.common.util] [node_s_0] [oQBVAmnVjq/j2-mG5c6RoOuLt4WUv1abg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-012\\nodes\\0\\indices\\oQBVAmnVjq] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-012\\nodes\\0\\indices\\j2-mG5c6RoOuLt4WUv1abg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474047316122,
  "executionTime": 328
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,525][INFO ][org.elasticsearch.env    ] [1QJ1fLm] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,526][INFO ][org.elasticsearch.env    ] [1QJ1fLm] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,849][INFO ][org.elasticsearch.common.util] [node_s_0] --> injecting index [index-2.0.0-beta1] into [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-016\\nodes\\0\\indices]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,921][WARN ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-014\\nodes\\0\\indices\\index-2.0.0-beta1] no index state found - ignoring%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,921][WARN ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-015\\nodes\\0\\indices\\index-2.0.0-beta1] no index state found - ignoring%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,923][INFO ][org.elasticsearch.common.util] [node_s_0] [index-2.0.0-beta1/O693pVi8RMqnCOQaEz_RXw] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-016\\nodes\\0\\indices\\index-2.0.0-beta1] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:16,927][INFO ][org.elasticsearch.common.util] [node_s_0] [index-2.0.0-beta1/O693pVi8RMqnCOQaEz_RXw] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-016\\nodes\\0\\indices\\index-2.0.0-beta1] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-016\\nodes\\0\\indices\\O693pVi8RMqnCOQaEz_RXw]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474047316450,
  "executionTime": 519
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,032][INFO ][org.elasticsearch.env    ] [RXvxUbv] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,033][INFO ][org.elasticsearch.env    ] [RXvxUbv] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,113][INFO ][org.elasticsearch.common.util] [node_s_0] [RDSSLruxEg/SeQCHZdyT4mK_hG6I_dwMA] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-019\\nodes\\0\\indices\\RDSSLruxEg] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,115][INFO ][org.elasticsearch.common.util] [node_s_0] [RDSSLruxEg/SeQCHZdyT4mK_hG6I_dwMA] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-019\\nodes\\0\\indices\\RDSSLruxEg] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-019\\nodes\\0\\indices\\SeQCHZdyT4mK_hG6I_dwMA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,118][INFO ][org.elasticsearch.common.util] [node_s_0] [RDSSLruxEg/SeQCHZdyT4mK_hG6I_dwMA] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-020\\nodes\\0\\indices\\RDSSLruxEg] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,122][INFO ][org.elasticsearch.common.util] [node_s_0] [RDSSLruxEg/SeQCHZdyT4mK_hG6I_dwMA] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-020\\nodes\\0\\indices\\RDSSLruxEg] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-020\\nodes\\0\\indices\\SeQCHZdyT4mK_hG6I_dwMA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,124][INFO ][org.elasticsearch.common.util] [node_s_0] [RDSSLruxEg/SeQCHZdyT4mK_hG6I_dwMA] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-021\\nodes\\0\\indices\\RDSSLruxEg] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,126][INFO ][org.elasticsearch.common.util] [node_s_0] [RDSSLruxEg/SeQCHZdyT4mK_hG6I_dwMA] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-021\\nodes\\0\\indices\\RDSSLruxEg] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-021\\nodes\\0\\indices\\SeQCHZdyT4mK_hG6I_dwMA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474047316969,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,178][INFO ][org.elasticsearch.env    ] [T6kZfNK] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,179][INFO ][org.elasticsearch.env    ] [T6kZfNK] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,538][INFO ][org.elasticsearch.common.util] [node_s_0] [cNuRAptfVb/WFK9iu2QSNS_xTKCQ7rbpQ] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\cNuRAptfVb] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,540][INFO ][org.elasticsearch.common.util] [node_s_0] [cNuRAptfVb/WFK9iu2QSNS_xTKCQ7rbpQ] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\cNuRAptfVb] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\WFK9iu2QSNS_xTKCQ7rbpQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,543][INFO ][org.elasticsearch.common.util] [node_s_0] [RXQnjnwEqO/LIr8N6Q_Qkuzq6w4u-ZGTg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\RXQnjnwEqO] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,545][INFO ][org.elasticsearch.common.util] [node_s_0] [RXQnjnwEqO/LIr8N6Q_Qkuzq6w4u-ZGTg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\RXQnjnwEqO] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\LIr8N6Q_Qkuzq6w4u-ZGTg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,548][INFO ][org.elasticsearch.common.util] [node_s_0] [OzuzyZCVGD/uOY-ZzhCRmONvkuKqhO6JQ] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\OzuzyZCVGD] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:17,556][INFO ][org.elasticsearch.common.util] [node_s_0] [OzuzyZCVGD/uOY-ZzhCRmONvkuKqhO6JQ] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\OzuzyZCVGD] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J1\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_229C635BFFC33CB2-001\\tempDir-023\\nodes\\0\\indices\\uOY-ZzhCRmONvkuKqhO6JQ]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474047317139,
  "executionTime": 544
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.IndexFolderUpgraderTests",
  "startTimestamp": 1474047315659,
  "executionTime": 2380
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.CompoundProcessorTests",
   "displayName": "org.elasticsearch.ingest.CompoundProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.CompoundProcessorTests",
   "children": [
    {
     "id": "ID#testIgnoreFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testIgnoreFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testIgnoreFailure",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testSingleProcessorWithOnFailureProcessor(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testSingleProcessorWithOnFailureProcessor(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testSingleProcessorWithOnFailureProcessor",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testCompoundProcessorExceptionFail(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testCompoundProcessorExceptionFail(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testCompoundProcessorExceptionFail",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testSingleProcessorWithNestedFailures(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testSingleProcessorWithNestedFailures(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testSingleProcessorWithNestedFailures",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testBreakOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testBreakOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testBreakOnFailure",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testCompoundProcessorExceptionFailWithoutOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testCompoundProcessorExceptionFailWithoutOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testCompoundProcessorExceptionFailWithoutOnFailure",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testSingleProcessorWithException(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testSingleProcessorWithException(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testSingleProcessorWithException",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testEmpty(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testSingleProcessor(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testSingleProcessor(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testSingleProcessor",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    },
    {
     "id": "ID#testCompoundProcessorExceptionFailInOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "displayName": "testCompoundProcessorExceptionFailInOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
     "methodName": "testCompoundProcessorExceptionFailInOnFailure",
     "className": "org.elasticsearch.ingest.CompoundProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318045
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreFailure(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318070,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleProcessorWithOnFailureProcessor(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleProcessorWithOnFailureProcessor(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318073,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundProcessorExceptionFail(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundProcessorExceptionFail(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318077,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleProcessorWithNestedFailures(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleProcessorWithNestedFailures(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318080,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318083,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundProcessorExceptionFailWithoutOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundProcessorExceptionFailWithoutOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318086,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleProcessorWithException(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleProcessorWithException(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318089,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318091,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleProcessor(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleProcessor(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318093,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundProcessorExceptionFailInOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundProcessorExceptionFailInOnFailure(org.elasticsearch.ingest.CompoundProcessorTests)",
  "startTimestamp": 1474047318095,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.CompoundProcessorTests",
  "startTimestamp": 1474047318045,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.RegexOptionsTests",
   "displayName": "org.elasticsearch.search.suggest.completion.RegexOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.RegexOptionsTests",
   "children": [
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.search.suggest.completion.RegexOptionsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.RegexOptionsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.RegexOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318104
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.search.suggest.completion.RegexOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
  "startTimestamp": 1474047318131,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.RegexOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
  "startTimestamp": 1474047318132,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.RegexOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.RegexOptionsTests)",
  "startTimestamp": 1474047318135,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.RegexOptionsTests",
  "startTimestamp": 1474047318104,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.StringFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.StringFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318144
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1474047318184,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1474047318187,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1474047318189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1474047318192,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.StringFieldTypeTests)",
  "startTimestamp": 1474047318194,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringFieldTypeTests",
  "startTimestamp": 1474047318144,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests",
   "children": [
    {
     "id": "ID#testPrioritizedIndicesAllocatedFirst(org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests)",
     "displayName": "testPrioritizedIndicesAllocatedFirst(org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests)",
     "methodName": "testPrioritizedIndicesAllocatedFirst",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318204
 }
]

[
 "TEST_STARTED",
 "ID#testPrioritizedIndicesAllocatedFirst(org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrioritizedIndicesAllocatedFirst(org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests)",
  "startTimestamp": 1474047318234,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationPriorityTests",
  "startTimestamp": 1474047318204,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.index.IndexRequestTests",
   "displayName": "org.elasticsearch.action.index.IndexRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.index.IndexRequestTests",
   "children": [
    {
     "id": "ID#testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testSetTTLAsLong",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testWaitForActiveShards",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testCreateOperationRejectsVersions",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testValidateTTL",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testAutoGenIdTimestampIsSet",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testIndexingRejectsLongIds",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testSetTTLAsTimeValue",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testReadBogusString",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testSetTTLAsString",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    },
    {
     "id": "ID#testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)",
     "displayName": "testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)",
     "methodName": "testIndexRequestOpTypeFromString",
     "className": "org.elasticsearch.action.index.IndexRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318259
 }
]

[
 "TEST_STARTED",
 "ID#testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetTTLAsLong(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318324,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForActiveShards(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318327,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateOperationRejectsVersions(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318330,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateTTL(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318332,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoGenIdTimestampIsSet(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318334,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingRejectsLongIds(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318337,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetTTLAsTimeValue(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318340,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBogusString(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318343,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetTTLAsString(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318345,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexRequestOpTypeFromString(org.elasticsearch.action.index.IndexRequestTests)",
  "startTimestamp": 1474047318348,
  "executionTime": 43
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.index.IndexRequestTests",
  "startTimestamp": 1474047318259,
  "executionTime": 134
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hppc.HppcMapsTests",
   "displayName": "org.elasticsearch.common.hppc.HppcMapsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.hppc.HppcMapsTests",
   "children": [
    {
     "id": "ID#testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)",
     "displayName": "testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)",
     "methodName": "testIntersection",
     "className": "org.elasticsearch.common.hppc.HppcMapsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318397
 }
]

[
 "TEST_STARTED",
 "ID#testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntersection(org.elasticsearch.common.hppc.HppcMapsTests)",
  "startTimestamp": 1474047318443,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hppc.HppcMapsTests",
  "startTimestamp": 1474047318397,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "displayName": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "children": [
    {
     "id": "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeInterval_Kathmandu_DST_Start",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRounding_HalfDay_DST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testEdgeCasesTransition",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalCET_DST_Start",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRounding_NotDivisibleInteval",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testLenientConversionDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testAmbiguousHoursAfterDSTSwitch",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalCET_DST_End",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeUnitRoundingDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCTimeUnitRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingMonotonic_CET",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047318458
 }
]

[
 "TEST_STARTED",
 "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047318508,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047318524,
  "executionTime": 2106
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320631,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320633,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320635,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320651,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320670,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320672,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320675,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320677,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320680,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320689,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320697,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320700,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320704,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047320706,
  "executionTime": 766
 }
]

[
 "TEST_STARTED",
 "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047321472,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1474047321479,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
  "startTimestamp": 1474047318458,
  "executionTime": 3025
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
   "displayName": "org.elasticsearch.fieldstats.FieldStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.fieldstats.FieldStatsTests",
   "children": [
    {
     "id": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering_optionalFormat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMetaFieldsNotIndexed",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testShort",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testByte",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testNumberFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testHalfFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge_notAvailable",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testString",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testLong",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testInteger",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047321491
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,524][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,620][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,620][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,626][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,631][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,632][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,891][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,891][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,892][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,900][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{0jQasYseTx-UUz6kbRGPpQ}{RiDvq5Z6Q_KD2lX8Qoyulw}{local}{local[20]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,901][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,926][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:21,946][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,003][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/V_B6A77iQvWPcEsd1fxVXw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,053][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,128][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/ChgtEUF7RkKQbqBuBH-SeQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,748][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047321515,
  "executionTime": 1349
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:22,879][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:23,017][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:23,045][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:23,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:23,938][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering_optionalFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047322864,
  "executionTime": 1141
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:24,014][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:24,062][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,020][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDouble]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047324005,
  "executionTime": 1104
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,118][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,278][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047325109,
  "executionTime": 254
 }
]

[
 "TEST_STARTED",
 "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,541][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-U_83XDbQE6y1v9a-Qj3Xg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,736][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMetaFieldsNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047325363,
  "executionTime": 405
 }
]

[
 "TEST_STARTED",
 "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,793][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,874][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:25,963][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:26,022][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,013][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,062][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,079][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,149][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,172][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:27,967][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,047][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,140][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,236][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,510][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testShort]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047325768,
  "executionTime": 2743
 }
]

[
 "TEST_STARTED",
 "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,519][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,564][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,640][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,707][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,577][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,741][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,772][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,981][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,397][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,454][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,475][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,522][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,539][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,601][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,948][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testByte]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047328511,
  "executionTime": 2438
 }
]

[
 "TEST_STARTED",
 "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,960][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,034][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/h3z3CbeFRya6VukzkmnnKA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,063][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,133][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/X4BD7M31ScakA-9iMtS9vw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,530][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testNumberFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047330949,
  "executionTime": 678
 }
]

[
 "TEST_STARTED",
 "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,636][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:31,994][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testHalfFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047331627,
  "executionTime": 402
 }
]

[
 "TEST_STARTED",
 "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,033][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge_notAvailable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047332029,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,044][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,103][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,540][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047332034,
  "executionTime": 546
 }
]

[
 "TEST_STARTED",
 "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,590][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,841][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047332580,
  "executionTime": 303
 }
]

[
 "TEST_STARTED",
 "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,890][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,950][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:32,971][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:33,023][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:33,038][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:33,175][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:33,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:33,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:34,008][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:34,081][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:34,097][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:34,193][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:35,296][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:35,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:35,394][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:35,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:35,504][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:35,580][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,155][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047332883,
  "executionTime": 3273
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,159][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047336156,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,169][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,304][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,327][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:36,496][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,146][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,194][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,323][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,339][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,392][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,673][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,710][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,722][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,769][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,784][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:37,835][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,157][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474047336161,
  "executionTime": 1997
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,159][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,159][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,160][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,165][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
  "startTimestamp": 1474047321491,
  "executionTime": 16684
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.LiveVersionMapTests",
   "displayName": "org.elasticsearch.index.engine.LiveVersionMapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.LiveVersionMapTests",
   "children": [
    {
     "id": "ID#testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)",
     "displayName": "testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)",
     "methodName": "testRamBytesUsed",
     "className": "org.elasticsearch.index.engine.LiveVersionMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047338180
 }
]

[
 "TEST_STARTED",
 "ID#testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRamBytesUsed(org.elasticsearch.index.engine.LiveVersionMapTests)",
  "startTimestamp": 1474047338206,
  "executionTime": 1389
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.LiveVersionMapTests",
  "startTimestamp": 1474047338180,
  "executionTime": 1417
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047339626
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,658][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CNduor1eSeCJLtaqD4Uxaw}{local}{local[232]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
  "startTimestamp": 1474047339670,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
  "startTimestamp": 1474047339683,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoBoundsTests)",
  "startTimestamp": 1474047339686,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.GeoBoundsTests",
  "startTimestamp": 1474047339626,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ZenPingTests",
   "displayName": "org.elasticsearch.discovery.zen.ZenPingTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ZenPingTests",
   "children": [
    {
     "id": "ID#testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)",
     "displayName": "testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)",
     "methodName": "testPingCollection",
     "className": "org.elasticsearch.discovery.zen.ZenPingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047339699
 }
]

[
 "TEST_STARTED",
 "ID#testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPingCollection(org.elasticsearch.discovery.zen.ZenPingTests)",
  "startTimestamp": 1474047339734,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ZenPingTests",
  "startTimestamp": 1474047339699,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
   "children": [
    {
     "id": "ID#testLegacyMatchPhraseQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testLegacyMatchPhraseQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testLegacyMatchPhraseQuery",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLegacyFuzzyMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testLegacyFuzzyMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testLegacyFuzzyMatchQuery",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLegacyMatchPhrasePrefixQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testLegacyMatchPhrasePrefixQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testLegacyMatchPhrasePrefixQuery",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExactOnUnsupportedField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testExactOnUnsupportedField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testExactOnUnsupportedField",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testSimpleMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testSimpleMatchQuery",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "displayName": "testFuzzinessOnNonStringField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
     "methodName": "testFuzzinessOnNonStringField",
     "className": "org.elasticsearch.index.query.MatchQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047339747
 }
]

[
 "TEST_STARTED",
 "ID#testLegacyMatchPhraseQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,772][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UWn2DMdRTJyxt66jFzkw4A}{local}{local[249]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,779][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,779][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,792][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,792][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,792][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,793][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,794][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,794][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,798][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,798][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,798][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,800][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,800][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,800][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,803][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,803][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,803][WARN ][org.elasticsearch.deprecation.index.mapper]  [sPkbCqov] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,805][WARN ][org.elasticsearch.deprecation.common] Deprecated field [type] used, replaced by [match_phrase and match_phrase_prefix query]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,805][WARN ][org.elasticsearch.deprecation.common] Deprecated field [slop] used, replaced by [match_phrase query]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLegacyMatchPhraseQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339766,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339807,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339809,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339812,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339817,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLegacyFuzzyMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,823][WARN ][org.elasticsearch.deprecation.common] Deprecated field [fuzzy_match] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,823][WARN ][org.elasticsearch.deprecation.common] Deprecated field [slop] used, replaced by [match_phrase query]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLegacyFuzzyMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339824,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLegacyMatchPhrasePrefixQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,829][WARN ][org.elasticsearch.deprecation.common] Deprecated field [type] used, replaced by [match_phrase and match_phrase_prefix query]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:39,829][WARN ][org.elasticsearch.deprecation.common] Deprecated field [slop] used, replaced by [match_phrase query]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLegacyMatchPhrasePrefixQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339827,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339830,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExactOnUnsupportedField(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExactOnUnsupportedField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339834,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339837,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMatchQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339841,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339843,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339863,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339905,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MatchQueryBuilderTests)",
  "startTimestamp": 1474047339908,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchQueryBuilderTests",
  "startTimestamp": 1474047339747,
  "executionTime": 169
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
   "children": [
    {
     "id": "ID#testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testInSyncIdsNotGrowingWithoutBounds",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testInSyncAllocationIdsUpdated",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testPrimaryFailureBatchedWithReplicaFailure",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "displayName": "testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
     "methodName": "testDeadNodesBeforeReplicaFailed",
     "className": "org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047339922
 }
]

[
 "TEST_STARTED",
 "ID#testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,945][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,947][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,947][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,947][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove a node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,948][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,951][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,951][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,952][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,952][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,952][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,952][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,952][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,953][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,954][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,954][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,955][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,955][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add back node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,956][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,956][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove the node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,956][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInSyncIdsNotGrowingWithoutBounds(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1474047339938,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 2 replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding three nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,965][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove a node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,966][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove all remaining nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,966][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,967][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,968][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,970][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInSyncAllocationIdsUpdated(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1474047339956,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,978][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,978][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,978][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Failing [shard id [[test][0]], allocation id [waIgDVGQQoWNwvkrfy7jbg], primary term [1], message [dummy], shard id [[test][0]], allocation id [V1JMZieiT3GFlvzf-QNwsQ], primary term [0], message [dummy]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,979][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryFailureBatchedWithReplicaFailure(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1474047339970,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,988][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,988][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,988][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,988][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove replica node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,989][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:05:39,989][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail replica (for which there is no shard routing in the CS anymore)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeadNodesBeforeReplicaFailed(org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests)",
  "startTimestamp": 1474047339979,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.InSyncAllocationIdTests",
  "startTimestamp": 1474047339922,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.util.SloppyMathTests",
   "displayName": "org.apache.lucene.util.SloppyMathTests",
   "methodName": null,
   "className": "org.apache.lucene.util.SloppyMathTests",
   "children": [
    {
     "id": "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
     "displayName": "testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
     "methodName": "testSloppyMath",
     "className": "org.apache.lucene.util.SloppyMathTests",
     "children": []
    },
    {
     "id": "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)",
     "displayName": "testAccuracy(org.apache.lucene.util.SloppyMathTests)",
     "methodName": "testAccuracy",
     "className": "org.apache.lucene.util.SloppyMathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047340004
 }
]

[
 "TEST_STARTED",
 "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:40,028][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with m at \"45.73859592466255, -5.531533728681914\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:40,047][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with km at \"45.76905434165112, -45.138069221877295\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:40,054][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with in at \"30.142580436412754, 35.572153995450776\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:40,057][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with mi at \"-29.00780868724191, -79.99004506042245\"%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
  "startTimestamp": 1474047340026,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)",
  "startTimestamp": 1474047340060,
  "executionTime": 302
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.util.SloppyMathTests",
  "startTimestamp": 1474047340004,
  "executionTime": 360
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFirstAllocationFailureSingleNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFirstAllocationFailureTwoNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailAllReplicasInitializingOnPrimaryFail",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailedShardPrimaryRelocatingToAndFrom",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testSingleShardMultipleAllocationFailures",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testRebalanceFailure",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailPrimaryStartedCheckReplicaElected",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "displayName": "testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
     "methodName": "testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047340373
 }
]

[
 "TEST_STARTED",
 "ID#testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,401][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding single node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail the first shard, will have no place to be rerouted to (single node), so stays unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,404][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstAllocationFailureSingleNode(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340395,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,410][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,411][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,411][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail the first shard, will start INITIALIZING on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,412][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstAllocationFailureTwoNodes(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340404,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,620][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,621][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllReplicasInitializingOnPrimaryFail(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340412,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,630][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,631][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 2 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,632][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verifying all is allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding additional node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> moving primary shard to node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail primary shard recovering instance on node3 being initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> moving primary shard to node3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail primary shard recovering instance on node1 being relocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,634][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedShardPrimaryRelocatingToAndFrom(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340621,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,650][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,650][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding 4 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] failing shard on node [node2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] failing shard on node [node2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] failing shard on node [node1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,687][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShardMultipleAllocationFailures(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340634,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,724][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,724][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,726][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (backups)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,726][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding third node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Fail the shards on node 3%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceFailure(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340687,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards (backups)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,736][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] fail the primary shard, will have no place to be rerouted to (single node), so stays unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:40,737][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailPrimaryStartedCheckReplicaElected(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340728,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllReplicasInitializingOnPrimaryFailWhileHavingAReplicaToElect(org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests)",
  "startTimestamp": 1474047340738,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FailedShardsRoutingTests",
  "startTimestamp": 1474047340373,
  "executionTime": 377
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.PercentilesTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentilesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047340755
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:40,786][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HhHxSzygRgysRcRpwu0lOg}{local}{local[288]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
  "startTimestamp": 1474047340810,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
  "startTimestamp": 1474047340813,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentilesTests)",
  "startTimestamp": 1474047340815,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.PercentilesTests",
  "startTimestamp": 1474047340755,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "children": [
    {
     "id": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "displayName": "testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "methodName": "testTopN",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047340851
 }
]

[
 "TEST_STARTED",
 "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
  "startTimestamp": 1474047340876,
  "executionTime": 154
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
  "startTimestamp": 1474047340851,
  "executionTime": 181
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
   "children": [
    {
     "id": "ID#testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testEmptySettingsAreOkay",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testDisabledSetting",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testNegativeSetting",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testMissingSetting",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "displayName": "testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
     "methodName": "testIllegalOverheadSettings",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341039
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySettingsAreOkay(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474047341077,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabledSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474047341088,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474047341092,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSetting(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474047341105,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalOverheadSettings(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests)",
  "startTimestamp": 1474047341109,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceSettingsTests",
  "startTimestamp": 1474047341039,
  "executionTime": 116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.smile.SmileXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.smile.SmileXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341161
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474047341180,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474047341182,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474047341185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474047341187,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474047341189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.smile.SmileXContentTests)",
  "startTimestamp": 1474047341191,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.smile.SmileXContentTests",
  "startTimestamp": 1474047341161,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.ValueSourceTests",
   "displayName": "org.elasticsearch.ingest.ValueSourceTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.ValueSourceTests",
   "children": [
    {
     "id": "ID#testCopyDoesNotChangeProvidedList(org.elasticsearch.ingest.ValueSourceTests)",
     "displayName": "testCopyDoesNotChangeProvidedList(org.elasticsearch.ingest.ValueSourceTests)",
     "methodName": "testCopyDoesNotChangeProvidedList",
     "className": "org.elasticsearch.ingest.ValueSourceTests",
     "children": []
    },
    {
     "id": "ID#testDeepCopy(org.elasticsearch.ingest.ValueSourceTests)",
     "displayName": "testDeepCopy(org.elasticsearch.ingest.ValueSourceTests)",
     "methodName": "testDeepCopy",
     "className": "org.elasticsearch.ingest.ValueSourceTests",
     "children": []
    },
    {
     "id": "ID#testCopyDoesNotChangeProvidedMap(org.elasticsearch.ingest.ValueSourceTests)",
     "displayName": "testCopyDoesNotChangeProvidedMap(org.elasticsearch.ingest.ValueSourceTests)",
     "methodName": "testCopyDoesNotChangeProvidedMap",
     "className": "org.elasticsearch.ingest.ValueSourceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341199
 }
]

[
 "TEST_STARTED",
 "ID#testCopyDoesNotChangeProvidedList(org.elasticsearch.ingest.ValueSourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyDoesNotChangeProvidedList(org.elasticsearch.ingest.ValueSourceTests)",
  "startTimestamp": 1474047341222,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDeepCopy(org.elasticsearch.ingest.ValueSourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepCopy(org.elasticsearch.ingest.ValueSourceTests)",
  "startTimestamp": 1474047341231,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCopyDoesNotChangeProvidedMap(org.elasticsearch.ingest.ValueSourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyDoesNotChangeProvidedMap(org.elasticsearch.ingest.ValueSourceTests)",
  "startTimestamp": 1474047341240,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.ValueSourceTests",
  "startTimestamp": 1474047341199,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StopAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.StopAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StopAnalyzerTests",
   "children": [
    {
     "id": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.StopAnalyzerTests)",
     "displayName": "testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.StopAnalyzerTests)",
     "methodName": "testDefaultsCompoundAnalysis",
     "className": "org.elasticsearch.index.analysis.StopAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341248
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.StopAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.StopAnalyzerTests)",
  "startTimestamp": 1474047341285,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StopAnalyzerTests",
  "startTimestamp": 1474047341248,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "displayName": "testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
     "methodName": "testNullCategoryIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341313
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1474047341353,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1474047341355,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCategoryIsIllegal(org.elasticsearch.search.suggest.completion.CategoryQueryContextTests)",
  "startTimestamp": 1474047341358,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryQueryContextTests",
  "startTimestamp": 1474047341313,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "displayName": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "children": [
    {
     "id": "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
     "displayName": "testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
     "methodName": "testQueryRewriteOnRefresh",
     "className": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341373
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,458][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,486][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,487][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,493][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,496][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,496][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,628][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,628][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,629][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,630][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{4FSoiD4IS8SOVIpZrr_xEA}{zGtgWYUDSHCa8KjzJ8EsZQ}{local}{local[21]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,631][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,642][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,671][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:41,839][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:42,411][INFO ][org.elasticsearch.index.fieldstats] [FieldStatsProviderRefreshTests#testQueryRewriteOnRefresh]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
  "startTimestamp": 1474047341448,
  "executionTime": 1009
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:42,457][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:42,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:42,462][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:42,464][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
  "startTimestamp": 1474047341373,
  "executionTime": 1101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.RefreshListenersTests",
   "displayName": "org.elasticsearch.index.shard.RefreshListenersTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.RefreshListenersTests",
   "children": [
    {
     "id": "ID#testLotsOfThreads(org.elasticsearch.index.shard.RefreshListenersTests)",
     "displayName": "testLotsOfThreads(org.elasticsearch.index.shard.RefreshListenersTests)",
     "methodName": "testLotsOfThreads",
     "className": "org.elasticsearch.index.shard.RefreshListenersTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentRefresh(org.elasticsearch.index.shard.RefreshListenersTests)",
     "displayName": "testConcurrentRefresh(org.elasticsearch.index.shard.RefreshListenersTests)",
     "methodName": "testConcurrentRefresh",
     "className": "org.elasticsearch.index.shard.RefreshListenersTests",
     "children": []
    },
    {
     "id": "ID#testTooMany(org.elasticsearch.index.shard.RefreshListenersTests)",
     "displayName": "testTooMany(org.elasticsearch.index.shard.RefreshListenersTests)",
     "methodName": "testTooMany",
     "className": "org.elasticsearch.index.shard.RefreshListenersTests",
     "children": []
    },
    {
     "id": "ID#testAfterRefresh(org.elasticsearch.index.shard.RefreshListenersTests)",
     "displayName": "testAfterRefresh(org.elasticsearch.index.shard.RefreshListenersTests)",
     "methodName": "testAfterRefresh",
     "className": "org.elasticsearch.index.shard.RefreshListenersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047342481
 }
]

[
 "TEST_STARTED",
 "ID#testLotsOfThreads(org.elasticsearch.index.shard.RefreshListenersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLotsOfThreads(org.elasticsearch.index.shard.RefreshListenersTests)",
  "startTimestamp": 1474047342519,
  "executionTime": 7594
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentRefresh(org.elasticsearch.index.shard.RefreshListenersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentRefresh(org.elasticsearch.index.shard.RefreshListenersTests)",
  "startTimestamp": 1474047350113,
  "executionTime": 7294
 }
]

[
 "TEST_STARTED",
 "ID#testTooMany(org.elasticsearch.index.shard.RefreshListenersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooMany(org.elasticsearch.index.shard.RefreshListenersTests)",
  "startTimestamp": 1474047357407,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testAfterRefresh(org.elasticsearch.index.shard.RefreshListenersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAfterRefresh(org.elasticsearch.index.shard.RefreshListenersTests)",
  "startTimestamp": 1474047357437,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.RefreshListenersTests",
  "startTimestamp": 1474047342481,
  "executionTime": 14990
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testQueryMalformedArrayNotSupported",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessageWhenMissingFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMalformedThrowsException",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testWeight1fStillProducesWeightFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessagesForMisplacedWeightsAndFunctions",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testCustomWeightFactorQueryBuilderWithFunctionScore",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMalformedQueryFunctionFieldNotSupported",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testParseSingleFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testRewriteWithFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testParseFunctionsArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testQueryMalformedFieldNotSupported",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testMalformedQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "displayName": "testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
     "methodName": "testFieldValueFactorFactorArray",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047357480
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,506][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1bGMw__aSXiOpfpD248i4Q}{local}{local[289]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,514][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,514][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,528][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,528][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,528][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,529][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,529][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,529][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,530][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,530][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,530][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,532][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,532][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,532][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,533][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,533][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,533][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,535][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,535][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,535][WARN ][org.elasticsearch.deprecation.index.mapper]  [vsrw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,537][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,537][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [5:20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,537][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [9:20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,538][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,538][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [5:20]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:57,538][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [9:20]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357500,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357538,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryMalformedArrayNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357541,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessageWhenMissingFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357543,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedThrowsException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357545,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeight1fStillProducesWeightFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357547,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessagesForMisplacedWeightsAndFunctions(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInQueryBody(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357553,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357556,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomWeightFactorQueryBuilderWithFunctionScore(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357559,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357562,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedQueryFunctionFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357598,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSingleFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357601,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357606,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357608,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteWithFunction(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357633,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357636,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357643,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomWeightFactorQueryBuilderWithFunctionScoreWithoutQueryGiven(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357647,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357649,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryMalformedFieldNotSupported(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357652,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357655,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProperErrorMessageWhenTwoFunctionsDefinedInFunctionsArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357658,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedQuery(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357661,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357664,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357671,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldValueFactorFactorArray(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests)",
  "startTimestamp": 1474047357682,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilderTests",
  "startTimestamp": 1474047357480,
  "executionTime": 209
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "children": [
    {
     "id": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "displayName": "testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "methodName": "testRebalanceOnlyAfterAllShardsAreActive",
     "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047357694
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,716][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,716][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,717][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,718][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 8 more nodes, and check that no rebalancing/relocation have happened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,719][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards, rebalancing should start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,721][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,721][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete relocation, other half of relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:35:57,723][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete relocation, that's it!%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
  "startTimestamp": 1474047357709,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
  "startTimestamp": 1474047357694,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.ReplicaShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
   "children": [
    {
     "id": "ID#testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testCancelRecoveryBetterSyncId",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testDelayedAllocation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testFileChecksumMatch",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNotCancellingRecoveryIfSyncedOnExistingRecovery",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testSyncIdMatch",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testAsyncFetchOnAnythingButIndexCreation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testSimpleFullMatchAllocation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoDataForReplicaOnAnyNode",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNotCancellingRecovery",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoAsyncFetchOnIndexCreation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testThrottleWhenAllocatingToMatchingNode",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoOrThrottleDecidersRemainsInUnassigned",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoPrimaryData",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoMatchingFilesForReplicaOnAnyNode",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047357735
 }
]

[
 "TEST_STARTED",
 "ID#testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357758,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357774,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357779,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357782,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357785,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357788,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357791,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357795,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357797,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357800,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357805,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357808,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357811,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1474047357814,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.ReplicaShardAllocatorTests",
  "startTimestamp": 1474047357735,
  "executionTime": 86
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047357825
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
  "startTimestamp": 1474047357843,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
  "startTimestamp": 1474047357825,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ExistsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047357854
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:57,885][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gRWN9_GNRTyPFADxosPDPQ}{local}{local[345]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:57,895][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:57,896][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357876,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357917,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357920,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357922,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357929,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357931,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357934,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357937,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357941,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474047357943,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ExistsQueryBuilderTests",
  "startTimestamp": 1474047357854,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
   "children": [
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNullConfigValuesFail",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testChangeLocale",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testChangeFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047357956
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:57,980][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,005][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,005][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,009][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,012][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,012][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,125][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,126][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,127][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,128][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{5QzVEpfEQcOG831J6018gQ}{kGp6F08QRDe9hJ3w-kpDjA}{local}{local[22]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,129][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,151][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,167][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,219][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,234][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047357971,
  "executionTime": 291
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,268][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,311][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,324][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358262,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,419][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358356,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,452][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,499][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,512][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358447,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,544][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,601][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358538,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,637][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,679][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,695][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,751][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [DateFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358630,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,800][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,873][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNullConfigValuesFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358794,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,913][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,962][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:58,976][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testChangeLocale]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047358908,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,012][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,072][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,085][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047359007,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,121][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,181][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047359115,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,236][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,292][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testChangeFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474047359230,
  "executionTime": 86
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,316][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,317][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,317][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:59,318][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldMapperTests",
  "startTimestamp": 1474047357956,
  "executionTime": 1372
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.UnassignedInfoTests",
   "displayName": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
   "children": [
    {
     "id": "ID#testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testIndexReopened",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testAllocationStatusSerialization",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testStateTransitionMetaHandling",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testFailedShard",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testReplicaAdded",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testFindNextDelayedAllocation",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testNewIndexRestored",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testIndexCreated",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testNumberOfDelayedUnassigned",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testDanglingIndexImported",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testClusterRecovered",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testNodeLeave",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testReasonOrdinalOrder",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testRemainingDelayCalculation",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    },
    {
     "id": "ID#testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "displayName": "testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
     "methodName": "testExistingIndexRestored",
     "className": "org.elasticsearch.cluster.routing.UnassignedInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047359341
 }
]

[
 "TEST_STARTED",
 "ID#testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexReopened(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359371,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocationStatusSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359373,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStateTransitionMetaHandling(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359375,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,385][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,388][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedShard(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359377,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,395][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaAdded(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359389,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,408][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,409][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFindNextDelayedAllocation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359396,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359409,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCreated(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359411,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,421][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,422][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumberOfDelayedUnassigned(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359413,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndexImported(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359423,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterRecovered(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359425,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,433][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:59,434][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLeave(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359427,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReasonOrdinalOrder(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359434,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359436,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingDelayCalculation(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359438,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingIndexRestored(org.elasticsearch.cluster.routing.UnassignedInfoTests)",
  "startTimestamp": 1474047359440,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.UnassignedInfoTests",
  "startTimestamp": 1474047359341,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UpdateMappingTests",
   "displayName": "org.elasticsearch.index.mapper.UpdateMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
   "children": [
    {
     "id": "ID#testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllEnabledAfterEnabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testReuseMetaFieldBackCompat",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testReuseMetaField",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testConflictNewType",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testConflictNewTypeUpdate",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllEnabledAfterDisabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testRejectFieldDefinedTwice",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllDisabledAfterDisabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllDisabledAfterEnabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testConflictSameType",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllDisabledAfterDefaultEnabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047359451
 }
]

[
 "TEST_STARTED",
 "ID#testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,473][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,494][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,494][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,498][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,500][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,500][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,601][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,601][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,602][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,603][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iElWTKXoQxauVbHk6HF6wA}{dzm1kWLqSSG87B0HWjXpIg}{local}{local[23]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,604][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,614][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,651][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,706][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllEnabledAfterEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047359465,
  "executionTime": 271
 }
]

[
 "TEST_STARTED",
 "ID#testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,743][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,784][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,797][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testReuseMetaFieldBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047359736,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,825][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,865][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,877][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testReuseMetaField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047359819,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:35:59,972][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testConflictNewType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047359907,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,046][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,095][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testConflictNewTypeUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360040,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,125][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,162][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,173][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllEnabledAfterDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360118,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,200][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,262][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,509][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [UpdateMappingTests#testRejectFieldDefinedTwice]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360196,
  "executionTime": 373
 }
]

[
 "TEST_STARTED",
 "ID#testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,576][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,636][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,648][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllDisabledAfterDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360569,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,722][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,736][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllDisabledAfterEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360673,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,823][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,860][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testConflictSameType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360764,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,889][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,930][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,942][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllDisabledAfterDefaultEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1474047360882,
  "executionTime": 87
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,969][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,969][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,970][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:36:00,971][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UpdateMappingTests",
  "startTimestamp": 1474047359451,
  "executionTime": 1529
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IpFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IpFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
   "children": [
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSerializeDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testSerializeDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testSerializeDefaults",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.IpFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.IpFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047360987
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,009][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,026][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,027][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,031][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,034][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,034][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,145][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,145][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,145][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,148][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{5QzVEpfEQcOG831J6018gQ}{cSGZWygqRp2Pfm2AnBQ-fg}{local}{local[24]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,149][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,162][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,178][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,249][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,265][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361001,
  "executionTime": 306
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,313][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,376][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testSerializeDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361307,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,422][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,467][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,496][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361416,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,526][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,569][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,582][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361521,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,627][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,702][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361621,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,733][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,797][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,842][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,856][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [IpFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361728,
  "executionTime": 175
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:01,987][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047361903,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,024][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,084][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047362018,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.IpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,115][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,170][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,187][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IpFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.IpFieldMapperTests)",
  "startTimestamp": 1474047362109,
  "executionTime": 105
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,214][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,215][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,215][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:36:02,216][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IpFieldMapperTests",
  "startTimestamp": 1474047360987,
  "executionTime": 1239
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterChangedEventTests",
   "displayName": "org.elasticsearch.cluster.ClusterChangedEventTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
   "children": [
    {
     "id": "ID#testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testRoutingTableChanges",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testLocalNodeIsMaster",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testNodesAddedAndRemovedAndChanged",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testBasicProperties",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testIndexMetaDataChange",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testIndicesMetaDataChanges",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testIndicesDeletionWithNotRecoveredState",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047362232
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362251,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362254,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362258,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362260,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362262,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1474047362267,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterChangedEventTests",
  "startTimestamp": 1474047362232,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexServiceTests",
   "displayName": "org.elasticsearch.index.IndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexServiceTests",
   "children": [
    {
     "id": "ID#testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRefreshTaskIsUpdated",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testFsyncTaskIsRunning",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testBaseAsyncTask",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testDetermineShadowEngineShouldBeUsed",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRefreshActuallyWorks",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testAliasFilters(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testAliasFilters(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testAliasFilters",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRescheduleAsyncFsync",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testRemovedAliasFilter",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testAsyncFsyncActuallyWorks",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testIllegalFsyncInterval",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testUnknownAliasFilter",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testFilteringAliases(org.elasticsearch.index.IndexServiceTests)",
     "displayName": "testFilteringAliases(org.elasticsearch.index.IndexServiceTests)",
     "methodName": "testFilteringAliases",
     "className": "org.elasticsearch.index.IndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047362293
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,340][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,368][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,369][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,372][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,375][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,375][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,481][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,481][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,481][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,482][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rLi-JycaQOOnkIHGKFhihw}{EGdKxDPmThKG_BFi6XfBaw}{local}{local[25]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,483][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,496][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,517][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,567][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,580][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,580][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [-1] to [100ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,581][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [100ms] to [200ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,587][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRefreshTaskIsUpdated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshTaskIsUpdated(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047362329,
  "executionTime": 282
 }
]

[
 "TEST_STARTED",
 "ID#testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,618][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,688][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,689][WARN ][org.elasticsearch.indices.cluster] [[test][0]] marking and sending shard failed due to [master marked shard as active, but shard has not been created, mark shard as failed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,689][WARN ][org.elasticsearch.cluster.action.shard] [test][0] received shard failed for shard id [[test][0]], allocation id [tROFRyQXTW2SPme_8-YI1Q], primary term [0], message [master marked shard as active, but shard has not been created, mark shard as failed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,751][WARN ][org.elasticsearch.cluster.action.shard] [test][0] received shard failed for shard id [[test][0]], allocation id [tROFRyQXTW2SPme_8-YI1Q], primary term [0], message [master {node_s_0}{rLi-JycaQOOnkIHGKFhihw}{EGdKxDPmThKG_BFi6XfBaw}{local}{local[25]} has not removed previously failed shard. resending shard failure]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,805][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testFsyncTaskIsRunning]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFsyncTaskIsRunning(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047362611,
  "executionTime": 236
 }
]

[
 "TEST_STARTED",
 "ID#testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,903][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,919][WARN ][org.elasticsearch.index  ] failed to run task org.elasticsearch.index.IndexServiceTests$1@481d2fb1 - suppressing re-occurring exceptions unless the exception changes%0D%0Ajava.lang.RuntimeException: bar%0A%09at org.elasticsearch.index.IndexServiceTests$1.runInternal(IndexServiceTests.java:176) ~[test/:?]%0A%09at org.elasticsearch.index.IndexService$BaseAsyncTask.run(IndexService.java:785) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,940][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testBaseAsyncTask]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBaseAsyncTask(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047362847,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,965][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testDetermineShadowEngineShouldBeUsed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetermineShadowEngineShouldBeUsed(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047362961,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:02,972][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,031][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,034][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/OU0OTcKMSPOyeuRolIppgA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,035][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [-1] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,063][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [1ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,195][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRefreshActuallyWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047362966,
  "executionTime": 255
 }
]

[
 "TEST_STARTED",
 "ID#testAliasFilters(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,225][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,269][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,283][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testAliasFilters]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasFilters(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363221,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,324][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,370][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,382][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,385][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/0jdQNOuaSPGA-FHXWzWaYA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,385][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,402][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,402][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRescheduleAsyncFsync]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRescheduleAsyncFsync(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363311,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,447][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,494][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,505][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testRemovedAliasFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovedAliasFilter(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363440,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,532][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,590][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/wLiG0_UXQ1O-l80YsyEgQQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,646][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testAsyncFsyncActuallyWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncFsyncActuallyWorks(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363526,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,682][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testIllegalFsyncInterval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalFsyncInterval(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363679,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,688][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,734][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,766][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testUnknownAliasFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownAliasFilter(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363682,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testFilteringAliases(org.elasticsearch.index.IndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,799][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,847][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,859][INFO ][org.elasticsearch.index  ] [node_s_0] [IndexServiceTests#testFilteringAliases]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilteringAliases(org.elasticsearch.index.IndexServiceTests)",
  "startTimestamp": 1474047363793,
  "executionTime": 110
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,903][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,903][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,903][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:03,905][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexServiceTests",
  "startTimestamp": 1474047362293,
  "executionTime": 1627
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
   "children": [
    {
     "id": "ID#testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testCreateUpdateAliasRequest",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testCreateIndexRequest",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testGenerateRolloverIndexName",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    },
    {
     "id": "ID#testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "displayName": "testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
     "methodName": "testEvaluateConditions",
     "className": "org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047363926
 }
]

[
 "TEST_STARTED",
 "ID#testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateUpdateAliasRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474047363945,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateIndexRequest(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474047363947,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474047363949,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGenerateRolloverIndexName(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474047363952,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvaluateConditions(org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests)",
  "startTimestamp": 1474047363955,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.TransportRolloverActionTests",
  "startTimestamp": 1474047363926,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
   "children": [
    {
     "id": "ID#testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testMatchTypeTemplate",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testMatchAllTemplate",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testParseUnknownParam",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    },
    {
     "id": "ID#testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "displayName": "testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)",
     "methodName": "testParseUnknownMatchType",
     "className": "org.elasticsearch.index.mapper.DynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047363965
 }
]

[
 "TEST_STARTED",
 "ID#testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchTypeTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474047363979,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchAllTemplate(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474047363981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474047363983,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnknownParam(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474047363985,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:36:03,990][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Ignoring unrecognized match_mapping_type: [short]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnknownMatchType(org.elasticsearch.index.mapper.DynamicTemplateTests)",
  "startTimestamp": 1474047363988,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicTemplateTests",
  "startTimestamp": 1474047363965,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.IncludeExcludeTests",
   "displayName": "org.elasticsearch.search.aggregations.support.IncludeExcludeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.IncludeExcludeTests",
   "children": [
    {
     "id": "ID#testSingleTermWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)",
     "displayName": "testSingleTermWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)",
     "methodName": "testSingleTermWithOrds",
     "className": "org.elasticsearch.search.aggregations.support.IncludeExcludeTests",
     "children": []
    },
    {
     "id": "ID#testEmptyTermsWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)",
     "displayName": "testEmptyTermsWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)",
     "methodName": "testEmptyTermsWithOrds",
     "className": "org.elasticsearch.search.aggregations.support.IncludeExcludeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047363996
 }
]

[
 "TEST_STARTED",
 "ID#testSingleTermWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleTermWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)",
  "startTimestamp": 1474047364005,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyTermsWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyTermsWithOrds(org.elasticsearch.search.aggregations.support.IncludeExcludeTests)",
  "startTimestamp": 1474047364007,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.IncludeExcludeTests",
  "startTimestamp": 1474047363996,
  "executionTime": 14
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CommonTermsQueryParserTests",
   "displayName": "org.elasticsearch.index.query.CommonTermsQueryParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CommonTermsQueryParserTests",
   "children": [
    {
     "id": "ID#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)",
     "displayName": "testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)",
     "methodName": "testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown",
     "className": "org.elasticsearch.index.query.CommonTermsQueryParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364015
 }
]

[
 "TEST_STARTED",
 "ID#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,036][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,056][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,056][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,059][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,062][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,062][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,144][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,144][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,144][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,146][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{dcpBFUBvRymWye5HrKXsBA}{BQSW9pj9SNukPlx5gVYl1Q}{local}{local[26]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,146][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,159][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,177][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test-type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,219][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,233][INFO ][org.elasticsearch.index.query] [CommonTermsQueryParserTests#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhenParsedQueryIsNullNoNullPointerExceptionIsThrown(org.elasticsearch.index.query.CommonTermsQueryParserTests)",
  "startTimestamp": 1474047364028,
  "executionTime": 228
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,256][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,257][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,257][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:04,258][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CommonTermsQueryParserTests",
  "startTimestamp": 1474047364015,
  "executionTime": 251
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    },
    {
     "id": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "displayName": "testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
     "methodName": "testBuildWordScorer",
     "className": "org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364271
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474047364289,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474047364291,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474047364293,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests)",
  "startTimestamp": 1474047364295,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.StupidBackoffModelTests",
  "startTimestamp": 1474047364271,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsTests",
   "displayName": "org.elasticsearch.common.settings.SettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsTests",
   "children": [
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoresPrompt",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testUnFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testGetAsSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testThatArraysAreOverriddenCorrectly",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testFallbackToFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testPrefixNormalization",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderByEnvironmentVariables",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemProperty",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testNames(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testNames",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364309
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364324,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364326,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364328,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364330,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364336,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364338,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemVariablesHaveNoEffect(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364340,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderByEnvironmentVariables(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364343,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364345,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNames(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1474047364352,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsTests",
  "startTimestamp": 1474047364309,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "children": [
    {
     "id": "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
     "displayName": "testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
     "methodName": "testExceptionForCopyToInMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364361
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:04,390][WARN ][mapping [type]           ] Found a copy_to in field [c] which is within a multi field. This feature has been removed and the copy_to will be removed from the mapping.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
  "startTimestamp": 1474047364374,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
  "startTimestamp": 1474047364361,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
   "displayName": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
   "children": [
    {
     "id": "ID#testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "displayName": "testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "methodName": "testIsTimeout",
     "className": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "displayName": "testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
     "methodName": "testClusterHealth",
     "className": "org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364399
 }
]

[
 "TEST_STARTED",
 "ID#testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTimeout(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
  "startTimestamp": 1474047364414,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealth(org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests)",
  "startTimestamp": 1474047364415,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.health.ClusterHealthResponsesTests",
  "startTimestamp": 1474047364399,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.SecurityTests",
   "displayName": "org.elasticsearch.bootstrap.SecurityTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.SecurityTests",
   "children": [
    {
     "id": "ID#testEnsureRegularFile(org.elasticsearch.bootstrap.SecurityTests)",
     "displayName": "testEnsureRegularFile(org.elasticsearch.bootstrap.SecurityTests)",
     "methodName": "testEnsureRegularFile",
     "className": "org.elasticsearch.bootstrap.SecurityTests",
     "children": []
    },
    {
     "id": "ID#testEnsureNotExists(org.elasticsearch.bootstrap.SecurityTests)",
     "displayName": "testEnsureNotExists(org.elasticsearch.bootstrap.SecurityTests)",
     "methodName": "testEnsureNotExists",
     "className": "org.elasticsearch.bootstrap.SecurityTests",
     "children": []
    },
    {
     "id": "ID#testProcessExecution(org.elasticsearch.bootstrap.SecurityTests)",
     "displayName": "testProcessExecution(org.elasticsearch.bootstrap.SecurityTests)",
     "methodName": "testProcessExecution",
     "className": "org.elasticsearch.bootstrap.SecurityTests",
     "children": []
    },
    {
     "id": "ID#testEnsureExists(org.elasticsearch.bootstrap.SecurityTests)",
     "displayName": "testEnsureExists(org.elasticsearch.bootstrap.SecurityTests)",
     "methodName": "testEnsureExists",
     "className": "org.elasticsearch.bootstrap.SecurityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364423
 }
]

[
 "TEST_STARTED",
 "ID#testEnsureRegularFile(org.elasticsearch.bootstrap.SecurityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnsureRegularFile(org.elasticsearch.bootstrap.SecurityTests)",
  "startTimestamp": 1474047364436,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnsureNotExists(org.elasticsearch.bootstrap.SecurityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnsureNotExists(org.elasticsearch.bootstrap.SecurityTests)",
  "startTimestamp": 1474047364440,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testProcessExecution(org.elasticsearch.bootstrap.SecurityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessExecution(org.elasticsearch.bootstrap.SecurityTests)",
  "startTimestamp": 1474047364445,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEnsureExists(org.elasticsearch.bootstrap.SecurityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnsureExists(org.elasticsearch.bootstrap.SecurityTests)",
  "startTimestamp": 1474047364448,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.SecurityTests",
  "startTimestamp": 1474047364423,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.PolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testCoerceShell",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testCoerceHole",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.PolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364465
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474047364479,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474047364506,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceShell(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474047364523,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceHole(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474047364526,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.PolygonBuilderTests)",
  "startTimestamp": 1474047364528,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.PolygonBuilderTests",
  "startTimestamp": 1474047364465,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364547
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1474047364568,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1474047364570,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1474047364573,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1474047364575,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1474047364577,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1474047364579,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
  "startTimestamp": 1474047364547,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testDoNotAllocateFromPrimary",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRollingRestart",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRestoreDoesNotAllocateSnapshotOnOlderNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "displayName": "testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
     "methodName": "testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047364592
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,612][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,628][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,645][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_4][3], [test_4][1], [test_12][1], [test_10][1], [test_7][1], [test_5][4], [test_18][1], [test_12][2], [test_7][2], [test_5][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,649][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,653][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,654][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,657][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][2], [test_2][1], [test_4][2], [test_7][2], [test_5][0], [test_3][2], [test_10][2], [test_13][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,657][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,688][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,694][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_5][1], [test_17][0], [test_13][0], [test_12][0], [test_4][3], [test_3][1], [test_5][2], [test_6][1], [test_10][0], [test_5][4]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,697][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_9][0], [test_16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,705][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,713][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,718][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,718][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,722][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_0][0], [test_7][1], [test_15][0], [test_4][3], [test_4][0], [test_13][2], [test_15][0], [test_7][2], [test_4][0], [test_13][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,724][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_5][4], [test_17][0], [test_5][4]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,730][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,734][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_10][1], [test_5][2], [test_4][2], [test_9][0], [test_11][0], [test_10][0], [test_1][1], [test_18][1], [test_5][3], [test_12][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,740][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_18][0], [test_7][0], [test_12][3], [test_9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,741][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,754][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,777][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,784][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,784][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,797][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_8][1], [test_5][4], [test_2][0], [test_4][2], [test_7][1], [test_12][2], [test_18][1], [test_13][3], [test_4][0], [test_7][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,798][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,804][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,805][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,810][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_11][2], [test_5][0], [test_16][1], [test_10][0], [test_4][0], [test_15][0], [test_5][4], [test_3][2], [test_8][1], [test_10][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,814][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_12][1], [test_10][1], [test_12][3], [test_7][2], [test_18][0], [test_6][2], [test_10][1], [test_4][2], [test_17][0], [test_18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,823][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,830][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,837][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,852][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_0][1], [test_12][3], [test_12][1], [test_10][2], [test_12][2], [test_1][1], [test_10][0], [test_12][0], [test_10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,857][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,861][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_14][0], [test_9][0], [test_5][1], [test_5][4], [test_18][1], [test_6][2], [test_4][2], [test_2][0], [test_7][0], [test_1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,864][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,871][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,875][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_12][0], [test_5][0], [test_15][0], [test_6][1], [test_5][2], [test_7][0], [test_1][3], [test_10][2], [test_4][0], [test_18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,885][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,887][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,895][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,903][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,921][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,926][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,926][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,930][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_10][1], [test_3][0], [test_0][1], [test_6][1], [test_10][2], [test_17][1], [test_5][2], [test_4][0], [test_12][2], [test_4][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,933][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_6][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,938][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,939][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,942][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_5][3], [test_17][1], [test_0][2], [test_5][4], [test_10][3], [test_8][3], [test_4][1], [test_12][2], [test_4][3], [test_6][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,949][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,950][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,990][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_0][2], [test_0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:04,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,000][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,034][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_15][0], [test_14][0], [test_10][0], [test_10][1], [test_10][2], [test_10][3], [test_10][0], [test_10][1], [test_10][2], [test_10][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,053][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,057][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,068][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,082][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,086][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][3], [test_12][2], [test_8][3], [test_1][4], [test_12][1], [test_6][2], [test_10][0], [test_3][3], [test_18][1], [test_7][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,089][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_6][2], [test_7][2], [test_12][1], [test_5][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,089][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,094][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,099][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,105][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,106][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,112][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_0][2], [test_12][0], [test_6][0], [test_17][1], [test_1][2], [test_16][1], [test_5][3], [test_12][3], [test_6][1], [test_18][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,126][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_1][0], [test_0][1], [test_4][3], [test_5][1], [test_8][1], [test_18][1], [test_5][0], [test_17][0], [test_11][2], [test_10][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,130][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,135][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,135][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,155][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_10][2], [test_0][0], [test_10][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,156][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,165][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_7][2], [test_10][1], [test_4][1], [test_5][1], [test_12][3], [test_13][0], [test_7][1], [test_10][0], [test_6][1], [test_4][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,174][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,177][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,186][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,192][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,200][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,204][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,204][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,207][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_10][1], [test_5][3], [test_2][0], [test_7][1], [test_4][3], [test_12][3], [test_8][1], [test_3][3], [test_12][0], [test_13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,208][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,211][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,218][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,221][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,222][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,225][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_17][0], [test_18][1], [test_14][0], [test_18][0], [test_13][0], [test_18][0], [test_3][3], [test_10][1], [test_12][0], [test_16][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,227][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_17][0], [test_6][2], [test_14][0], [test_14][0], [test_12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,228][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,232][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,233][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,242][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_0][2], [test_1][1], [test_12][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,243][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,248][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,248][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,251][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_11][0], [test_8][1], [test_13][1], [test_3][2], [test_4][1], [test_6][0], [test_12][3], [test_12][1], [test_17][1], [test_7][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,251][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,266][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_10][3], [test_10][2], [test_5][4], [test_5][2], [test_4][2], [test_8][3], [test_12][3], [test_12][0], [test_10][1], [test_9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,273][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,277][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,284][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,297][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][3], [test_0][2], [test_0][1], [test_0][0], [test_12][4], [test_10][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,298][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,303][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,331][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,348][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_10][2], [test_12][1], [test_10][1], [test_12][3], [test_4][0], [test_10][0], [test_4][2], [test_4][3], [test_5][3], [test_5][4]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,367][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,368][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,379][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_10][2], [test_0][0], [test_8][0], [test_12][2], [test_0][1], [test_10][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,380][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,385][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,392][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_18][0], [test_4][1], [test_6][1], [test_13][1], [test_12][2], [test_0][0], [test_1][1], [test_4][3], [test_10][0], [test_5][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,399][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,402][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,409][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_0][2], [test_4][1], [test_10][2], [test_7][1], [test_18][1], [test_5][4], [test_16][0], [test_10][3], [test_7][0], [test_6][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,410][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,416][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,421][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_1][3], [test_5][1], [test_4][3], [test_10][0], [test_7][0], [test_12][3], [test_18][1], [test_5][2], [test_2][0], [test_8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,430][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,447][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,451][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,454][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][3], [test_16][1], [test_12][2], [test_4][0], [test_9][0], [test_14][0], [test_10][0], [test_3][1], [test_12][0], [test_7][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,455][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474047364606,
  "executionTime": 849
 }
]

[
 "TEST_STARTED",
 "ID#testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,461][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,461][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,463][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][2], [test][1], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoNotAllocateFromPrimary(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474047365455,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,470][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,471][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,472][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][1], [test][4], [test][3], [test][2], [test][0], [test][3], [test][1], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,472][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,473][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,473][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,474][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][2], [test][1], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,474][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,475][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,475][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,475][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,476][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][2], [test][1], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:36:05,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] stabilized success [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRollingRestart(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474047365464,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAllocateSnapshotOnOlderNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474047365477,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceDoesNotAllocatePrimaryAndReplicasOnDifferentVersionNodes(org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests)",
  "startTimestamp": 1474047365481,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.NodeVersionAllocationDeciderTests",
  "startTimestamp": 1474047364592,
  "executionTime": 897
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FilterFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
   "children": [
    {
     "id": "ID#testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "displayName": "testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "methodName": "testFilterByFrequency",
     "className": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.FilterFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047365494
 }
]

[
 "TEST_STARTED",
 "ID#testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,516][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,538][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,539][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,542][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,544][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,544][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,644][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,644][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,644][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,645][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{SZRW7eaWQhWWJfOf7tzDlQ}{to0gHTSdSkOm78UemN7BGg}{local}{local[27]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,646][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,657][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,673][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,722][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,767][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [FilterFieldDataTests#testFilterByFrequency]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterByFrequency(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
  "startTimestamp": 1474047365509,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,818][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,874][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [FilterFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
  "message": "No need to test empty usage here",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: No need to test empty usage here\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:E5204D396D907451]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.fielddata.FilterFieldDataTests.testEmpty(FilterFieldDataTests.java:122)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: No need to test empty usage here",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.FilterFieldDataTests)",
  "startTimestamp": 1474047365811,
  "executionTime": 91
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,902][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,902][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,903][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:36:05,904][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FilterFieldDataTests",
  "startTimestamp": 1474047365494,
  "executionTime": 419
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingServiceTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingServiceTests",
   "children": [
    {
     "id": "ID#testReroute(org.elasticsearch.cluster.routing.RoutingServiceTests)",
     "displayName": "testReroute(org.elasticsearch.cluster.routing.RoutingServiceTests)",
     "methodName": "testReroute",
     "className": "org.elasticsearch.cluster.routing.RoutingServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047365917
 }
]

[
 "TEST_STARTED",
 "ID#testReroute(org.elasticsearch.cluster.routing.RoutingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:36:05,933][INFO ][org.elasticsearch.cluster.routing] [node_s_0] --> performing fake reroute [test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReroute(org.elasticsearch.cluster.routing.RoutingServiceTests)",
  "startTimestamp": 1474047365931,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingServiceTests",
  "startTimestamp": 1474047365917,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestUtilsTests",
   "displayName": "org.elasticsearch.rest.RestUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestUtilsTests",
   "children": [
    {
     "id": "ID#testDecodeQueryString(org.elasticsearch.rest.RestUtilsTests)",
     "displayName": "testDecodeQueryString(org.elasticsearch.rest.RestUtilsTests)",
     "methodName": "testDecodeQueryString",
     "className": "org.elasticsearch.rest.RestUtilsTests",
     "children": []
    },
    {
     "id": "ID#testCrazyURL(org.elasticsearch.rest.RestUtilsTests)",
     "displayName": "testCrazyURL(org.elasticsearch.rest.RestUtilsTests)",
     "methodName": "testCrazyURL",
     "className": "org.elasticsearch.rest.RestUtilsTests",
     "children": []
    },
    {
     "id": "ID#testDecodeQueryStringEdgeCases(org.elasticsearch.rest.RestUtilsTests)",
     "displayName": "testDecodeQueryStringEdgeCases(org.elasticsearch.rest.RestUtilsTests)",
     "methodName": "testDecodeQueryStringEdgeCases",
     "className": "org.elasticsearch.rest.RestUtilsTests",
     "children": []
    },
    {
     "id": "ID#testCorsSettingIsARegex(org.elasticsearch.rest.RestUtilsTests)",
     "displayName": "testCorsSettingIsARegex(org.elasticsearch.rest.RestUtilsTests)",
     "methodName": "testCorsSettingIsARegex",
     "className": "org.elasticsearch.rest.RestUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047365941
 }
]

[
 "TEST_STARTED",
 "ID#testDecodeQueryString(org.elasticsearch.rest.RestUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecodeQueryString(org.elasticsearch.rest.RestUtilsTests)",
  "startTimestamp": 1474047365956,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCrazyURL(org.elasticsearch.rest.RestUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrazyURL(org.elasticsearch.rest.RestUtilsTests)",
  "startTimestamp": 1474047365960,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDecodeQueryStringEdgeCases(org.elasticsearch.rest.RestUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecodeQueryStringEdgeCases(org.elasticsearch.rest.RestUtilsTests)",
  "startTimestamp": 1474047365962,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCorsSettingIsARegex(org.elasticsearch.rest.RestUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorsSettingIsARegex(org.elasticsearch.rest.RestUtilsTests)",
  "startTimestamp": 1474047365964,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestUtilsTests",
  "startTimestamp": 1474047365941,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestMetadataTests",
   "displayName": "org.elasticsearch.ingest.IngestMetadataTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestMetadataTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)",
     "displayName": "testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.ingest.IngestMetadataTests",
     "children": []
    },
    {
     "id": "ID#testDiff(org.elasticsearch.ingest.IngestMetadataTests)",
     "displayName": "testDiff(org.elasticsearch.ingest.IngestMetadataTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.ingest.IngestMetadataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047365979
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.ingest.IngestMetadataTests)",
  "startTimestamp": 1474047365993,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.ingest.IngestMetadataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.ingest.IngestMetadataTests)",
  "startTimestamp": 1474047365997,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestMetadataTests",
  "startTimestamp": 1474047365979,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.MultiValueModeTests",
   "displayName": "org.elasticsearch.search.MultiValueModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.MultiValueModeTests",
   "children": [
    {
     "id": "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testUnsortedSingleValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedStrings",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedOrds",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedOrds",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedLongs",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedStrings",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testFromString(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testUnsortedMultiValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedLongs",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047366010
 }
]

[
 "TEST_STARTED",
 "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366028,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366031,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366034,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366037,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366039,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366042,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366045,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366047,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366050,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366052,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366054,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366056,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366058,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474047366060,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.MultiValueModeTests",
  "startTimestamp": 1474047366010,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.SearchRequestBuilderTests",
   "displayName": "org.elasticsearch.action.search.SearchRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testSearchSourceBuilderToString",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testQueryBuilderQueryToString",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testThatToStringDoesntWipeRequestSource",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "displayName": "testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
     "methodName": "testEmptySourceToString",
     "className": "org.elasticsearch.action.search.SearchRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047366072
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,090][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,090][INFO ][org.elasticsearch.plugins] [_client_] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,109][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchSourceBuilderToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474047366109,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryBuilderQueryToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474047366113,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToStringDoesntWipeRequestSource(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474047366115,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySourceToString(org.elasticsearch.action.search.SearchRequestBuilderTests)",
  "startTimestamp": 1474047366118,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.SearchRequestBuilderTests",
  "startTimestamp": 1474047366072,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
   "children": [
    {
     "id": "ID#testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testLimit",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testFingerprint",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "displayName": "testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
     "methodName": "testAsciifolding",
     "className": "org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047366127
 }
]

[
 "TEST_STARTED",
 "ID#testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimit(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474047366141,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFingerprint(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474047366148,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474047366151,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsciifolding(org.elasticsearch.index.analysis.FingerprintAnalyzerTests)",
  "startTimestamp": 1474047366154,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.FingerprintAnalyzerTests",
  "startTimestamp": 1474047366127,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BooleanFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
   "children": [
    {
     "id": "ID#testBwCompatDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "displayName": "testBwCompatDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "methodName": "testBwCompatDocValues",
     "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "displayName": "testSerialization(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiFields(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "displayName": "testMultiFields(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
     "methodName": "testMultiFields",
     "className": "org.elasticsearch.index.mapper.BooleanFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047366163
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,184][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,205][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,205][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,209][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7496], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,212][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,212][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,312][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,313][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,313][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,314][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{vkFS79CvQq-7Bgj33C5MUg}{pYwyci5qTXyWGRZjb0Wj_w}{local}{local[29]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,315][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,325][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,341][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,381][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,417][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,460][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test_old] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,472][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test_old] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,473][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [BooleanFieldMapperTests#testBwCompatDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
  "startTimestamp": 1474047366176,
  "executionTime": 337
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.BooleanFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,518][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,553][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,566][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,602][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,612][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [BooleanFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
  "startTimestamp": 1474047366513,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.BooleanFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,656][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,695][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,711][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BooleanFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
  "startTimestamp": 1474047366651,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.mapper.BooleanFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,741][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,790][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BooleanFieldMapperTests#testSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
  "startTimestamp": 1474047366736,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,818][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,855][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,866][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BooleanFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
  "startTimestamp": 1474047366812,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFields(org.elasticsearch.index.mapper.BooleanFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,892][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,946][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BooleanFieldMapperTests#testMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFields(org.elasticsearch.index.mapper.BooleanFieldMapperTests)",
  "startTimestamp": 1474047366887,
  "executionTime": 83
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,970][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,970][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,971][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:36:06,972][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BooleanFieldMapperTests",
  "startTimestamp": 1474047366163,
  "executionTime": 814
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.SamplerTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.SamplerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.SamplerTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.SamplerTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.SamplerTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.SamplerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047366982
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:36:07,004][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kv9zFDJGTxKoPlXyYWKQLQ}{local}{local[513]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
  "startTimestamp": 1474047367013,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
  "startTimestamp": 1474047367015,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SamplerTests)",
  "startTimestamp": 1474047367017,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.SamplerTests",
  "startTimestamp": 1474047366982,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldTypeLookupTests",
   "displayName": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
   "children": [
    {
     "id": "ID#testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testCheckCompatibilityMismatchedTypes",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testSimpleMatchFullNames",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddExistingFullName",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testIteratorImmutable",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddExistingField",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddNewField",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testCheckCompatibilityConflict",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testDefaultMapping",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddExistingIndexName",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047367030
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367042,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367045,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367046,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367048,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367050,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367052,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367054,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367055,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367057,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474047367058,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldTypeLookupTests",
  "startTimestamp": 1474047367030,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoPointParsingTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
   "children": [
    {
     "id": "ID#testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidPointLonHashMix",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidPointEmbeddedObject",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidPointLatHashMix",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testEqualsHashCodeContract",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testGeoPointParsing",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidField",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testGeoPointReset",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047367066
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367082,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367084,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367086,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367088,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367090,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367092,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474047367094,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoPointParsingTests",
  "startTimestamp": 1474047367066,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkShardRequestTests",
   "displayName": "org.elasticsearch.action.bulk.BulkShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkShardRequestTests",
   "children": [
    {
     "id": "ID#testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)",
     "displayName": "testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.action.bulk.BulkShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047367102
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.action.bulk.BulkShardRequestTests)",
  "startTimestamp": 1474047367114,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkShardRequestTests",
  "startTimestamp": 1474047367102,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.StoreTests",
   "displayName": "org.elasticsearch.index.store.StoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.StoreTests",
   "children": [
    {
     "id": "ID#testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testDeserializeCorruptionException",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testUserDataRead(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testUserDataRead(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testUserDataRead",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testMarkCorruptedOnTruncatedSegmentsFile",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testStoreStats(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testStoreStats(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testStoreStats",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexOutput",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testNewChecksums(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testNewChecksums(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testNewChecksums",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testStreamStoreFilesMetaData",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCanReadOldCorruptionMarker",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexOutputOnEmptyFile",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testChecksumCorrupted",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testMetadataSnapshotStreaming",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCleanupFromSnapshot",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testOnCloseCallback(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testOnCloseCallback(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testOnCloseCallback",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexOutputWithBogusInput",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCanOpenIndex(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCanOpenIndex(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCanOpenIndex",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCheckIntegrity(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCheckIntegrity(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCheckIntegrity",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryDiff(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testRecoveryDiff(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testRecoveryDiff",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexInput",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testRefCount(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testRefCount(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047367127
 }
]

[
 "TEST_STARTED",
 "ID#testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367146,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUserDataRead(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUserDataRead(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367150,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367156,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testStoreStats(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreStats(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367175,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367181,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNewChecksums(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewChecksums(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367189,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367221,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367226,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367229,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367239,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367243,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367245,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testOnCloseCallback(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnCloseCallback(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367287,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367291,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCanOpenIndex(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanOpenIndex(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367293,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testCheckIntegrity(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckIntegrity(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367365,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryDiff(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryDiff(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367368,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367465,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474047367471,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.StoreTests",
  "startTimestamp": 1474047367127,
  "executionTime": 355
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.DistanceUnitTests",
   "displayName": "org.elasticsearch.common.unit.DistanceUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.DistanceUnitTests",
   "children": [
    {
     "id": "ID#testDistanceUnitParsing(org.elasticsearch.common.unit.DistanceUnitTests)",
     "displayName": "testDistanceUnitParsing(org.elasticsearch.common.unit.DistanceUnitTests)",
     "methodName": "testDistanceUnitParsing",
     "className": "org.elasticsearch.common.unit.DistanceUnitTests",
     "children": []
    },
    {
     "id": "ID#testDistanceUnitNames(org.elasticsearch.common.unit.DistanceUnitTests)",
     "displayName": "testDistanceUnitNames(org.elasticsearch.common.unit.DistanceUnitTests)",
     "methodName": "testDistanceUnitNames",
     "className": "org.elasticsearch.common.unit.DistanceUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDistanceUnit(org.elasticsearch.common.unit.DistanceUnitTests)",
     "displayName": "testSimpleDistanceUnit(org.elasticsearch.common.unit.DistanceUnitTests)",
     "methodName": "testSimpleDistanceUnit",
     "className": "org.elasticsearch.common.unit.DistanceUnitTests",
     "children": []
    },
    {
     "id": "ID#testReadWrite(org.elasticsearch.common.unit.DistanceUnitTests)",
     "displayName": "testReadWrite(org.elasticsearch.common.unit.DistanceUnitTests)",
     "methodName": "testReadWrite",
     "className": "org.elasticsearch.common.unit.DistanceUnitTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.common.unit.DistanceUnitTests)",
     "displayName": "testFromString(org.elasticsearch.common.unit.DistanceUnitTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.common.unit.DistanceUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047367487
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceUnitParsing(org.elasticsearch.common.unit.DistanceUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceUnitParsing(org.elasticsearch.common.unit.DistanceUnitTests)",
  "startTimestamp": 1474047367500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceUnitNames(org.elasticsearch.common.unit.DistanceUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceUnitNames(org.elasticsearch.common.unit.DistanceUnitTests)",
  "startTimestamp": 1474047367502,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDistanceUnit(org.elasticsearch.common.unit.DistanceUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDistanceUnit(org.elasticsearch.common.unit.DistanceUnitTests)",
  "startTimestamp": 1474047367504,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadWrite(org.elasticsearch.common.unit.DistanceUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWrite(org.elasticsearch.common.unit.DistanceUnitTests)",
  "startTimestamp": 1474047367506,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.common.unit.DistanceUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.common.unit.DistanceUnitTests)",
  "startTimestamp": 1474047367507,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.DistanceUnitTests",
  "startTimestamp": 1474047367487,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

