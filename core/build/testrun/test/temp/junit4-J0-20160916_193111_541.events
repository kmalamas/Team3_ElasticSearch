[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "1412@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0",
   "junit4.childvm.id": "0",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "1412@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160916_193111_541.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160916_193111_541.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.haltonfailure": "false",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "229C635BFFC33CB2",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "children": [
    {
     "id": "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testOnAfterDoesNotHappenWhenStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testDoRunOnlyRunsWhenNotStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testOnAfterOnlyWhenNotStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testDoRunDoesNotRunWhenStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047072966
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474047078120,
  "executionTime": 2292
 }
]

[
 "TEST_STARTED",
 "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474047080412,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474047080456,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474047080463,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
  "startTimestamp": 1474047072966,
  "executionTime": 7583
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ChannelsTests",
   "displayName": "org.elasticsearch.common.ChannelsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ChannelsTests",
   "children": [
    {
     "id": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithoutException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThoughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047080568
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474047080607,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474047080677,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474047080714,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474047080741,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474047080816,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474047080891,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ChannelsTests",
  "startTimestamp": 1474047080568,
  "executionTime": 397
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "displayName": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "children": [
    {
     "id": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "displayName": "testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "methodName": "testCoreCacheKey",
     "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047080983
 }
]

[
 "TEST_STARTED",
 "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
  "startTimestamp": 1474047081131,
  "executionTime": 1950
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
  "startTimestamp": 1474047080983,
  "executionTime": 2102
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
   "displayName": "org.elasticsearch.common.compress.DeflateCompressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.compress.DeflateCompressTests",
   "children": [
    {
     "id": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandomThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsSThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsS",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsI",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsIThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsLThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocsThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testMixed",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsL",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocs",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047083109
 }
]

[
 "TEST_STARTED",
 "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047083162,
  "executionTime": 712
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047083875,
  "executionTime": 331
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047084206,
  "executionTime": 338
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047084545,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047084775,
  "executionTime": 435
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047085210,
  "executionTime": 244
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047085461,
  "executionTime": 504
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047085965,
  "executionTime": 1781
 }
]

[
 "TEST_STARTED",
 "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047087746,
  "executionTime": 464
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047088211,
  "executionTime": 284
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474047088496,
  "executionTime": 1636
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
  "startTimestamp": 1474047083109,
  "executionTime": 7047
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.os.OsProbeTests",
   "displayName": "org.elasticsearch.monitor.os.OsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.os.OsProbeTests",
   "children": [
    {
     "id": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsStats",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    },
    {
     "id": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsInfo",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047090165
 }
]

[
 "TEST_STARTED",
 "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1474047090221,
  "executionTime": 560
 }
]

[
 "TEST_STARTED",
 "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1474047090782,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.os.OsProbeTests",
  "startTimestamp": 1474047090165,
  "executionTime": 631
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "displayName": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "children": [
    {
     "id": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testDefaultMaxConcurrentSearches",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    },
    {
     "id": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testBatchExecute",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047090818
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1474047090899,
  "executionTime": 824
 }
]

[
 "TEST_STARTED",
 "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1474047091724,
  "executionTime": 2575
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
  "startTimestamp": 1474047090818,
  "executionTime": 3487
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "children": [
    {
     "id": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultTimestampStream",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingShouldNotFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSizeTimestampIndexParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatDisablingDuringMergeIsWorking",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingDefaultToEpochValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampDefaultAndIgnore",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingNowDefaultValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testPathMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultApplied",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testInitMappers",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testParsingNotDefaultTwiceDoesNotChangeMapping",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatEpochCanBeIgnoredWithCustomFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047094374
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:34,902][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:35,213][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:35,214][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:35,223][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:35,244][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:35,245][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:45,765][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:45,766][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:45,792][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:46,038][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ARcI40cVRy6lUqn-Rwm61A}{PtB-uko5S9yy8aR5nEJqbw}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:46,061][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:46,199][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:46,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:47,382][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:47,676][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047094429,
  "executionTime": 13406
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:47,849][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:47,944][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,355][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047107836,
  "executionTime": 651
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,524][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultTimestampStream]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047108490,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,542][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,614][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,634][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingShouldNotFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047108530,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,752][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,780][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSizeTimestampIndexParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047108669,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,830][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,924][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,943][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047108818,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:48,996][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,050][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,077][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatDisablingDuringMergeIsWorking]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047108987,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,118][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,184][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,260][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingDefaultToEpochValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047109107,
  "executionTime": 242
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,370][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,494][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,514][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampDefaultAndIgnore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047109349,
  "executionTime": 298
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,656][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,744][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingNowDefaultValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047109648,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,785][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,875][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047109776,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,924][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:49,997][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,014][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testPathMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047109905,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,055][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,128][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110042,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,228][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,264][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110156,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,300][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,347][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,365][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,415][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,438][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/HrKwL1uWSMm_JogQBAEViQ] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,440][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/P0Lh9AWgT2q1bGkpIGQDxA] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,473][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/P0Lh9AWgT2q1bGkpIGQDxA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,493][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/HrKwL1uWSMm_JogQBAEViQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,517][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [TimestampFieldMapperTests#testDefaultApplied]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110292,
  "executionTime": 277
 }
]

[
 "TEST_STARTED",
 "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [new-index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,644][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[new-index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,668][INFO ][org.elasticsearch.index.mapper] [node_s_0] [new-index] [TimestampFieldMapperTests#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110569,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,704][INFO ][org.elasticsearch.index.mapper] [node_s_0] [new-index] [TimestampFieldMapperTests#testInitMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110701,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,715][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,774][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,828][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,878][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,918][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110706,
  "executionTime": 222
 }
]

[
 "TEST_STARTED",
 "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:50,947][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,086][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,173][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testParsingNotDefaultTwiceDoesNotChangeMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047110928,
  "executionTime": 292
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,228][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,375][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,393][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatEpochCanBeIgnoredWithCustomFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474047111220,
  "executionTime": 237
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,458][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,462][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:31:51,475][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
  "startTimestamp": 1474047094374,
  "executionTime": 17113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.VersionTests",
   "displayName": "org.elasticsearch.VersionTests",
   "methodName": null,
   "className": "org.elasticsearch.VersionTests",
   "children": [
    {
     "id": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
     "displayName": "testMinCompatVersion(org.elasticsearch.VersionTests)",
     "methodName": "testMinCompatVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "displayName": "testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "methodName": "testIndexCreatedVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "displayName": "testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "methodName": "testVersionConstantPresent",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "displayName": "testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "methodName": "testLuceneVersionIsSameOnMinorRelease",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseVersion(org.elasticsearch.VersionTests)",
     "displayName": "testParseVersion(org.elasticsearch.VersionTests)",
     "methodName": "testParseVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "displayName": "testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "methodName": "testAllVersionsMatchId",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseLenient(org.elasticsearch.VersionTests)",
     "displayName": "testParseLenient(org.elasticsearch.VersionTests)",
     "methodName": "testParseLenient",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooLongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "displayName": "testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "methodName": "testCURRENTIsLatest",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIsBeta(org.elasticsearch.VersionTests)",
     "displayName": "testIsBeta(org.elasticsearch.VersionTests)",
     "methodName": "testIsBeta",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testWrongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.VersionTests)",
     "displayName": "testToString(org.elasticsearch.VersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "displayName": "testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "methodName": "testVersionNoPresentInSettings",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooShortVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
     "displayName": "testVersionComparison(org.elasticsearch.VersionTests)",
     "methodName": "testVersionComparison",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
     "displayName": "testIsAlpha(org.elasticsearch.VersionTests)",
     "methodName": "testIsAlpha",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047111509
 }
]

[
 "TEST_STARTED",
 "ID#testMinCompatVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111560,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111564,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111567,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111572,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111578,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,599][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,601][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,601][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-rc1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,601][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,602][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.4.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,603][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,604][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,604][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,604][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,604][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:51,604][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha6%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111597,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParseLenient(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseLenient(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111605,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111615,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111618,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsBeta(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBeta(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111623,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111628,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111630,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111644,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111652,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionComparison(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111656,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsAlpha(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474047111659,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.VersionTests",
  "startTimestamp": 1474047111509,
  "executionTime": 156
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "children": [
    {
     "id": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testPersistedSettings",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testNoRebalanceOnPrimaryOverload",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testReplicaBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testIndexBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047111687
 }
]

[
 "TEST_STARTED",
 "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,754][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.balance.threshold] from [1.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,772][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.balance.threshold] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474047111747,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,842][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] use the new allocator and check if it moves shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,847][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][4], [test][1], [test][2], [test][3], [test][2], [test][4], [test][0], [test][3], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,847][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,847][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474047111773,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,868][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:51,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,035][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][1], [test8][0], [test8][1], [test7][1], [test7][0], [test9][1], [test8][0], [test7][1], [test6][1], [test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,054][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,060][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,097][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test4][1], [test11][0], [test3][0], [test11][1], [test9][1], [test3][1], [test9][0], [test9][1], [test7][0], [test7][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,118][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][1], [test3][0], [test4][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474047111848,
  "executionTime": 271
 }
]

[
 "TEST_STARTED",
 "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,150][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,174][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,228][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test0][0], [test1][1], [test0][1], [test6][0], [test7][0], [test6][1], [test7][1], [test3][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,243][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,258][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,258][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,275][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test5][0], [test4][0], [test8][0], [test6][0], [test9][0], [test7][0], [test8][1], [test9][1], [test5][1], [test4][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,276][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,286][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,290][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:52,370][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test0][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474047112119,
  "executionTime": 252
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
  "startTimestamp": 1474047111687,
  "executionTime": 687
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryParseContextTests",
   "displayName": "org.elasticsearch.index.query.QueryParseContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryParseContextTests",
   "children": [
    {
     "id": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderEmptyBody",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderUnknownParameter",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderExceptions",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderEmptyObject",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047112383
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474047112434,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474047112531,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:52,537][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474047112535,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474047112540,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:52,545][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474047112542,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474047112546,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryParseContextTests",
  "startTimestamp": 1474047112383,
  "executionTime": 909
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "children": [
    {
     "id": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByIdOrName",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByAttribute",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodesIds",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testDeltas",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047113301
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474047113325,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474047113329,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474047113336,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:53,342][INFO ][org.elasticsearch.cluster.node] nodes A: nodes: %0A   {name_27}{node_27}{eKX6UkK-SeOAGH-DgreBuw}{local}{local[84]}{custom=match}%0A   {name_25}{node_25}{ypSq81rbQZOSVyG39_MbGg}{local}{local[82]}{custom=Mzg}%0A   {name_26}{node_26}{8EqqDhzcQDuTCoU1OeUPZQ}{local}{local[83]}{custom=match}%0A   {name_28}{node_28}{WTwBzhg9RaCRF95sDwhSFA}{local}{local[85]}{custom=match}%0A   {name_24}{node_24}{ao5eebisQyuWt0VZc5n_AQ}{local}{local[81]}{custom=VQi}, local%0A   {name_29}{node_29}{xCpt5bM_RK6okM3fuilBRg}{local}{local[86]}{custom=match}%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:53,357][INFO ][org.elasticsearch.cluster.node] nodes B: nodes: %0A   {name_27}{node_27}{r-K0Vl7YQ5WP0yDqLIGtrQ}{local}{local[84]}{new=new, custom=match}%0A   {name_30}{node_30}{7DWNAi3YQNiTsRuCM-rz-w}{local}{local[87]}{custom=rix}%0A   {name_29}{node_29}{SO07GuueRFmGDZa0jBLoxg}{local}{local[86]}{new=new, custom=match}%0A   {name_31}{node_31}{fyuQqSU8QDq8vF3Csqk_5g}{local}{local[88]}{custom=GLF}%0A   {name_32}{node_32}{4D6be7c-T8mc3SlR2O2r0A}{local}{local[89]}{custom=rhsj}, local%0A   {name_26}{node_26}{8EqqDhzcQDuTCoU1OeUPZQ}{local}{local[83]}{custom=match}%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474047113339,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
  "startTimestamp": 1474047113301,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "displayName": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "children": [
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOneRequestIsSentToEachNodeHoldingAShard",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testResultAggregation",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOperationExecution",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestsAreNotSentToFailedMaster",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047113397
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,541][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kxtOlYyPRPyfhYlXugmQLg}{local}{local[90]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,554][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{tIv6lj-4TXu8RbheBaqKFA}{local}{local[94]}, previous {node}{kxtOlYyPRPyfhYlXugmQLg}{local}{local[90]}}, removed {{node}{kxtOlYyPRPyfhYlXugmQLg}{local}{local[90]},}, added {{node_1}{Q-wzASQzS_2gvVdOKrOLrA}{local}{local[92]},{node_2}{RrxLNLPxSrmEOjd_C5itoA}{local}{local[93]},{node_3}{tIv6lj-4TXu8RbheBaqKFA}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474047113470,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,630][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{P8hmB_8mROifJvYSVIpJ8g}{local}{local[97]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,632][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{FZRO6BuyRz-3-lWECv4l5w}{local}{local[100]}, previous {node}{P8hmB_8mROifJvYSVIpJ8g}{local}{local[97]}}, removed {{node}{P8hmB_8mROifJvYSVIpJ8g}{local}{local[97]},}, added {{node_1}{tsyZ_ocmSCK2RnUpxWg-HQ}{local}{local[99]},{node_2}{FZRO6BuyRz-3-lWECv4l5w}{local}{local[100]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474047113588,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,673][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{r_q0_QL6SD2Qs2GXh1Y9kw}{local}{local[103]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,675][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{XE0pssR-TFGL7KybHnecJA}{local}{local[107]}, previous {node}{r_q0_QL6SD2Qs2GXh1Y9kw}{local}{local[103]}}, removed {{node}{r_q0_QL6SD2Qs2GXh1Y9kw}{local}{local[103]},}, added {{node_1}{_XfA486YSP-TvY23XOlaeQ}{local}{local[105]},{node_2}{lsTiT4kgRR6D6FuJ0gL4Mg}{local}{local[106]},{node_3}{XE0pssR-TFGL7KybHnecJA}{local}{local[107]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474047113635,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4gg1GPObQQGUdjLJhWLYHg}{local}{local[110]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,705][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{CcnTrVPySFC1m5VF6YYBow}{local}{local[114]}, previous {node}{4gg1GPObQQGUdjLJhWLYHg}{local}{local[110]}}, removed {{node}{4gg1GPObQQGUdjLJhWLYHg}{local}{local[110]},}, added {{node_1}{l62_nuV8RN2z4U-Vhbh1Zw}{local}{local[112]},{node_2}{NQWgCZI5TjaJBsIInS9P7A}{local}{local[113]},{node_3}{CcnTrVPySFC1m5VF6YYBow}{local}{local[114]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474047113688,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zNSsJFLfTXidB7NznI_GJw}{local}{local[117]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,767][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{O8rqsW33QdmfWitBGfjVlA}{local}{local[120]}, previous {node}{zNSsJFLfTXidB7NznI_GJw}{local}{local[117]}}, removed {{node}{zNSsJFLfTXidB7NznI_GJw}{local}{local[117]},}, added {{node_1}{hzu59P0BToymtJ-wI8GmuA}{local}{local[119]},{node_2}{O8rqsW33QdmfWitBGfjVlA}{local}{local[120]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474047113724,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,825][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vo7VQl5pSAuR5QWIdypVhQ}{local}{local[123]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,828][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_4}{vm-AArlXRUSd7Spz5aunUQ}{local}{local[128]}, previous {node}{vo7VQl5pSAuR5QWIdypVhQ}{local}{local[123]}}, removed {{node}{vo7VQl5pSAuR5QWIdypVhQ}{local}{local[123]},}, added {{node_4}{vm-AArlXRUSd7Spz5aunUQ}{local}{local[128]},{node_1}{fBeqgTVxSVSHkMF5SdVeVw}{local}{local[125]},{node_2}{GLcqtyhzQGa_TkRhmH1l9w}{local}{local[126]},{node_3}{yGYGtvXXQOisO7d2oK3DQQ}{local}{local[127]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:53,830][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_4}{vm-AArlXRUSd7Spz5aunUQ}{local}{local[128]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474047113817,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
  "startTimestamp": 1474047113397,
  "executionTime": 437
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoHashTests",
   "displayName": "org.elasticsearch.common.geo.GeoHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoHashTests",
   "children": [
    {
     "id": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testGeohashAsLongRoutines",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    },
    {
     "id": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testBboxFromHash",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047113841
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1474047113871,
  "executionTime": 713
 }
]

[
 "TEST_STARTED",
 "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1474047114584,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoHashTests",
  "startTimestamp": 1474047113841,
  "executionTime": 752
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "children": [
    {
     "id": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047114724
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474047114770,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474047114896,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474047114904,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474047114910,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
  "startTimestamp": 1474047114724,
  "executionTime": 215
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "displayName": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "children": [
    {
     "id": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "displayName": "testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "methodName": "testCloseDeleteCallback",
     "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047114947
 }
]

[
 "TEST_STARTED",
 "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,035][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,157][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,157][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,169][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,172][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,172][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,730][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,730][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,731][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,778][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{uIdwAkR3RS2JS4eelDD7KA}{I3YajR2cSlqRUp7AsL8i5A}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,779][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,795][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,824][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:55,951][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:56,124][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesLifecycleListenerSingleNodeTests#testCloseDeleteCallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
  "startTimestamp": 1474047115002,
  "executionTime": 1144
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:56,146][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:56,149][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:56,150][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:31:56,156][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
  "startTimestamp": 1474047114947,
  "executionTime": 1218
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentation",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testSimpleYamlSettings",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testMissingValue",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentationWithExplicitDocumentStart",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047116173
 }
]

[
 "TEST_STARTED",
 "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474047116293,
  "executionTime": 459
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474047116753,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474047116758,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474047116762,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474047116821,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
  "startTimestamp": 1474047116173,
  "executionTime": 662
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "displayName": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "children": [
    {
     "id": "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "displayName": "testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "methodName": "testReconnect",
     "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "displayName": "testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "methodName": "testConnectAndDisconnect",
     "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047116845
 }
]

[
 "TEST_STARTED",
 "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:31:57,001 TEST-NodeConnectionsServiceTests.testReconnect-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:31:57,012 TEST-NodeConnectionsServiceTests.testReconnect-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:31:57,017 TEST-NodeConnectionsServiceTests.testReconnect-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 19:31:57,040 TEST-NodeConnectionsServiceTests.testReconnect-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
  "startTimestamp": 1474047116956,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
  "startTimestamp": 1474047117076,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.NodeConnectionsServiceTests",
  "startTimestamp": 1474047116845,
  "executionTime": 238
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047117094
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474047117140,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474047117152,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474047117156,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474047117159,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474047117203,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
  "startTimestamp": 1474047117094,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "displayName": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "children": [
    {
     "id": "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testAllOrNothing",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    },
    {
     "id": "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testUpdateSetting",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    },
    {
     "id": "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testClusterBlock",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047117221
 }
]

[
 "TEST_STARTED",
 "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1474047117299,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1474047117323,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1474047117328,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
  "startTimestamp": 1474047117221,
  "executionTime": 123
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testIllegaArguments",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryParameterArrayException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldMissing",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessNotAllowedTypes",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessOnNonStringField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047117376
 }
]

[
 "TEST_STARTED",
 "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,463][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ft1AVa-iQnWncbJ6rSyTvg}{local}{local[222]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,502][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,503][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,598][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,598][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,598][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,709][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,710][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,710][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,716][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,716][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:31:57,717][WARN ][org.elasticsearch.deprecation.index.mapper]  [wfUNyDfda] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047117405,
  "executionTime": 366
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047117771,
  "executionTime": 223
 }
]

[
 "TEST_STARTED",
 "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047117994,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047117997,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118157,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118163,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118171,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118180,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118191,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118296,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118305,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118317,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118323,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118329,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118335,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118340,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118343,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474047118352,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
  "startTimestamp": 1474047117376,
  "executionTime": 987
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testGetIndexAnalyserWithoutAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testFillsAttributes",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testWithAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testUnknown",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testNoAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047118372
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474047118481,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474047118629,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474047118671,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474047118766,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474047118779,
  "executionTime": 88
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
  "startTimestamp": 1474047118372,
  "executionTime": 504
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047118883
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
  "startTimestamp": 1474047118910,
  "executionTime": 76
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
  "startTimestamp": 1474047118883,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestTableTests",
   "children": [
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderText",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderYaml",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersWithoutTimestamp",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testIgnoreContentType",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderJson",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderSmile",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderCbor",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047119039
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119089,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119129,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119172,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119178,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119181,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119191,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119237,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119240,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474047119243,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
  "startTimestamp": 1474047119039,
  "executionTime": 216
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "displayName": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "children": [
    {
     "id": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testNodeSelectorRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testRandomRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testAttributePreferenceRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator2",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testShardsAndPreferNodeRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testReplicaShardPreferenceIters",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator1",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testEmptyIterator",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047119341
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119457,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119563,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:59,591][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119568,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119595,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:59,699][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119598,
  "executionTime": 240
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:59,853][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119838,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119854,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474047119856,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
  "startTimestamp": 1474047119341,
  "executionTime": 519
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.BytesRefHashTests",
   "displayName": "org.elasticsearch.common.util.BytesRefHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.BytesRefHashTests",
   "children": [
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047119873
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:31:59,909][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:31:59,953][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:31:59,954][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:31:59,957][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:31:59,961][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:31:59,962][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:00,179][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:00,182][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:00,182][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:00,186][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{VAfEsvlMTNGNko2tu_OSvA}{h8_GmiNKSeWFyzYou2vSBw}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:00,187][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:00,211][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:01,363][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474047119897,
  "executionTime": 1478
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:01,622][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474047121375,
  "executionTime": 248
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:03,151][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474047121624,
  "executionTime": 1530
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:03,575][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testGet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474047123154,
  "executionTime": 423
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:04,263][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474047123577,
  "executionTime": 687
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:04,265][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:04,265][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:04,266][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:04,269][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.BytesRefHashTests",
  "startTimestamp": 1474047119873,
  "executionTime": 4406
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
   "displayName": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "children": [
    {
     "id": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "displayName": "testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "methodName": "testCreateSearchFilter",
     "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047124285
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
  "startTimestamp": 1474047124344,
  "executionTime": 87
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
  "startTimestamp": 1474047124285,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "displayName": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "children": [
    {
     "id": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCorrectThreadPoolTypePermittedInSettings",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testIndexingThreadPoolsMaxSize",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCustomThreadPool",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testShutdownNowInterrupts",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testFixedExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testScalingExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047124462
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474047124518,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474047124538,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474047124543,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474047124622,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474047124694,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474047124735,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
  "startTimestamp": 1474047124462,
  "executionTime": 297
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "children": [
    {
     "id": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "displayName": "testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "methodName": "testQueryRescoreMode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047124765
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
  "startTimestamp": 1474047124895,
  "executionTime": 72
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
  "startTimestamp": 1474047124765,
  "executionTime": 204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047124975
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1474047125017,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1474047125061,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1474047124975,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "children": [
    {
     "id": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldNotSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0LazyLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testNoParentNullFieldCreatedIfNoParentSpecified",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047125077
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,167][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,206][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,206][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,209][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,213][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,213][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,434][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,434][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,436][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,449][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{-hdue_aBQSatFFrH2aB2jQ}{IzFUf_Z6TtuyMoINU9ARPQ}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,450][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,468][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,492][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,551][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,566][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldNotSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474047125155,
  "executionTime": 451
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,615][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,697][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testParentSetInDocNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474047125606,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,736][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,827][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,851][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474047125729,
  "executionTime": 173
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,906][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testPost2Dot0LazyLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474047125902,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,917][INFO ][org.elasticsearch.index.mapper]  [_index] [ParentFieldMapperTests#testNoParentNullFieldCreatedIfNoParentSpecified]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474047125908,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,922][INFO ][org.elasticsearch.index.mapper]  [_index] [ParentFieldMapperTests#testPost2Dot0EagerLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474047125918,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,924][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,924][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,925][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:05,926][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
  "startTimestamp": 1474047125077,
  "executionTime": 857
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testRejectNorms",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testCoerce",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047125942
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:05,973][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,009][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,010][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,014][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,018][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,018][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,233][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,234][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,234][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,243][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rs0FxyJZRVilxvrTtjei_A}{MqLaTsgzQNKGrJ69Ma_brg}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,245][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,258][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,327][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,352][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047125964,
  "executionTime": 425
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,399][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,466][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,499][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047126390,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,533][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,607][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,627][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047126527,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,671][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,738][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,786][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,887][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:06,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,035][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,105][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,124][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,209][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,276][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,297][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [NumberFieldMapperTests#testRejectNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047126665,
  "executionTime": 852
 }
]

[
 "TEST_STARTED",
 "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,530][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,653][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testCoerce]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047127517,
  "executionTime": 175
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,716][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,791][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,822][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047127692,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,856][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:07,952][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047127849,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,034][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,079][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,106][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047128026,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,138][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,204][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047128132,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,233][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,307][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,327][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,381][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,656][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [NumberFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474047128227,
  "executionTime": 478
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,706][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,706][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,706][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:08,709][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
  "startTimestamp": 1474047125942,
  "executionTime": 2776
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047128729
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128772,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128781,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128785,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128788,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128799,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128810,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128815,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128817,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128824,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128828,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128831,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128833,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128835,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128837,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128840,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474047128842,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1474047128729,
  "executionTime": 134
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tribe.TribeServiceTests",
   "displayName": "org.elasticsearch.tribe.TribeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.tribe.TribeServiceTests",
   "children": [
    {
     "id": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testEnvironmentSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testPassthroughSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testMinimalSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047128872
 }
]

[
 "TEST_STARTED",
 "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474047128896,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474047129002,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474047129004,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tribe.TribeServiceTests",
  "startTimestamp": 1474047128872,
  "executionTime": 136
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129018
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:09,061][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{E37oIhzNSy-FZx6srd-2aw}{local}{local[232]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474047129077,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474047129087,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:09,099][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:09,101][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474047129090,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
  "startTimestamp": 1474047129018,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterModuleTests",
   "displayName": "org.elasticsearch.cluster.ClusterModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterModuleTests",
   "children": [
    {
     "id": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testUnknownShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDeciderDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testShardsAllocatorFactoryNull",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDecider",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocatorAlreadyRegistered",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129124
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129144,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129149,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129157,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129172,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129183,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129198,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129202,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129217,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129225,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474047129236,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterModuleTests",
  "startTimestamp": 1474047129124,
  "executionTime": 134
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
   "displayName": "org.elasticsearch.tasks.ListTasksResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.ListTasksResponseTests",
   "children": [
    {
     "id": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testNonEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129291
 }
]

[
 "TEST_STARTED",
 "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1474047129389,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1474047129438,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
  "startTimestamp": 1474047129291,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129455
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129542,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129544,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129546,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129548,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129550,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129552,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129554,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474047129556,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1474047129455,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
   "children": [
    {
     "id": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testDocValuesNotAllowed",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testRootObjectMapperPropertiesDoNotCauseException",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testNoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithReparse",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMisplacedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersTermQuery",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithReparseWithStore",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAutoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMisplacedMappingAsRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testBoostWithOmitPositions",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMistypedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithStore",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersNoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersWithOffsetsTermQuery",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMultiField_defaults",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappers",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMultiField_includeInAllSetToFalse",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129570
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,606][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,629][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,629][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,633][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,636][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,636][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,772][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,776][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,778][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,780][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Dec4dYLqRa2w_otGPBffeA}{tRXOxzObSJSDjzxPjtzkbA}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,781][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,832][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,852][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,917][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,932][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testDocValuesNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047129597,
  "executionTime": 369
 }
]

[
 "TEST_STARTED",
 "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,978][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,058][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testRootObjectMapperPropertiesDoNotCauseException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047129967,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,094][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,164][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,180][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047130087,
  "executionTime": 394
 }
]

[
 "TEST_STARTED",
 "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,489][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,614][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,631][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testNoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047130481,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,685][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,756][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,780][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithReparse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047130678,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,922][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:10,936][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMisplacedTypeInRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047130829,
  "executionTime": 431
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,267][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,333][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,347][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] Mapping: {\"test\":{\"_all\":{\"enabled\":true,\"store_term_vector_payloads\":true,\"store_term_vector_positions\":false}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,350][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testRandom]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047131261,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,388][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,440][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,457][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047131382,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,509][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,574][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,594][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithReparseWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047131502,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_false] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:11,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_false][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,146][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_true] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,239][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_true][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,466][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_true] [AllFieldMapperTests#testAutoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047131623,
  "executionTime": 936
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,567][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,635][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,649][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMisplacedMappingAsRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047132559,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,696][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,748][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,763][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testBoostWithOmitPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047132687,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,806][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,896][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,912][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMistypedTypeInRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047132798,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:12,959][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,030][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,067][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047132951,
  "executionTime": 263
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,222][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,297][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,312][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersNoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047133214,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,348][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,401][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,417][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersWithOffsetsTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047133339,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,458][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,588][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMultiField_defaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047133451,
  "executionTime": 165
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,624][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,730][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047133616,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,769][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:13,907][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMultiField_includeInAllSetToFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474047133760,
  "executionTime": 521
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:14,281][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:14,282][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:14,282][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:14,285][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperTests",
  "startTimestamp": 1474047129570,
  "executionTime": 4724
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "displayName": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "children": [
    {
     "id": "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "displayName": "testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "methodName": "testTookWithRealClock",
     "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
     "children": []
    },
    {
     "id": "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "displayName": "testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "methodName": "testTookWithControlledClock",
     "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047134303
 }
]

[
 "TEST_STARTED",
 "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:14,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{I9smMp9zTKONPmH5_F35Zg}{local}{local[233]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
  "startTimestamp": 1474047134339,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:14,402][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SWLb5APBQzeMiQWkVeHwXg}{local}{local[234]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
  "startTimestamp": 1474047134397,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.TransportBulkActionTookTests",
  "startTimestamp": 1474047134303,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentParserTests",
   "children": [
    {
     "id": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParser",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicRootFallback",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoDocumentSent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testEmptyMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicObjectWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testParseToJsonAndParse",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testAttributes",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDocumentContainsMetadataField",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicGeoPointArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDotsWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParserNoTypeNoId",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedGeoPointArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSingleMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testFieldDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testObjectMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedNullValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldAfterSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testIncludeInAllPropagation",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMultipleSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithDynamicMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047134424
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,464][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,488][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,489][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,495][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,498][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,498][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,726][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,727][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,727][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,882][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{vuzGR31IRj26vum_7qHIuQ}{_1zb95kxTySN8z_LgtIvhQ}{local}{local[7]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:14,883][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,223][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,247][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,357][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParser]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047134446,
  "executionTime": 1008
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,460][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,506][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,522][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicRootFallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047135454,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,556][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,647][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,665][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047135550,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,713][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,854][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,868][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047135707,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:15,966][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,043][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoDocumentSent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047135959,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,080][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,177][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testEmptyMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047136074,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,228][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,283][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,296][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicObjectWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047136222,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,332][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,434][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,450][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047136325,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,487][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,561][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,575][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047136481,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,626][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,759][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,773][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047136619,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,809][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:16,965][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testParseToJsonAndParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047136802,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,008][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,083][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137002,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,115][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,213][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,245][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137108,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,284][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,387][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137269,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,420][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,548][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testAttributes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137413,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,590][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,637][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,653][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137584,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,684][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,740][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDocumentContainsMetadataField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137678,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,775][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,823][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,837][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137768,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,873][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:17,979][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicGeoPointArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047137867,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,014][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,083][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,098][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138009,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,142][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,310][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,324][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDotsWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138134,
  "executionTime": 220
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,361][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,493][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,526][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138355,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,558][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,703][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138552,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,736][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,788][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,803][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138730,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,915][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,929][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138845,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:18,971][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,435][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,453][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParserNoTypeNoId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047138963,
  "executionTime": 516
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,560][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,574][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047139479,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,653][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,667][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047139602,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,708][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,806][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedGeoPointArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047139702,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,891][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,906][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047139832,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:19,944][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,032][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047139938,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,067][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,127][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140061,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,159][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,223][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,238][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140152,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,273][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,322][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,335][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140267,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,515][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140365,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,548][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,594][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,608][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140541,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,654][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,714][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,730][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140647,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,776][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,832][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,852][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140768,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,911][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:20,991][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047140905,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,053][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,110][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141047,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,148][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,192][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,204][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141142,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,238][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,283][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,296][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141231,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,405][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,418][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141355,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,468][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,531][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141462,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,640][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,657][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141575,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,688][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,743][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSingleMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141682,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,835][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,877][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,889][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141829,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:21,982][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,012][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testFieldDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047141919,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,047][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,126][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testObjectMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142041,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,196][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,208][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142150,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,259][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,300][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,311][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142254,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,336][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,378][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,391][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldAfterSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142331,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,418][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,508][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testIncludeInAllPropagation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142413,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,541][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,584][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,595][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142535,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,633][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,709][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142627,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,841][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,854][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142787,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,910][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:22,983][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047142904,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,028][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,087][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMultipleSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143022,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,119][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,182][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143112,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,216][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,301][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143209,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,336][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,378][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,397][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143330,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,436][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,530][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,544][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143429,
  "executionTime": 232
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,668][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,757][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,768][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithDynamicMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143661,
  "executionTime": 253
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:23,919][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:24,000][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:24,012][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474047143914,
  "executionTime": 146
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:24,061][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:24,061][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:24,062][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:32:24,063][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
  "startTimestamp": 1474047134424,
  "executionTime": 9648
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.CidrsTests",
   "displayName": "org.elasticsearch.common.network.CidrsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.CidrsTests",
   "children": [
    {
     "id": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificOctetCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidSpecificCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testNullCidr",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificNetworkMaskCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingDot",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingSlash",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testRandomValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047144080
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047144149,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047144183,
  "executionTime": 1950
 }
]

[
 "TEST_STARTED",
 "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146133,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146136,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146138,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146142,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146144,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146147,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474047146149,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.CidrsTests",
  "startTimestamp": 1474047144080,
  "executionTime": 2121
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsQueryWithInvalidValues",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJsonDeprecatedSyntax",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsNotProvided",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047146210
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,244][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HykG_etATKi5vgYaFT_KqQ}{local}{local[235]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,252][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,252][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,282][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,282][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,282][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,286][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,286][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,286][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,291][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,291][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,291][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,293][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,293][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,293][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,305][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,313][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,313][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,313][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,317][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,321][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,321][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,321][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,327][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,328][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,328][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,332][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,332][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,332][WARN ][org.elasticsearch.deprecation.index.mapper]  [TxCtJpNAmn] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146227,
  "executionTime": 174
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146401,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146403,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146406,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146431,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146436,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146450,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146462,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,469][WARN ][org.elasticsearch.deprecation.common] Deprecated field [_type] used, expected [type] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:26,470][WARN ][org.elasticsearch.deprecation.common] Deprecated field [_type] used, expected [type] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146466,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146470,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146473,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146483,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474047146485,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
  "startTimestamp": 1474047146210,
  "executionTime": 284
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "children": [
    {
     "id": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValues",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifieldTwoLevels",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifield",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047146503
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,613][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,694][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,694][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,699][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,702][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,702][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,904][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,905][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,905][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,936][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7HfH2PyeS2mrgAWXL2pDZg}{p-nOPc9dTFyxlUtE2M_Y0A}{local}{local[8]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,937][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,957][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:26,976][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,084][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,241][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474047146557,
  "executionTime": 712
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,276][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,348][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,363][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifieldTwoLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474047147269,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,482][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,529][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifield]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474047147391,
  "executionTime": 168
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,560][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,560][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,560][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:27,562][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
  "startTimestamp": 1474047146503,
  "executionTime": 1082
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.ScopedSettingsTests",
   "displayName": "org.elasticsearch.common.settings.ScopedSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
   "children": [
    {
     "id": "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testLoggingUpdates",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testAddConsumer",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testGetSetting",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testUpdateTracer",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testKeyPattern",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testValidateWithSuggestion",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testIsDynamic",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testFallbackToLoggerLevel",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testApply",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testOverlappingComplexMatchSettings",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047147594
 }
]

[
 "TEST_STARTED",
 "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147708,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:27,721][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [1] to [2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147717,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147723,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147728,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:27,759][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.include] from [[]] to [[\"internal:index/shard/recovery/*\",\"internal:gateway/local*\"]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147756,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147760,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147764,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147782,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147786,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:27,797][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [1] to [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:27,797][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.baz] from [1] to [15]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147791,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147800,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474047147802,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.ScopedSettingsTests",
  "startTimestamp": 1474047147594,
  "executionTime": 214
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "children": [
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEmptyBooleanQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownQueryName",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchDisableCoord",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testDefaultMinShouldMatch",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchBiggerThanNumberOfShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewriteMultipleTimes",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testTooManyQueriesInObject",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithoutShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047147818
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,845][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WHJlB9CASJylwboE5D_r3g}{local}{local[236]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,852][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,852][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,910][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,910][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,913][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:27,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [nAGeSaeGt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147834,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147918,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147930,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147934,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147938,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147990,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147995,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047147998,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148002,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148007,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148014,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:28,018][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:28,018][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:46]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:28,019][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:100]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:28,019][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148016,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148020,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148300,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148318,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148326,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148331,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148334,
  "executionTime": 260
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148594,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148699,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474047148703,
  "executionTime": 156
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
  "startTimestamp": 1474047147818,
  "executionTime": 1047
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.LuceneTests",
   "displayName": "org.elasticsearch.common.lucene.LuceneTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.LuceneTests",
   "children": [
    {
     "id": "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testMMapHackSupported",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testNumDocs",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testAsSequentialAccessBits",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testFiles",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testWaitForIndex",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testPruneUnreferencedFiles",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testCount(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testCleanIndex",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047148873
 }
]

[
 "TEST_STARTED",
 "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047148911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047148913,
  "executionTime": 314
 }
]

[
 "TEST_STARTED",
 "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047149227,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047149271,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047149391,
  "executionTime": 1351
 }
]

[
 "TEST_STARTED",
 "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047150743,
  "executionTime": 276
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047151019,
  "executionTime": 836
 }
]

[
 "TEST_STARTED",
 "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474047151855,
  "executionTime": 142
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.LuceneTests",
  "startTimestamp": 1474047148873,
  "executionTime": 3127
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.IndexIdTests",
   "displayName": "org.elasticsearch.repositories.IndexIdTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.IndexIdTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152007
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474047152037,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474047152041,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474047152043,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.IndexIdTests",
  "startTimestamp": 1474047152007,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152055
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474047152073,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474047152076,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474047152079,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474047152083,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474047152085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474047152087,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
  "startTimestamp": 1474047152055,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testFieldsParsing",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152098
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474047152120,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474047152127,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474047152130,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474047152134,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1474047152098,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestStatsTests",
   "displayName": "org.elasticsearch.ingest.IngestStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestStatsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
     "displayName": "testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.ingest.IngestStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152197
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
  "startTimestamp": 1474047152216,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestStatsTests",
  "startTimestamp": 1474047152197,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "children": [
    {
     "id": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testNoTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testBackwardsCompatibilityEdgeNgramTokenFilter",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenizationEdge",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenization",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testParseTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152252
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474047152295,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474047152306,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474047152425,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474047152445,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474047152451,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
  "startTimestamp": 1474047152252,
  "executionTime": 215
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "displayName": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "children": [
    {
     "id": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "displayName": "testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "methodName": "testCamelCaseFieldNameStaysAsIs",
     "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152476
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,509][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,537][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,537][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,541][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,543][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,543][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,669][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,669][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,669][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{4oIbUVDgQfiukM0L2OX0jw}{myVv43jWSSyYvMvr3SDGHA}{local}{local[9]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,672][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,690][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,732][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,977][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/pWp9mLw_Rn6h_iRq_FTd_A] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:32,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/pWp9mLw_Rn6h_iRq_FTd_A] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:33,004][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CamelCaseFieldNameTests#testCamelCaseFieldNameStaysAsIs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
  "startTimestamp": 1474047152500,
  "executionTime": 560
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:33,060][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:33,061][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:33,061][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:32:33,062][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
  "startTimestamp": 1474047152476,
  "executionTime": 592
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153074
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:33,099][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7PqoA3C8SPOvMO7dEKsZ_g}{local}{local[237]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474047153117,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474047153119,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474047153121,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
  "startTimestamp": 1474047153074,
  "executionTime": 52
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153132
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:32:33,152][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lGyAEwhcQ7utJsrqZW9IZw}{local}{local[238]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474047153161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474047153163,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474047153165,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
  "startTimestamp": 1474047153132,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.SliceBuilderTests",
   "displayName": "org.elasticsearch.search.slice.SliceBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.SliceBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testToFilter",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testInvalidArguments",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153216
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474047153239,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474047153255,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474047153257,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474047153409,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474047153411,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.SliceBuilderTests",
  "startTimestamp": 1474047153216,
  "executionTime": 201
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "displayName": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "children": [
    {
     "id": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedAPIs",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedValues",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testCollision",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153424
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474047153451,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474047153455,
  "executionTime": 275
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474047153730,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474047153732,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
  "startTimestamp": 1474047153424,
  "executionTime": 315
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "children": [
    {
     "id": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "displayName": "testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "methodName": "testSimpleJsonFromAndTo",
     "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153752
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
  "startTimestamp": 1474047153821,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
  "startTimestamp": 1474047153752,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testBuildWordScorer",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153872
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474047153910,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474047153914,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474047153916,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474047153917,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
  "startTimestamp": 1474047153872,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "displayName": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "children": [
    {
     "id": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testParseSettings",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    },
    {
     "id": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testInvalidValues",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047153960
 }
]

[
 "TEST_STARTED",
 "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1474047154003,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1474047154005,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
  "startTimestamp": 1474047153960,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "children": [
    {
     "id": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testPreferNodes",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testGenerateShardId",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testThatOnlyNodesSupportNodeIds",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testBWC",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047154015
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:34,067][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2h62SVmqTfWuspYVO8YRZA}{local}{local[239]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:34,075][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{78gnu7XIRzSinSMYi9dH-w}{local}{local[241]}, previous {node}{2h62SVmqTfWuspYVO8YRZA}{local}{local[239]}}, removed {{node}{2h62SVmqTfWuspYVO8YRZA}{local}{local[239]},}, added {{node_4}{TzXK7tl2SAe3QFcGAXV8tQ}{local}{local[244]},{node_1}{78gnu7XIRzSinSMYi9dH-w}{local}{local[241]},{node_2}{gqRvl_msT3CMsS7dDmgvKg}{local}{local[242]},{node_3}{Fi-MlZFaTRuhdCxVFtRCEg}{local}{local[243]},{node_5}{O24xGXy0T7iLzhenmyAfrg}{local}{local[245]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474047154044,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474047154079,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:34,106][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{QTKtHH45TkmuvVs1pW1E-Q}{local}{local[249]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:34,107][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Y0QXd_6XTsePFGCCwCqr3w}{local}{local[251]}, previous {node}{QTKtHH45TkmuvVs1pW1E-Q}{local}{local[249]}}, removed {{node}{QTKtHH45TkmuvVs1pW1E-Q}{local}{local[249]},}, added {{node_4}{i84QtbATSYCi0D9VlqmRnA}{local}{local[254]},{node_1}{Y0QXd_6XTsePFGCCwCqr3w}{local}{local[251]},{node_2}{1U3Id6oNRK6xR9hJb1O1ug}{local}{local[252]},{node_3}{lIfSA5atQm2eRn8qzQ74LQ}{local}{local[253]},{node_5}{WY14YZrtRhSvTuL3va5HrQ}{local}{local[255]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474047154083,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474047154113,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
  "startTimestamp": 1474047154015,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "children": [
    {
     "id": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testInvalidAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testSameAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoTypes",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingType",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoAggs",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047154127
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:34,172][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{f_7l45fKSxqh2R4sCJbTiQ}{local}{local[259]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474047154191,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474047154207,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474047154273,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474047154371,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474047154373,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474047154375,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
  "startTimestamp": 1474047154127,
  "executionTime": 257
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047154391
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474047154419,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474047154443,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474047154581,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474047154584,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474047154586,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
  "startTimestamp": 1474047154391,
  "executionTime": 199
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogTests",
   "displayName": "org.elasticsearch.index.translog.TranslogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogTests",
   "children": [
    {
     "id": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testWithRandomException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenInIllegalState",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogOpsCountIsCorrect",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testOpenForeignTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTragicEventCanBeAnyException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedCorruptedCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommitted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGen",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testPendingDelete",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWriterWhileClosing",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testVerifyTranslogIsNotDeleted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRead(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRead",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWritesWithVaryingSize",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationHashCodeEquals",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWhileCreateWriteWithRecoveredTLogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotOnClosedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenAndFutureFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogChecksums",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTruncatedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpTo",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testStats(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotFromStreamInput",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFatalIOExceptionsWhileWritingConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailFlush",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicRecovery",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCloseConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedFileExists",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailOnClosedWrite",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogWriter",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWriteViewsAndSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationComparison",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotWithNewTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testIdParsingFromFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCheckpointOnDiskFull",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpToStream",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047154660
 }
]

[
 "TEST_STARTED",
 "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:35,197][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047154688,
  "executionTime": 555
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047155244,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047155279,
  "executionTime": 1694
 }
]

[
 "TEST_STARTED",
 "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047156973,
  "executionTime": 1036
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158009,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158164,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158201,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158281,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:38,386][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158367,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158420,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158534,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158622,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testRead(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158643,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:38,696][INFO ][org.elasticsearch.index.translog]  [index][1] testing with [2] threads, each doing [160] ops%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047158687,
  "executionTime": 717
 }
]

[
 "TEST_STARTED",
 "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047159404,
  "executionTime": 262
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047159666,
  "executionTime": 262
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047159928,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:40,029][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047159956,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:40,148][INFO ][org.elasticsearch.index.translog]  [index][1] --> corrupting C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.translog.TranslogTests_229C635BFFC33CB2-001\\tempDir-001\\translog-1.tlog...%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047160109,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:40,245][INFO ][org.elasticsearch.index.translog]  [index][1] --> truncating C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.translog.TranslogTests_229C635BFFC33CB2-001\\tempDir-001\\translog-1.tlog, prev: 1612, now: 1371%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047160168,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047160254,
  "executionTime": 770
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161024,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161133,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161165,
  "executionTime": 235
 }
]

[
 "TEST_STARTED",
 "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161400,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161464,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161502,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:41,725][INFO ][org.elasticsearch.index.translog]  [index][1] testing with [6] threads, each doing [192] ops%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161717,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161751,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161848,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161918,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:46,660][INFO ][org.elasticsearch.index.translog]  [index][1] --> test done. total ops written [2075]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047161963,
  "executionTime": 4705
 }
]

[
 "TEST_STARTED",
 "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047166668,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047166723,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047166786,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047166804,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047166841,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474047166870,
  "executionTime": 245
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogTests",
  "startTimestamp": 1474047154660,
  "executionTime": 12503
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testTermArray",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testGeo",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047167171
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,255][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lMFR9ObdRmG4tCprwQcwGw}{local}{local[260]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,274][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,274][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,307][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,308][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,308][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,334][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,334][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,334][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,338][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:47,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [bcTyUVihK] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167240,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167358,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167361,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167364,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167463,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167465,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167470,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167501,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167516,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167518,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167522,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167525,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474047167544,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermQueryBuilderTests",
  "startTimestamp": 1474047167171,
  "executionTime": 381
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "displayName": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "children": [
    {
     "id": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testSortByMasterLikelihood",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    },
    {
     "id": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testElectMaster",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047167558
 }
]

[
 "TEST_STARTED",
 "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1474047167725,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1474047167732,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
  "startTimestamp": 1474047167558,
  "executionTime": 178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047167742
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:47,888][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:47,951][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:47,951][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:47,955][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:47,957][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:47,957][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:48,299][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:48,299][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:48,302][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:48,388][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{t5nG-ubFSbqGNQruIM_I2g}{U4-JeWBmQcGUsNnbckcAVw}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:48,389][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:48,655][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,127][INFO ][org.elasticsearch.common.util] [node_s_0] [LongObjectHashMapTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1474047167880,
  "executionTime": 2248
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,129][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,130][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,130][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,131][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1474047167742,
  "executionTime": 2396
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "displayName": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "children": [
    {
     "id": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testUpgradeFromMultiFieldTypeToMultiFields",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testMergeMultiField",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047170176
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,311][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,362][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,362][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,366][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,368][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,368][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,672][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,672][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,673][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,745][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UlkQs8b8Tn60ALI_thOutQ}{yozkmY0tROuAsdgRc4O14g}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,746][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,927][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:50,945][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,134][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testUpgradeFromMultiFieldTypeToMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1474047170303,
  "executionTime": 858
 }
]

[
 "TEST_STARTED",
 "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,226][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,300][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,328][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testMergeMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1474047171162,
  "executionTime": 284
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,446][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,447][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,447][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:51,449][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
  "startTimestamp": 1474047170176,
  "executionTime": 1284
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
   "displayName": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "children": [
    {
     "id": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesDiscovery",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testCleanupWhenEmpty",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testInvalidIndexFolder",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingProcessing",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesNotImportedWhenTombstonePresent",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047171467
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:51,758][INFO ][org.elasticsearch.env    ] [M6WIkEo] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:51,759][INFO ][org.elasticsearch.env    ] [M6WIkEo] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:51,872][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474047171590,
  "executionTime": 285
 }
]

[
 "TEST_STARTED",
 "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,025][INFO ][org.elasticsearch.env    ] [moHja5r] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,026][INFO ][org.elasticsearch.env    ] [moHja5r] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474047171876,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,147][INFO ][org.elasticsearch.env    ] [sxQrLox] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,147][INFO ][org.elasticsearch.env    ] [sxQrLox] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474047172034,
  "executionTime": 222
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,319][INFO ][org.elasticsearch.env    ] [AbPBg-K] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,319][INFO ][org.elasticsearch.env    ] [AbPBg-K] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,364][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,367][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,371][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,374][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,376][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,380][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,416][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,418][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,421][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,424][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474047172256,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,579][INFO ][org.elasticsearch.env    ] [sxQ17_c] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,579][INFO ][org.elasticsearch.env    ] [sxQ17_c] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:32:52,621][WARN ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] can not be imported as a dangling index, as an index with the same name and UUID exist in the index tombstones.  This situation is likely caused by copying over the data directory for an index that was previously deleted.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474047172433,
  "executionTime": 188
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
  "startTimestamp": 1474047171467,
  "executionTime": 1213
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ESExceptionTests",
   "displayName": "org.elasticsearch.ESExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.ESExceptionTests",
   "children": [
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToXContent(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToXContent",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "displayName": "testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "methodName": "testWriteThrowable",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeElasticsearchException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "displayName": "testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "methodName": "testDeduplicate",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGetRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
     "displayName": "testStatus(org.elasticsearch.ESExceptionTests)",
     "methodName": "testStatus",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToString(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeUnknownException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047172690
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172740,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testToXContent(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172752,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172755,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172939,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStatus(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172954,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172978,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474047172981,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ESExceptionTests",
  "startTimestamp": 1474047172690,
  "executionTime": 295
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "children": [
    {
     "id": "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testShrinkIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testValidateShrinkIndex",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testValidateIndexName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047172992
 }
]

[
 "TEST_STARTED",
 "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:53,079][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[iCUtQrKXOj][1], [iCUtQrKXOj][2], [iCUtQrKXOj][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1474047173073,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:53,092][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[source][3], [source][1], [source][2], [source][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1474047173081,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1474047173092,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
  "startTimestamp": 1474047172992,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "children": [
    {
     "id": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflictOnCluster",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatChangingTTLKeepsMapperEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLAfterFirstDisablingWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSet",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSetTtlDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndEnabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndDisabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLFieldOnMergeWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflict",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047173108
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,145][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,190][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,191][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,194][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,197][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,197][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,435][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,436][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,436][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,456][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ATS8OfzLSU-HZSYjZgRKtA}{iRIyCOA1SdeKDcm4xvmG4g}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,456][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,482][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,502][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,603][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatDisablingTTLReportsConflictOnCluster]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047173137,
  "executionTime": 499
 }
]

[
 "TEST_STARTED",
 "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,671][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,760][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatChangingTTLKeepsMapperEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047173637,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,797][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,896][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,908][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047173790,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:53,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,010][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex/qd3a-mNQTpGowT2K1G2Ndg] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,058][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatEnablingTTLAfterFirstDisablingWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047173938,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,132][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,218][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,243][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047174124,
  "executionTime": 202
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,333][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,381][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,393][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047174326,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,456][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,571][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSetTtlDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047174447,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,611][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,818][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047174604,
  "executionTime": 255
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:54,867][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,032][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndEnabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047174859,
  "executionTime": 240
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,107][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,155][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,168][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndDisabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047175099,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,256][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,307][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,336][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047175250,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,380][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,438][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,454][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatEnablingTTLFieldOnMergeWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047175374,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,511][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,586][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatDisablingTTLReportsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047175505,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,621][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,687][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474047175615,
  "executionTime": 97
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,713][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,722][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,723][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:32:55,724][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
  "startTimestamp": 1474047173108,
  "executionTime": 2626
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047175741
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,781][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G99E0WqHSEWLVxMUxMnMVA}{local}{local[281]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,788][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,788][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,841][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,842][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,842][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,845][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,845][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,845][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,849][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,849][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,849][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,852][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,852][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,852][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,856][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,856][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,856][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,861][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,861][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,861][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,872][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,873][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,873][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,922][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,922][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:55,923][WARN ][org.elasticsearch.deprecation.index.mapper]  [BH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047175766,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047175955,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047175958,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047175960,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047176013,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047176015,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047176020,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047176023,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047176027,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474047176029,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
  "startTimestamp": 1474047175741,
  "executionTime": 295
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.VersionValueTests",
   "displayName": "org.elasticsearch.index.engine.VersionValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.VersionValueTests",
   "children": [
    {
     "id": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    },
    {
     "id": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testDeleteRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176041
 }
]

[
 "TEST_STARTED",
 "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1474047176174,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1474047176187,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.VersionValueTests",
  "startTimestamp": 1474047176041,
  "executionTime": 152
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
   "displayName": "org.elasticsearch.bootstrap.ESPolicyTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ESPolicyTests",
   "children": [
    {
     "id": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "displayName": "testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "methodName": "testRestrictPrivileges",
     "className": "org.elasticsearch.bootstrap.ESPolicyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176198
 }
]

[
 "TEST_STARTED",
 "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
  "startTimestamp": 1474047176313,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
  "startTimestamp": 1474047176198,
  "executionTime": 123
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "children": [
    {
     "id": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseSensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseInsensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadWithoutSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadOverConfiguredSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testKeepWordsPathSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176326
 }
]

[
 "TEST_STARTED",
 "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474047176469,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474047176484,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474047176504,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474047176514,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474047176544,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
  "startTimestamp": 1474047176326,
  "executionTime": 234
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "displayName": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "methodName": null,
   "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "children": [
    {
     "id": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "displayName": "testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "methodName": "testNodeInfoStreaming",
     "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176594
 }
]

[
 "TEST_STARTED",
 "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
  "startTimestamp": 1474047176608,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
  "startTimestamp": 1474047176594,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.stats.SearchStatsUnitTests",
   "displayName": "org.elasticsearch.search.stats.SearchStatsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.stats.SearchStatsUnitTests",
   "children": [
    {
     "id": "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
     "displayName": "testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
     "methodName": "testShardLevelSearchGroupStats",
     "className": "org.elasticsearch.search.stats.SearchStatsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176654
 }
]

[
 "TEST_STARTED",
 "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
  "startTimestamp": 1474047176669,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.stats.SearchStatsUnitTests",
  "startTimestamp": 1474047176654,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "displayName": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176680
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474047176697,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474047176709,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474047176711,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474047176713,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
  "startTimestamp": 1474047176680,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
   "displayName": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "children": [
    {
     "id": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarityPreV3",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176723
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474047176738,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474047176741,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474047176744,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474047176747,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
  "startTimestamp": 1474047176723,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.BytesRestResponseTests",
   "displayName": "org.elasticsearch.rest.BytesRestResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.BytesRestResponseTests",
   "children": [
    {
     "id": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNullThrowable",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testWithHeaders",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testDetailedExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testSimpleExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testConvert",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenPathContainsEncodingError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenInternalServerError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testErrorTrace",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176763
 }
]

[
 "TEST_STARTED",
 "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176784,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176787,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176789,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176799,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176801,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176807,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176811,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176813,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176815,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474047176819,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.BytesRestResponseTests",
  "startTimestamp": 1474047176763,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "children": [
    {
     "id": "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
     "displayName": "testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
     "methodName": "testContainerCreationAndDeletion",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176835
 }
]

[
 "TEST_STARTED",
 "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
  "startTimestamp": 1474047176851,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreTests",
  "startTimestamp": 1474047176835,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176905
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:56,927][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{O5En5t3BS1a4fayf4pSUDA}{local}{local[285]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474047176937,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474047176939,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474047176941,
  "executionTime": 41
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
  "startTimestamp": 1474047176905,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047176992
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:32:57,010][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fsRqSl-STzydHnLlE_kN2w}{local}{local[286]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474047177022,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474047177024,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:32:57,028][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:32:57,029][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474047177026,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
  "startTimestamp": 1474047176992,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "children": [
    {
     "id": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableOnlyPrimaries",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testIndexEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalanceNoReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047177041
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,063][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,064][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,065][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474047177056,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,073][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,073][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,074][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474047177066,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,083][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,084][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,084][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,085][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,086][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> verify only enabled index has been routed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474047177074,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,096][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,097][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,097][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,098][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][4], [test][2], [test][0], [test][3], [test][1], [test][5]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,098][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474047177086,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,108][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,108][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,109][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,111][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[always_disabled][0], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,111][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,116][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.rebalance.enable] from [NONE] to [PRIMARIES]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474047177100,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
  "startTimestamp": 1474047177041,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
   "displayName": "org.elasticsearch.action.support.IndicesOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.IndicesOptionsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    },
    {
     "id": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testFromOptions",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047177131
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1474047177168,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1474047177170,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
  "startTimestamp": 1474047177131,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.StatsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.StatsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047177179
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:57,197][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{iyxlRDK8RPOUs73eqa97Lw}{local}{local[303]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1474047177207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1474047177209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1474047177211,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.StatsTests",
  "startTimestamp": 1474047177179,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
   "displayName": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "children": [
    {
     "id": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalled",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalledOnUnexpectedCompletion",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testEvenBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOddBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOneByte",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOnProgressCannotBeCalledMoreThanOncePerPercent",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047177231
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177246,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177248,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177253,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177254,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177258,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474047177260,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
  "startTimestamp": 1474047177231,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "children": [
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompositeBuffer",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047177276
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177294,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177315,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177340,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177347,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177353,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177355,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177374,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177378,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177381,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177408,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177411,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177433,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177435,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177440,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177452,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177455,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177500,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177517,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177526,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177528,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177556,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177565,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177571,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177599,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177616,
  "executionTime": 350
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047177966,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047178002,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047178116,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047178132,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047178146,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474047178183,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
  "startTimestamp": 1474047177276,
  "executionTime": 917
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "displayName": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "children": [
    {
     "id": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testSort",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178207
 }
]

[
 "TEST_STARTED",
 "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1474047178225,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1474047178245,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
  "startTimestamp": 1474047178207,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
   "displayName": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "children": [
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178272
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1474047178302,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1474047178346,
  "executionTime": 34
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
  "startTimestamp": 1474047178272,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178392
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
  "startTimestamp": 1474047178408,
  "executionTime": 52
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
  "startTimestamp": 1474047178392,
  "executionTime": 70
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178467
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:58,485][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G8WvMjhqSViFms5gm4jPyg}{local}{local[304]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474047178494,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474047178497,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474047178499,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
  "startTimestamp": 1474047178467,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
   "displayName": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "children": [
    {
     "id": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testSingleThreaded",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    },
    {
     "id": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testConcurrent",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178536
 }
]

[
 "TEST_STARTED",
 "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1474047178551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1474047178553,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
  "startTimestamp": 1474047178536,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "children": [
    {
     "id": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "displayName": "testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "methodName": "testPreferPrimaryAllocationOverReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178594
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,611][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with 1 initial recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create several indices with no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,637][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][8], [test1][9]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] increasing the number of replicas to 1, and perform a reroute (to get the replicas allocation going)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,665][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] 2 replicas should be initializing now for the existing indices (we throttle to 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create a new index%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:58,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute, verify that primaries for the new index primary shards are allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
  "startTimestamp": 1474047178609,
  "executionTime": 60
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
  "startTimestamp": 1474047178594,
  "executionTime": 79
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptExceptionTests",
   "displayName": "org.elasticsearch.script.ScriptExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptExceptionTests",
   "children": [
    {
     "id": "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testNoLeniency",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testJsonOutput",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testImmutableStack",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178739
 }
]

[
 "TEST_STARTED",
 "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474047178755,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474047178758,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474047178760,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474047178764,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptExceptionTests",
  "startTimestamp": 1474047178739,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmInfoTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmInfoTests",
   "children": [
    {
     "id": "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
     "displayName": "testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
     "methodName": "testUseG1GC",
     "className": "org.elasticsearch.monitor.jvm.JvmInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178773
 }
]

[
 "TEST_STARTED",
 "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
  "startTimestamp": 1474047178789,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmInfoTests",
  "startTimestamp": 1474047178773,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JNANativesTests",
   "displayName": "org.elasticsearch.bootstrap.JNANativesTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JNANativesTests",
   "children": [
    {
     "id": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testMlockall",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    },
    {
     "id": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testConsoleCtrlHandler",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178800
 }
]

[
 "TEST_STARTED",
 "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1474047178814,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1474047178816,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JNANativesTests",
  "startTimestamp": 1474047178800,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoEncodingTests",
   "displayName": "org.elasticsearch.index.mapper.GeoEncodingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoEncodingTests",
   "children": [
    {
     "id": "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)",
     "displayName": "test(org.elasticsearch.index.mapper.GeoEncodingTests)",
     "methodName": "test",
     "className": "org.elasticsearch.index.mapper.GeoEncodingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178825
 }
]

[
 "TEST_STARTED",
 "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)",
  "startTimestamp": 1474047178838,
  "executionTime": 113
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoEncodingTests",
  "startTimestamp": 1474047178825,
  "executionTime": 128
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "children": [
    {
     "id": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeQueueSizesCanBeSerialized",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatThreadPoolTypeIsSerializedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeSettingAllowsToStart",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesOutUnboundedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatQueueSizeSerializationWorks",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesInteger",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047178959
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474047178975,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474047178977,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474047178979,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474047178983,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474047178985,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474047178987,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
  "startTimestamp": 1474047178959,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testNoFieldsInObjectInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testOrderSerialization",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownArrayNameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownObjectFieldnameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testBuildSearchContextHighlight",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownFieldnameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testParsingTagsSchema",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testTwoFieldsInObjectInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testParsingEmptyStructure",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testValidOrderOrdinals",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testStringInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testPreTagsWithoutPostTags",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047179007
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179024,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179057,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179117,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179120,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179121,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179124,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179126,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179190,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179197,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179200,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179206,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474047179211,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
  "startTimestamp": 1474047179007,
  "executionTime": 207
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.RatioValueTests",
   "displayName": "org.elasticsearch.common.unit.RatioValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.RatioValueTests",
   "children": [
    {
     "id": "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)",
     "displayName": "testParsing(org.elasticsearch.common.unit.RatioValueTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.common.unit.RatioValueTests",
     "children": []
    },
    {
     "id": "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
     "displayName": "testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
     "methodName": "testNegativeCase",
     "className": "org.elasticsearch.common.unit.RatioValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047179220
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)",
  "startTimestamp": 1474047179238,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
  "startTimestamp": 1474047179240,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.RatioValueTests",
  "startTimestamp": 1474047179220,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047179251
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474047179330,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474047179334,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474047179336,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474047179338,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1474047179251,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidTo",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNullFieldName",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidFrom",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidDistanceUnit",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidGeoDistance",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNoPoint",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNestedRangeQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047179352
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,381][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zUOihbAbRzGdWnVKX5ZXHw}{local}{local[307]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,388][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,388][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,405][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,405][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,405][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,407][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,407][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,407][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,410][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,410][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:32:59,410][WARN ][org.elasticsearch.deprecation.index.mapper]  [VSE] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179375,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179555,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179558,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179562,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179578,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179587,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179598,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179618,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179639,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179642,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179646,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179649,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179651,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179654,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179656,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179659,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179662,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179665,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179667,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474047179670,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
  "startTimestamp": 1474047179352,
  "executionTime": 340
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportModuleTests",
   "displayName": "org.elasticsearch.transport.TransportModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportModuleTests",
   "children": []
  },
  "startTimestamp": 1474047179698
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportModuleTests",
  "startTimestamp": 1474047179698,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "children": [
    {
     "id": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testSorting",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testGetBytesValues",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testThreads",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047179756
 }
]

[
 "TEST_STARTED",
 "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:59,820][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:59,889][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:59,889][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:59,893][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:59,896][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:59,896][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,025][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,026][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,026][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,028][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Wadv1qmXQx6w-YYmMU2jEg}{c6EhxqPGRH2FAmGeLED65Q}{local}{local[13]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,029][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,043][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,062][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,398][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474047179810,
  "executionTime": 644
 }
]

[
 "TEST_STARTED",
 "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,518][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,618][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,767][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testGetBytesValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474047180454,
  "executionTime": 337
 }
]

[
 "TEST_STARTED",
 "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,797][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:00,959][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,670][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testThreads]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474047180792,
  "executionTime": 912
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,711][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,804][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474047181704,
  "executionTime": 127
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,832][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,832][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,833][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:01,834][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
  "startTimestamp": 1474047179756,
  "executionTime": 2091
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047181853
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:01,896][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2JBKgp5cTrii9AwhMtnfAg}{local}{local[308]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:01,904][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:33:01,904][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181891,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181917,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181920,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181923,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181925,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181939,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181950,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181953,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181956,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181964,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474047181966,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
  "startTimestamp": 1474047181853,
  "executionTime": 122
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "displayName": "testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "methodName": "testSerializationWithoutError",
     "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "displayName": "testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "methodName": "testSerializationWithError",
     "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047181981
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
  "startTimestamp": 1474047181996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
  "startTimestamp": 1474047181998,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.WritePipelineResponseTests",
  "startTimestamp": 1474047181981,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexTests",
   "displayName": "org.elasticsearch.index.IndexTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.index.IndexTests)",
     "displayName": "testXContent(org.elasticsearch.index.IndexTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.index.IndexTests)",
     "displayName": "testToString(org.elasticsearch.index.IndexTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047182012
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1474047182028,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1474047182030,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexTests",
  "startTimestamp": 1474047182012,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "children": [
    {
     "id": "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testLevelDefaults",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testQuadtreeConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testPointsOnlyOption",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testCoerceParsing",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testGeoShapeMapperMerge",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testOrientationParsing",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testGeohashConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testLevelPrecisionConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047182045
 }
]

[
 "TEST_STARTED",
 "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,071][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,101][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,101][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,105][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,107][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,107][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,219][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,219][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,219][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,221][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{aq3QRxxMSce_hrv-jvbe3w}{2KkiOmR2TJ2qEO7oRdKn5A}{local}{local[14]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,221][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,247][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,265][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,336][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,353][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testLevelDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047182060,
  "executionTime": 325
 }
]

[
 "TEST_STARTED",
 "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,392][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,470][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,485][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testQuadtreeConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047182385,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,527][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,631][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,643][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047182520,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,744][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,758][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testPointsOnlyOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047182675,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,866][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:02,887][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,053][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [GeoShapeFieldMapperTests#testCoerceParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047182806,
  "executionTime": 315
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,128][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,199][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,219][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testGeoShapeMapperMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047183122,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,297][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,375][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,395][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,470][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,495][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [GeoShapeFieldMapperTests#testOrientationParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047183291,
  "executionTime": 255
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,552][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,630][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,643][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testGeohashConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047183546,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,752][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testLevelPrecisionConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047183673,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,791][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,933][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:03,951][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:04,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:04,091][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [GeoShapeFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474047183784,
  "executionTime": 358
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:04,142][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:04,143][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:04,143][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:04,145][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
  "startTimestamp": 1474047182045,
  "executionTime": 2117
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "children": [
    {
     "id": "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testTokenFilters",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testMultiTermAware",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testTokenizers",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testCharFilters",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047184171
 }
]

[
 "TEST_STARTED",
 "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474047184206,
  "executionTime": 303
 }
]

[
 "TEST_STARTED",
 "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474047184509,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474047184576,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474047184578,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisFactoryTests",
  "startTimestamp": 1474047184171,
  "executionTime": 411
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "children": [
    {
     "id": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested2",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiRootAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testEmptyNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testSingleNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testNestedArrayStrict",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testLimitOfNestedFieldsPerIndex",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047184590
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,618][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,643][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,643][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,649][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,651][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,651][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,766][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,767][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,767][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,835][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{CyQ3y_F2Swe1Ar2BHUbHww}{mIZ_WLmsTI6mhlTeM6mdUg}{local}{local[15]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,836][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,850][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,867][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:04,968][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047184609,
  "executionTime": 385
 }
]

[
 "TEST_STARTED",
 "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:05,000][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:05,080][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:05,123][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiRootAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047184994,
  "executionTime": 1386
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,478][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,519][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testEmptyNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047186380,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,591][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,644][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047186586,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:06,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,413][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testSingleNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047186673,
  "executionTime": 789
 }
]

[
 "TEST_STARTED",
 "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,468][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,540][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testNestedArrayStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047187462,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,635][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,652][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047187573,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,693][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,742][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,842][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,860][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,103][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,189][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,215][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,402][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,433][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test5] [NestedObjectMapperTests#testLimitOfNestedFieldsPerIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474047187686,
  "executionTime": 1628
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,314][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,315][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,315][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,317][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
  "startTimestamp": 1474047184590,
  "executionTime": 4736
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "children": [
    {
     "id": "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testSimpleMapping",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatValidIpCanBeConvertedToLong",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatIpv6AddressThrowsException",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatInvalidIpThrowsException",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047189333
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:09,396][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:09,481][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:09,482][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:09,485][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:09,487][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:09,487][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,332][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,332][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,333][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,455][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{9sg_EgHUTPWlLEBkflkJNw}{bG9RN9sMTQSH-7i9Pdz7jw}{local}{local[16]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,456][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,538][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,559][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,641][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,692][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyIpFieldMapperTests#testSimpleMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474047189386,
  "executionTime": 1349
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,743][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:10,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,030][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,127][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474047190735,
  "executionTime": 506
 }
]

[
 "TEST_STARTED",
 "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,244][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatValidIpCanBeConvertedToLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474047191241,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,249][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatIpv6AddressThrowsException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474047191245,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,253][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatInvalidIpThrowsException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474047191250,
  "executionTime": 3
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,254][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,255][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,255][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:11,257][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
  "startTimestamp": 1474047189333,
  "executionTime": 1932
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "displayName": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "children": [
    {
     "id": "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerializeInDifferentContextNoDefaults",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testAccessClosed",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testResponseHeaders",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashAndMergeWithModifiedDefaults",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerializeInDifferentContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStoreContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerialize",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testPreserveContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testCanResetDefault",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testCopyHeaders",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashAndMerge",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testPreserveContextKeepsOriginalContextWhenCalledTwice",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047191272
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191292,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191296,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191298,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191301,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191303,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191307,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191310,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191311,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191313,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191344,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191346,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191349,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474047191352,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.ThreadContextTests",
  "startTimestamp": 1474047191272,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047191365
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:11,574][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Yy-_VfzwQQWXTzj9w6uFNg}{local}{local[309]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1474047191754,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1474047191756,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:11,760][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"cumulative_sum\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:11,761][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"cumulative_sum\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1474047191758,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
  "startTimestamp": 1474047191365,
  "executionTime": 400
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "children": [
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047191772
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
  "startTimestamp": 1474047191836,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
  "startTimestamp": 1474047191772,
  "executionTime": 86
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
     "displayName": "testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
     "methodName": "testClusterConcurrentRebalance",
     "className": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047191866
 }
]

[
 "TEST_STARTED",
 "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,043][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,043][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 8 more nodes, and check that no rebalancing/relocation have happened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,044][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards, rebalancing should start, but, only 3 should be rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,047][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,047][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, 3 more should relocate now%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,048][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, 2 more should relocate now%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, no more relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
  "startTimestamp": 1474047192032,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
  "startTimestamp": 1474047191866,
  "executionTime": 199
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.ShardPathTests",
   "displayName": "org.elasticsearch.index.shard.ShardPathTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.ShardPathTests",
   "children": [
    {
     "id": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathIndexUUIDMissmatch",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testIllegalCustomDataPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathOnMultiState",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testValidCtor",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testGetRootPaths",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testLoadShardPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047192072
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,379][INFO ][org.elasticsearch.env    ] [h4rDsob] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,381][INFO ][org.elasticsearch.env    ] [h4rDsob] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,495][WARN ][org.elasticsearch.index.shard] [node_s_0] [test2][0] [foo][0] found shard on path: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.shard.ShardPathTests_229C635BFFC33CB2-001\\tempDir-003\\nodes\\0\\indices\\foobar\\0] with a different index UUID - this shard seems to be leftover from a different index with the same name. Remove the leftover shard in order to reuse the path with the current index%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474047192186,
  "executionTime": 309
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474047192495,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,675][INFO ][org.elasticsearch.env    ] [VLFVtBh] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,675][INFO ][org.elasticsearch.env    ] [VLFVtBh] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474047192499,
  "executionTime": 324
 }
]

[
 "TEST_STARTED",
 "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474047192823,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,997][INFO ][org.elasticsearch.env    ] [wyjKgWT] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:12,998][INFO ][org.elasticsearch.env    ] [wyjKgWT] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474047192827,
  "executionTime": 265
 }
]

[
 "TEST_STARTED",
 "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:13,300][INFO ][org.elasticsearch.env    ] [bTgr883] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:13,301][INFO ][org.elasticsearch.env    ] [bTgr883] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474047193093,
  "executionTime": 316
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.ShardPathTests",
  "startTimestamp": 1474047192072,
  "executionTime": 2544
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "children": [
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testId",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047194622
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,676][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,707][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,707][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,711][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,713][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,713][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,906][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,906][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,906][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,911][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yPPwBEy2QuqUYE9je7BRVQ}{1hIKwuR5QPyF2i9_s9iOjA}{local}{local[17]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,912][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,950][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:14,972][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,080][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1474047194667,
  "executionTime": 441
 }
]

[
 "TEST_STARTED",
 "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,125][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,246][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,259][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1474047195108,
  "executionTime": 216
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,324][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,325][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,325][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:15,328][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
  "startTimestamp": 1474047194622,
  "executionTime": 716
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "children": [
    {
     "id": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047195353
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474047195758,
  "executionTime": 551
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474047196309,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474047196315,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:16,356][WARN ][org.elasticsearch.action.support.replication] block_until_refresh request ran out of slots and forced a refresh: [[test][1]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474047196325,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:16,380][WARN ][org.elasticsearch.action.support.replication] block_until_refresh request ran out of slots and forced a refresh: [[test][1]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474047196369,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474047196380,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
  "startTimestamp": 1474047195353,
  "executionTime": 1033
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScoreModeTests",
   "displayName": "org.elasticsearch.index.query.ScoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScoreModeTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047196395
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474047196585,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474047196590,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474047196591,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474047196594,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScoreModeTests",
  "startTimestamp": 1474047196395,
  "executionTime": 202
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047196604
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:16,760][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{i0R_4fwAQSOm_14Gro6wwQ}{local}{local[321]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474047196771,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474047196773,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474047196777,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
  "startTimestamp": 1474047196604,
  "executionTime": 183
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentTypeTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
   "children": [
    {
     "id": "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromSmile",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromWildcard",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromCbor",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromRubbish",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromYaml",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromWildcardUppercase",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromJsonUppercase",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047196794
 }
]

[
 "TEST_STARTED",
 "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196907,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196915,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196917,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196919,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196925,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474047196927,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentTypeTests",
  "startTimestamp": 1474047196794,
  "executionTime": 137
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "children": [
    {
     "id": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValuesPre21",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047196937
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:16,983][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,005][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,006][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,012][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,015][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,015][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,308][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,309][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,310][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,314][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{kslycCYOSr24Cg5TfSgr8w}{YmGnayMsQXG7B7vyDGaZ5w}{local}{local[18]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,315][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,344][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,457][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,524][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValuesPre21]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1474047196974,
  "executionTime": 760
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,772][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,959][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:17,978][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1474047197734,
  "executionTime": 290
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,025][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,025][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,025][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,030][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
  "startTimestamp": 1474047196937,
  "executionTime": 1100
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullGeoPoint",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testInvalidPrecision",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testLocationParsing",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047198051
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,137][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{u1ajoF8WTF6gaNMP3SVTpw}{local}{local[322]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,146][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,146][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,174][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,174][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,174][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,182][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,183][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,183][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,188][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,188][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,188][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,191][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,191][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,191][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,193][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,193][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,193][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,196][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,196][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:18,196][WARN ][org.elasticsearch.deprecation.index.mapper]  [tnkVctoavU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198108,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198229,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198257,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198260,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198263,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198266,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198269,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198271,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198274,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198282,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198293,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198295,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198298,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474047198301,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
  "startTimestamp": 1474047198051,
  "executionTime": 259
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "children": [
    {
     "id": "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
     "displayName": "testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
     "methodName": "testUpdateNumberOfReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047198318
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,448][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,450][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,451][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,452][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,452][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add another replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,452][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and start the added replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,453][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,453][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now remove a replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:18,453][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] do a reroute, should remain the same%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
  "startTimestamp": 1474047198436,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
  "startTimestamp": 1474047198318,
  "executionTime": 139
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNumericField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNonDateWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryUnmappedWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteOpenBoundsToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testNamedQueryParsing",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeBoundaries",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryFormat",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchNone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchAll",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047198471
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,559][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xk67BFNiQcmd1sRM0Gmkmw}{local}{local[326]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,567][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,568][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,612][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,612][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,612][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,620][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,620][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,620][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,627][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,629][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,632][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,648][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,649][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,653][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,653][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:18,653][WARN ][org.elasticsearch.deprecation.index.mapper]  [cEilC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198544,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198661,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198665,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198676,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198682,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198684,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198727,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198729,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198732,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198740,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198766,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198805,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198807,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198809,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198812,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198828,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198837,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198843,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198848,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198851,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474047198852,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
  "startTimestamp": 1474047198471,
  "executionTime": 386
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testInvalidConstructorArgs",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047198863
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474047198876,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474047198878,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474047198891,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474047198894,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
  "startTimestamp": 1474047198863,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "children": [
    {
     "id": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "displayName": "testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "methodName": "testToReduce",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047198911
 }
]

[
 "TEST_STARTED",
 "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
  "startTimestamp": 1474047198991,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
  "startTimestamp": 1474047198911,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.UUIDTests",
   "displayName": "org.elasticsearch.common.UUIDTests",
   "methodName": null,
   "className": "org.elasticsearch.common.UUIDTests",
   "children": [
    {
     "id": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047199002
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474047199121,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474047199329,
  "executionTime": 361
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474047199690,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474047199769,
  "executionTime": 255
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.UUIDTests",
  "startTimestamp": 1474047199002,
  "executionTime": 1024
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "displayName": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "children": [
    {
     "id": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateValidationAccumulatesValidationErrors",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithAliasNameEqualToTemplatePattern",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testAliasInvalidFilterInvalidJson",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateInvalidNumberOfShards",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateEmptyMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBrokenMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBlankMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047200045
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,167][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,234][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,234][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,238][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,241][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,242][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,472][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,472][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,473][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,482][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{dZuE75ZtSLaJKgS60LdftA}{akJWYjjITEmcupXGe0jCsw}{local}{local[19]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,483][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,511][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,529][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateValidationAccumulatesValidationErrors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200137,
  "executionTime": 393
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,535][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithAliasNameEqualToTemplatePattern]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200531,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,541][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testAliasInvalidFilterInvalidJson]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200536,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,546][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateInvalidNumberOfShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200542,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,555][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [7-OvDDMpT_ufVjAjRBvlzw] The [string] field is deprecated, please use [text] or [keyword] instead on [field2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,556][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200547,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,566][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateEmptyMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200558,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,574][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBrokenMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200567,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,586][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBlankMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474047200576,
  "executionTime": 11
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,587][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,588][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,588][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:20,589][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
  "startTimestamp": 1474047200045,
  "executionTime": 551
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "children": [
    {
     "id": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSerializationFailureDuringDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testUnexpectedDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testFailToPublishWithLessThanMinMasterNodes",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testTimeoutOrCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testDisablingDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testOutOfOrderCommitMessages",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimultaneousClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testPublishingWithSendingErrors",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimpleClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testIncomingClusterStateValidation",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047200636
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:20,695][INFO ][org.elasticsearch.test.transport] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:20,863][INFO ][org.elasticsearch.test.transport] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,160][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,175][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {ecK2T3gVTYycEPK-hK5jjQ}{mJHGqxqQRwKnGzgJPsBr3g}{local}{local[21]} reason RemoteTransportException[[][local[20]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,181][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [208]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,195][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [HTI_QHwJT2WLfW5goLpu2Q], version [1]) to [{ecK2T3gVTYycEPK-hK5jjQ}{mJHGqxqQRwKnGzgJPsBr3g}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,230][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [HTI_QHwJT2WLfW5goLpu2Q]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047200662,
  "executionTime": 626
 }
]

[
 "TEST_STARTED",
 "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,300][INFO ][org.elasticsearch.test.transport] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,328][INFO ][org.elasticsearch.test.transport] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,332][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,332][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {WbrSYgk2SRaTL-g6m9nDdQ}{29glAyTtQkWMMR3uEI1_UA}{local}{local[23]} reason RemoteTransportException[[][local[22]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,336][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,340][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [STAexSx0Q4ahUVZZB4UHHg], version [1]) to [{WbrSYgk2SRaTL-g6m9nDdQ}{29glAyTtQkWMMR3uEI1_UA}{local}{local[23]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,341][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [STAexSx0Q4ahUVZZB4UHHg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,354][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [eePg1J7LTva7aCpieL3kmA], diff size [133]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,358][TRACE][org.elasticsearch.discovery.zen.publish] master node {WbrSYgk2SRaTL-g6m9nDdQ}{29glAyTtQkWMMR3uEI1_UA}{local}{local[23]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,359][TRACE][org.elasticsearch.discovery.zen.publish] committing version [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,359][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [eePg1J7LTva7aCpieL3kmA], version [2]) to [{WbrSYgk2SRaTL-g6m9nDdQ}{29glAyTtQkWMMR3uEI1_UA}{local}{local[23]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,359][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [eePg1J7LTva7aCpieL3kmA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201288,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,364][INFO ][org.elasticsearch.test.transport] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,370][INFO ][org.elasticsearch.test.transport] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,387][INFO ][org.elasticsearch.test.transport] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,391][INFO ][org.elasticsearch.test.transport] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,394][INFO ][org.elasticsearch.test.transport] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201361,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,405][INFO ][org.elasticsearch.test.transport] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,418][INFO ][org.elasticsearch.test.transport] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,421][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [1], UUID [Y5Uk5qm8RISUdtC0SBxKuQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,423][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [213]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,424][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,424][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,425][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Y5Uk5qm8RISUdtC0SBxKuQ], version [1]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,425][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [Y5Uk5qm8RISUdtC0SBxKuQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,426][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,427][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [2], UUID [FRhsCO2fRpWxcGAqmOxUqw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,428][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,429][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,430][TRACE][org.elasticsearch.discovery.zen.publish] committing version [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,430][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [FRhsCO2fRpWxcGAqmOxUqw], version [2]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,431][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [FRhsCO2fRpWxcGAqmOxUqw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,445][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,445][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [3], UUID [2usmO-3QT1SfBJn-cF4T2g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,446][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,446][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [3]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,446][TRACE][org.elasticsearch.discovery.zen.publish] committing version [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,446][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [2usmO-3QT1SfBJn-cF4T2g], version [3]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,447][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [2usmO-3QT1SfBJn-cF4T2g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,447][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,447][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [4], UUID [bEpeSIiNQGiZZwndnCkNYQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,448][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,448][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [4]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,448][TRACE][org.elasticsearch.discovery.zen.publish] committing version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,448][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [bEpeSIiNQGiZZwndnCkNYQ], version [4]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,448][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [bEpeSIiNQGiZZwndnCkNYQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,449][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,449][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [5], UUID [Jts--6A2TyqB24SQZ26bfw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,449][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [5] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,450][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [5]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,450][TRACE][org.elasticsearch.discovery.zen.publish] committing version [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,450][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Jts--6A2TyqB24SQZ26bfw], version [5]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,451][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [Jts--6A2TyqB24SQZ26bfw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,451][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,452][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [6], UUID [miEaQSaJQm-oB5YTykOhiA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,452][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,452][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [6]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,452][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,452][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [miEaQSaJQm-oB5YTykOhiA], version [6]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,453][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [miEaQSaJQm-oB5YTykOhiA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,453][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,453][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [7], UUID [AOPx6bgwRXmGGHEGTCVo-g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,454][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,454][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [7]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,454][TRACE][org.elasticsearch.discovery.zen.publish] committing version [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,454][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [AOPx6bgwRXmGGHEGTCVo-g], version [7]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,454][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [AOPx6bgwRXmGGHEGTCVo-g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,455][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,455][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [8], UUID [RrzZurq-Rriw3r-Qh-qArA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,456][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [8] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,456][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [8]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,457][TRACE][org.elasticsearch.discovery.zen.publish] committing version [8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,457][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [RrzZurq-Rriw3r-Qh-qArA], version [8]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,457][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [RrzZurq-Rriw3r-Qh-qArA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,457][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,457][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [9], UUID [w6DQjHdgS8KvazogtlQz1w]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,458][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [9] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,458][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [9]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,458][TRACE][org.elasticsearch.discovery.zen.publish] committing version [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,458][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [w6DQjHdgS8KvazogtlQz1w], version [9]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,459][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [9], uuid [w6DQjHdgS8KvazogtlQz1w]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,459][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,459][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [10], UUID [qmDkxGzhSUiu0ndyu4S23A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,460][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [10] with size [215]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,460][TRACE][org.elasticsearch.discovery.zen.publish] master node {GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]} acked cluster state version [10]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,460][TRACE][org.elasticsearch.discovery.zen.publish] committing version [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,460][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [qmDkxGzhSUiu0ndyu4S23A], version [10]) to [{GU2aqs7IRJy5p_XKlUboaQ}{19-22ZnUQ2WPRf-p6mSRfA}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,460][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [10], uuid [qmDkxGzhSUiu0ndyu4S23A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,460][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201401,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,466][INFO ][org.elasticsearch.test.transport] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,470][INFO ][org.elasticsearch.test.transport] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,474][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,474][TRACE][org.elasticsearch.discovery.zen.publish] master node {P9ZQ3h70SB6FT_EeMpJ4QA}{cosSfpT_TI-0Yk3j9NVIlw}{local}{local[32]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,475][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,475][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mCjkXjvQTA2RFCy9r2faGQ], version [1]) to [{P9ZQ3h70SB6FT_EeMpJ4QA}{cosSfpT_TI-0Yk3j9NVIlw}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,475][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [mCjkXjvQTA2RFCy9r2faGQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,477][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [254]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,497][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [m_mC1AXrT3-k2tkMc3m8Fg], version [2]) to [{P9ZQ3h70SB6FT_EeMpJ4QA}{cosSfpT_TI-0Yk3j9NVIlw}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,501][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [m_mC1AXrT3-k2tkMc3m8Fg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201462,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,510][INFO ][org.elasticsearch.test.transport] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,514][INFO ][org.elasticsearch.discovery.zen.publish] --> publishing states%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,515][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,516][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,516][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,516][INFO ][org.elasticsearch.discovery.zen.publish] --> committing states%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,516][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [Z2f4NpIZQ_-etAeC52Ho2A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,517][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [tNp_V8ysRxSxJrxaVjXRQw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,517][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[7NTDZaBKTh266AmdF5lzPg]/v[2] together with state uuid[tNp_V8ysRxSxJrxaVjXRQw]/v[3]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201506,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,523][INFO ][org.elasticsearch.test.transport] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,530][INFO ][org.elasticsearch.test.transport] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,538][INFO ][org.elasticsearch.test.transport] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,542][INFO ][org.elasticsearch.test.transport] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,556][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [365]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,558][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [365]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,560][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [365]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,574][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [xnY2gvFSRrCf99UeugSlOQ], version [1]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,574][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [xnY2gvFSRrCf99UeugSlOQ], version [1]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,575][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [xnY2gvFSRrCf99UeugSlOQ], version [1]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,593][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [xnY2gvFSRrCf99UeugSlOQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,593][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [xnY2gvFSRrCf99UeugSlOQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,593][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [xnY2gvFSRrCf99UeugSlOQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,601][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [s9SHpO8IRliTNL4IWdV1QQ], diff size [180]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,602][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [s9SHpO8IRliTNL4IWdV1QQ], version [2]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,603][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [s9SHpO8IRliTNL4IWdV1QQ], diff size [180]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,603][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [s9SHpO8IRliTNL4IWdV1QQ], diff size [180]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,603][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [s9SHpO8IRliTNL4IWdV1QQ], version [2]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,604][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [s9SHpO8IRliTNL4IWdV1QQ], version [2]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,604][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [s9SHpO8IRliTNL4IWdV1QQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,605][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [s9SHpO8IRliTNL4IWdV1QQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,606][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [s9SHpO8IRliTNL4IWdV1QQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,607][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [GSsUDfIrQamBsWJZBP7SlQ], diff size [181]%0D%0A[2016-09-16T11:33:21,607][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [GSsUDfIrQamBsWJZBP7SlQ], diff size [181]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,607][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [GSsUDfIrQamBsWJZBP7SlQ], diff size [181]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,607][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [3]. processing ... (current pending [3], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,608][TRACE][org.elasticsearch.discovery.zen.publish] committing version [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,608][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [GSsUDfIrQamBsWJZBP7SlQ], version [3]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,608][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [GSsUDfIrQamBsWJZBP7SlQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,608][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [GSsUDfIrQamBsWJZBP7SlQ], version [3]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,609][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [GSsUDfIrQamBsWJZBP7SlQ], version [3]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,609][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [GSsUDfIrQamBsWJZBP7SlQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,609][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [GSsUDfIrQamBsWJZBP7SlQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,610][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [Cimlhf5FSzeHaP_KFJviLw], diff size [181]%0D%0A[2016-09-16T11:33:21,610][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [Cimlhf5FSzeHaP_KFJviLw], diff size [181]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,610][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [Cimlhf5FSzeHaP_KFJviLw], diff size [181]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,610][TRACE][org.elasticsearch.discovery.zen.publish] master node {qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]} acked cluster state version [4]. processing ... (current pending [3], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,610][TRACE][org.elasticsearch.discovery.zen.publish] committing version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,611][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Cimlhf5FSzeHaP_KFJviLw], version [4]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,611][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Cimlhf5FSzeHaP_KFJviLw], version [4]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,612][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Cimlhf5FSzeHaP_KFJviLw], version [4]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,612][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [Cimlhf5FSzeHaP_KFJviLw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,612][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [Cimlhf5FSzeHaP_KFJviLw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,612][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [Cimlhf5FSzeHaP_KFJviLw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,613][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [nn6REn1cRGSlIT1eW3YuFQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,614][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [nn6REn1cRGSlIT1eW3YuFQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,615][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [5]. processing ... (current pending [3], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,615][TRACE][org.elasticsearch.discovery.zen.publish] committing version [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,615][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [nn6REn1cRGSlIT1eW3YuFQ], version [5]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,615][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [nn6REn1cRGSlIT1eW3YuFQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,616][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [nn6REn1cRGSlIT1eW3YuFQ], version [5]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,616][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [nn6REn1cRGSlIT1eW3YuFQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,616][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [nn6REn1cRGSlIT1eW3YuFQ], version [5]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,616][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [nn6REn1cRGSlIT1eW3YuFQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,616][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [nn6REn1cRGSlIT1eW3YuFQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,617][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [UtKjnsSCSb6A2S-38fisBQ], diff size [185]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,618][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [UtKjnsSCSb6A2S-38fisBQ], diff size [185]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,618][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [UtKjnsSCSb6A2S-38fisBQ], diff size [185]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,618][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [6]. processing ... (current pending [3], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,618][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,618][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [UtKjnsSCSb6A2S-38fisBQ], version [6]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,619][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [UtKjnsSCSb6A2S-38fisBQ], version [6]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,619][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [UtKjnsSCSb6A2S-38fisBQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,619][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [UtKjnsSCSb6A2S-38fisBQ], version [6]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,619][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [UtKjnsSCSb6A2S-38fisBQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,620][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [UtKjnsSCSb6A2S-38fisBQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,624][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [8m3JsvV-Q4WeCmJbQjZMZQ], diff size [187]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,625][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [8m3JsvV-Q4WeCmJbQjZMZQ], diff size [187]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,625][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [8m3JsvV-Q4WeCmJbQjZMZQ], diff size [187]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,625][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [8m3JsvV-Q4WeCmJbQjZMZQ], version [7]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,626][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [8m3JsvV-Q4WeCmJbQjZMZQ], version [7]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,626][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [8m3JsvV-Q4WeCmJbQjZMZQ], version [7]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,626][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [8m3JsvV-Q4WeCmJbQjZMZQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,627][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [8m3JsvV-Q4WeCmJbQjZMZQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,627][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [8m3JsvV-Q4WeCmJbQjZMZQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,629][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [8] with uuid [dkAaBujVQaaSFsOAlArmIA], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,629][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [8] with uuid [dkAaBujVQaaSFsOAlArmIA], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,630][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [8] with uuid [dkAaBujVQaaSFsOAlArmIA], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,630][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [8]. processing ... (current pending [3], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [8]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][TRACE][org.elasticsearch.discovery.zen.publish] committing version [8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [dkAaBujVQaaSFsOAlArmIA], version [8]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [dkAaBujVQaaSFsOAlArmIA], version [8]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [dkAaBujVQaaSFsOAlArmIA], version [8]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [dkAaBujVQaaSFsOAlArmIA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [dkAaBujVQaaSFsOAlArmIA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,631][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [dkAaBujVQaaSFsOAlArmIA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,635][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [9] with uuid [VG8XeWU7SJaA51SiIuLwfQ], diff size [191]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,636][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [9] with uuid [VG8XeWU7SJaA51SiIuLwfQ], diff size [191]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,636][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [9] with uuid [VG8XeWU7SJaA51SiIuLwfQ], diff size [191]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,637][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [9]. processing ... (current pending [3], needed [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,637][TRACE][org.elasticsearch.discovery.zen.publish] master node {qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]} acked cluster state version [9]. processing ... (current pending [2], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,637][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [9]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][TRACE][org.elasticsearch.discovery.zen.publish] committing version [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [VG8XeWU7SJaA51SiIuLwfQ], version [9]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [VG8XeWU7SJaA51SiIuLwfQ], version [9]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [9], uuid [VG8XeWU7SJaA51SiIuLwfQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [VG8XeWU7SJaA51SiIuLwfQ], version [9]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [9], uuid [VG8XeWU7SJaA51SiIuLwfQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,638][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [9], uuid [VG8XeWU7SJaA51SiIuLwfQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,639][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [10] with uuid [7CAkH4XYQOajQQF4EpA_XQ], diff size [195]%0D%0A[2016-09-16T11:33:21,639][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [10] with uuid [7CAkH4XYQOajQQF4EpA_XQ], diff size [195]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,639][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [10] with uuid [7CAkH4XYQOajQQF4EpA_XQ], diff size [195]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,639][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [10]. processing ... (current pending [3], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,639][TRACE][org.elasticsearch.discovery.zen.publish] master node {qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]} acked cluster state version [10]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,639][TRACE][org.elasticsearch.discovery.zen.publish] committing version [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,640][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [7CAkH4XYQOajQQF4EpA_XQ], version [10]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,640][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [7CAkH4XYQOajQQF4EpA_XQ], version [10]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,640][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [10], uuid [7CAkH4XYQOajQQF4EpA_XQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,640][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [7CAkH4XYQOajQQF4EpA_XQ], version [10]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,640][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [10], uuid [7CAkH4XYQOajQQF4EpA_XQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,640][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [10], uuid [7CAkH4XYQOajQQF4EpA_XQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,641][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [11] with uuid [jHmidtXzRKu42_783ZwO0A], diff size [198]%0D%0A[2016-09-16T11:33:21,641][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [11] with uuid [jHmidtXzRKu42_783ZwO0A], diff size [198]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,641][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [11]. processing ... (current pending [3], needed [2])%0D%0A[2016-09-16T11:33:21,641][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [11] with uuid [jHmidtXzRKu42_783ZwO0A], diff size [198]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,641][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [11]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][TRACE][org.elasticsearch.discovery.zen.publish] committing version [11]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [jHmidtXzRKu42_783ZwO0A], version [11]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [jHmidtXzRKu42_783ZwO0A], version [11]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [11], uuid [jHmidtXzRKu42_783ZwO0A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [11], uuid [jHmidtXzRKu42_783ZwO0A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [jHmidtXzRKu42_783ZwO0A], version [11]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,642][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [11], uuid [jHmidtXzRKu42_783ZwO0A]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,643][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [12] with uuid [AVk8rnMtTuS-fDMisAI0jw], diff size [199]%0D%0A[2016-09-16T11:33:21,643][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [12] with uuid [AVk8rnMtTuS-fDMisAI0jw], diff size [199]%0D%0A[2016-09-16T11:33:21,643][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [12] with uuid [AVk8rnMtTuS-fDMisAI0jw], diff size [199]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,643][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [AVk8rnMtTuS-fDMisAI0jw], version [12]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,643][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [AVk8rnMtTuS-fDMisAI0jw], version [12]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,644][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [12], uuid [AVk8rnMtTuS-fDMisAI0jw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,644][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [AVk8rnMtTuS-fDMisAI0jw], version [12]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,644][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [12], uuid [AVk8rnMtTuS-fDMisAI0jw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,644][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [12], uuid [AVk8rnMtTuS-fDMisAI0jw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [13] with uuid [O8bA5FWbS2Ca2MCXJDSztA], diff size [200]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [13] with uuid [O8bA5FWbS2Ca2MCXJDSztA], diff size [200]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [13] with uuid [O8bA5FWbS2Ca2MCXJDSztA], diff size [200]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [13]. processing ... (current pending [3], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [13]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][TRACE][org.elasticsearch.discovery.zen.publish] committing version [13]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O8bA5FWbS2Ca2MCXJDSztA], version [13]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O8bA5FWbS2Ca2MCXJDSztA], version [13]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [13], uuid [O8bA5FWbS2Ca2MCXJDSztA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O8bA5FWbS2Ca2MCXJDSztA], version [13]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,645][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [13], uuid [O8bA5FWbS2Ca2MCXJDSztA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,646][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [13], uuid [O8bA5FWbS2Ca2MCXJDSztA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,646][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [14] with uuid [8RfGeVguQ06Pv2zQ1hfOEQ], diff size [202]%0D%0A[2016-09-16T11:33:21,646][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [14] with uuid [8RfGeVguQ06Pv2zQ1hfOEQ], diff size [202]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,646][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [14] with uuid [8RfGeVguQ06Pv2zQ1hfOEQ], diff size [202]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,647][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [8RfGeVguQ06Pv2zQ1hfOEQ], version [14]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,647][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [8RfGeVguQ06Pv2zQ1hfOEQ], version [14]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,647][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [14], uuid [8RfGeVguQ06Pv2zQ1hfOEQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,647][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [8RfGeVguQ06Pv2zQ1hfOEQ], version [14]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,647][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [14], uuid [8RfGeVguQ06Pv2zQ1hfOEQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,647][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [14], uuid [8RfGeVguQ06Pv2zQ1hfOEQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,648][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [15] with uuid [XpnqHcotRsWrXd55g3NBBA], diff size [202]%0D%0A[2016-09-16T11:33:21,648][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [15] with uuid [XpnqHcotRsWrXd55g3NBBA], diff size [202]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,648][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [15] with uuid [XpnqHcotRsWrXd55g3NBBA], diff size [202]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,648][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [15]. processing ... (current pending [3], needed [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [15]. processing ... (current pending [2], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][TRACE][org.elasticsearch.discovery.zen.publish] master node {qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]} acked cluster state version [15]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][TRACE][org.elasticsearch.discovery.zen.publish] committing version [15]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [XpnqHcotRsWrXd55g3NBBA], version [15]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [XpnqHcotRsWrXd55g3NBBA], version [15]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [15], uuid [XpnqHcotRsWrXd55g3NBBA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [XpnqHcotRsWrXd55g3NBBA], version [15]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,649][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [15], uuid [XpnqHcotRsWrXd55g3NBBA]%0D%0A[2016-09-16T11:33:21,649][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [15], uuid [XpnqHcotRsWrXd55g3NBBA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,650][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [16] with uuid [WMl098oSS9qHdx97k0WLVw], diff size [208]%0D%0A[2016-09-16T11:33:21,650][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [16] with uuid [WMl098oSS9qHdx97k0WLVw], diff size [208]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,650][TRACE][org.elasticsearch.discovery.zen.publish] master node {waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]} acked cluster state version [16]. processing ... (current pending [3], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [16] with uuid [WMl098oSS9qHdx97k0WLVw], diff size [208]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][TRACE][org.elasticsearch.discovery.zen.publish] master node {xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]} acked cluster state version [16]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][TRACE][org.elasticsearch.discovery.zen.publish] committing version [16]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [WMl098oSS9qHdx97k0WLVw], version [16]) to [{waMDIA9QQqmBQDGG_7FHyg}{TACCB1D-RdaRRHCcgGXAgg}{local}{local[36]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [WMl098oSS9qHdx97k0WLVw], version [16]) to [{xM0iq771THW3aIgPntvIYg}{SfaXsR0HRpiOlMQYlTLOPg}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [16], uuid [WMl098oSS9qHdx97k0WLVw]%0D%0A[2016-09-16T11:33:21,651][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [16], uuid [WMl098oSS9qHdx97k0WLVw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [WMl098oSS9qHdx97k0WLVw], version [16]) to [{qZuY_vlBRl-TL_sr20xnfA}{8cittmxbTrSnXp0adrAfHQ}{local}{local[37]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,651][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [16], uuid [WMl098oSS9qHdx97k0WLVw]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201518,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,660][INFO ][org.elasticsearch.test.transport] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,681][INFO ][org.elasticsearch.test.transport] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,688][INFO ][org.elasticsearch.test.transport] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,692][INFO ][org.elasticsearch.test.transport] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,695][INFO ][org.elasticsearch.test.transport] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,705][INFO ][org.elasticsearch.test.transport] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,708][INFO ][org.elasticsearch.test.transport] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,715][INFO ][org.elasticsearch.test.transport] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,720][INFO ][org.elasticsearch.test.transport] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,725][INFO ][org.elasticsearch.discovery.zen.publish] --> expecting commit to succeed. good nodes [3], errors [1], timeouts [2]. min_master_nodes [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,744][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [502]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,752][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [502]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,753][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [502]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,754][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [502]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,768][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {gy1tU7vdQmaP4MA21fJRQg}{g_DgPBRXRVCZISgkDPnnaw}{local}{local[41]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[38]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,771][TRACE][org.elasticsearch.discovery.zen.publish] master node {gy1tU7vdQmaP4MA21fJRQg}{g_DgPBRXRVCZISgkDPnnaw}{local}{local[41]} failed to ack cluster state version [0]. processing ... (current pending [5], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,771][TRACE][org.elasticsearch.discovery.zen.publish] master node {CUpCgVguSXSFx47uXie6ww}{EDWFBKXyQ7mdztDBsaSPkQ}{local}{local[39]} acked cluster state version [0]. processing ... (current pending [4], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,779][TRACE][org.elasticsearch.discovery.zen.publish] master node {RZthHqPdSC2r9O7pt7FXvQ}{YmZRurVLRla7m0PETK88eQ}{local}{local[40]} acked cluster state version [0]. processing ... (current pending [3], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,780][TRACE][org.elasticsearch.discovery.zen.publish] committing version [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,780][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O24L6P8sQya9cEoA4Pe1WQ], version [0]) to [{wYMDeGwBRPi1pyPL-3zt1g}{Cu2sA_rXQ2i30Nq1msX53g}{local}{local[46]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,780][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O24L6P8sQya9cEoA4Pe1WQ], version [0]) to [{CUpCgVguSXSFx47uXie6ww}{EDWFBKXyQ7mdztDBsaSPkQ}{local}{local[39]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,779][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {qiGfFWCnT_Gtq25zFWkzpQ}{3sd0FUoIQW2JGb7LCqlnyw}{local}{local[45]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[38]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,780][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O24L6P8sQya9cEoA4Pe1WQ], version [0]) to [{RZthHqPdSC2r9O7pt7FXvQ}{YmZRurVLRla7m0PETK88eQ}{local}{local[40]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,780][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [O24L6P8sQya9cEoA4Pe1WQ], version [0]) to [{ikG5gPACQM-7aiU7-p9CPQ}{py2z8VaZQiuH-bRSoZI9NA}{local}{local[44]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,781][WARN ][org.elasticsearch.discovery.zen.publish] timed out waiting for all nodes to process published state [0] (timeout [5ms], pending nodes: [{wYMDeGwBRPi1pyPL-3zt1g}{Cu2sA_rXQ2i30Nq1msX53g}{local}{local[46]}, {RZthHqPdSC2r9O7pt7FXvQ}{YmZRurVLRla7m0PETK88eQ}{local}{local[40]}, {FYWmCq_mRoiRcCblp44tRg}{qOvPAhWaSU2WbcvFABD8iQ}{local}{local[42]}, {tpKQdZYCQQ6gR0tHWvc4GQ}{8T_eq9mhRp-k3iluOCH3pQ}{local}{local[43]}, {ikG5gPACQM-7aiU7-p9CPQ}{py2z8VaZQiuH-bRSoZI9NA}{local}{local[44]}, {CUpCgVguSXSFx47uXie6ww}{EDWFBKXyQ7mdztDBsaSPkQ}{local}{local[39]}])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,783][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {tpKQdZYCQQ6gR0tHWvc4GQ}{8T_eq9mhRp-k3iluOCH3pQ}{local}{local[43]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[43]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,783][TRACE][org.elasticsearch.discovery.zen.publish] master node {tpKQdZYCQQ6gR0tHWvc4GQ}{8T_eq9mhRp-k3iluOCH3pQ}{local}{local[43]} failed to ack cluster state version [0]. processing ... (current pending [2], needed [0])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,784][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {FYWmCq_mRoiRcCblp44tRg}{qOvPAhWaSU2WbcvFABD8iQ}{local}{local[42]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[42]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,784][TRACE][org.elasticsearch.discovery.zen.publish] master node {FYWmCq_mRoiRcCblp44tRg}{qOvPAhWaSU2WbcvFABD8iQ}{local}{local[42]} failed to ack cluster state version [0]. processing ... (current pending [1], needed [0])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,785][DEBUG][org.elasticsearch.discovery.zen.publish] failed to commit cluster state (uuid [O24L6P8sQya9cEoA4Pe1WQ], version [0]) to {ikG5gPACQM-7aiU7-p9CPQ}{py2z8VaZQiuH-bRSoZI9NA}{local}{local[44]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[44]][internal:discovery/zen/publish/commit] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,794][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [0], uuid [O24L6P8sQya9cEoA4Pe1WQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,794][WARN ][org.elasticsearch.test.transport] Transport response handler not found of id [11]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,794][DEBUG][org.elasticsearch.discovery.zen.publish] failed to commit cluster state (uuid [O24L6P8sQya9cEoA4Pe1WQ], version [0]) to {CUpCgVguSXSFx47uXie6ww}{EDWFBKXyQ7mdztDBsaSPkQ}{local}{local[39]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[39]][internal:discovery/zen/publish/commit] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,793][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [0], uuid [O24L6P8sQya9cEoA4Pe1WQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,795][WARN ][org.elasticsearch.test.transport] Transport response handler not found of id [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,795][DEBUG][org.elasticsearch.discovery.zen.publish] node {wYMDeGwBRPi1pyPL-3zt1g}{Cu2sA_rXQ2i30Nq1msX53g}{local}{local[46]} responded to cluster state commit [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,794][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [0], uuid [O24L6P8sQya9cEoA4Pe1WQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,795][DEBUG][org.elasticsearch.discovery.zen.publish] node {RZthHqPdSC2r9O7pt7FXvQ}{YmZRurVLRla7m0PETK88eQ}{local}{local[40]} responded to cluster state commit [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201655,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,802][INFO ][org.elasticsearch.test.transport] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,810][INFO ][org.elasticsearch.test.transport] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,836][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,837][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [IEd5qxq5RzKdhVmTh-TrMA], version [1]) to [{x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,838][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [IEd5qxq5RzKdhVmTh-TrMA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,840][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [3dmAe77vRCuQnnWQZk_e0w], diff size [133]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,841][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [3dmAe77vRCuQnnWQZk_e0w], version [2]) to [{x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,841][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [3dmAe77vRCuQnnWQZk_e0w]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,843][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [Fjcd7zOWT7CFyaU2g2meWg], diff size [91]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,843][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Fjcd7zOWT7CFyaU2g2meWg], version [3]) to [{x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,843][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [Fjcd7zOWT7CFyaU2g2meWg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,844][INFO ][org.elasticsearch.test.transport] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,848][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [MHw6p8T7RBCu_ePgMSGJDA], diff size [262]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,849][TRACE][org.elasticsearch.discovery.zen.publish] master node {x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]} acked cluster state version [4]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,849][TRACE][org.elasticsearch.discovery.zen.publish] committing version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,849][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [MHw6p8T7RBCu_ePgMSGJDA], version [4]) to [{x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,850][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [MHw6p8T7RBCu_ePgMSGJDA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,851][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [257]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,851][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [MHw6p8T7RBCu_ePgMSGJDA], version [4]) to [{eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,852][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [MHw6p8T7RBCu_ePgMSGJDA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,854][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [H-5zxJjNQiGgLJU9XvUpmQ], diff size [101]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,854][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [H-5zxJjNQiGgLJU9XvUpmQ], version [5]) to [{x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,854][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [H-5zxJjNQiGgLJU9XvUpmQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,871][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [H-5zxJjNQiGgLJU9XvUpmQ], diff size [101]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,872][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [H-5zxJjNQiGgLJU9XvUpmQ], version [5]) to [{eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,875][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [H-5zxJjNQiGgLJU9XvUpmQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,876][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]} reason RemoteTransportException[[][local[47]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid H-5zxJjNQiGgLJU9XvUpmQ got version 6 and uuid vDkZ1mAvQ-KJ6Lxba9SomQ];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid H-5zxJjNQiGgLJU9XvUpmQ got version 6 and uuid vDkZ1mAvQ-KJ6Lxba9SomQ%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,877][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]} reason RemoteTransportException[[][local[47]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid H-5zxJjNQiGgLJU9XvUpmQ got version 6 and uuid vDkZ1mAvQ-KJ6Lxba9SomQ];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid H-5zxJjNQiGgLJU9XvUpmQ got version 6 and uuid vDkZ1mAvQ-KJ6Lxba9SomQ%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,878][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [266]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][TRACE][org.elasticsearch.discovery.zen.publish] master node {eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]} acked cluster state version [6]. processing ... (current pending [2], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [266]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][TRACE][org.elasticsearch.discovery.zen.publish] master node {x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]} acked cluster state version [6]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [I9svvf62QB2K2ouV8AdsRQ], version [6]) to [{eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [I9svvf62QB2K2ouV8AdsRQ], version [6]) to [{x60SL2DpSaivKQYGuUm0JA}{1WamxjFBTeGHwEWrPlv-2A}{local}{local[48]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [I9svvf62QB2K2ouV8AdsRQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,879][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [I9svvf62QB2K2ouV8AdsRQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,880][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,884][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]} reason RemoteTransportException[[][local[48]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 6 with uuid I9svvf62QB2K2ouV8AdsRQ got version 7 and uuid jJGWbP-TS_aAbagqGgVRUQ];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 6 with uuid I9svvf62QB2K2ouV8AdsRQ got version 7 and uuid jJGWbP-TS_aAbagqGgVRUQ%0D%0A[2016-09-16T11:33:21,884][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {ysIW4T4HS9-d4zaPxSoRJA}{L5GzgF_gQKmyZzu5JL_QAA}{local}{local[47]} reason RemoteTransportException[[][local[48]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,885][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [264]%0D%0A[2016-09-16T11:33:21,885][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [264]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,885][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [3WKZHtqgTeOXAlw48YKYAQ], version [7]) to [{eF-mUyKuTZCB7GQNErsHCw}{rLlMZof-S16PBAFj0rNJ0A}{local}{local[49]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,885][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [3WKZHtqgTeOXAlw48YKYAQ], version [7]) to [{ysIW4T4HS9-d4zaPxSoRJA}{L5GzgF_gQKmyZzu5JL_QAA}{local}{local[47]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,885][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [3WKZHtqgTeOXAlw48YKYAQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,885][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [3WKZHtqgTeOXAlw48YKYAQ]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201799,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,891][INFO ][org.elasticsearch.test.transport] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptances of any master when having no master%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another master%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from a different master than the current one, rejecting (received null, current null)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][INFO ][org.elasticsearch.discovery.zen.publish] --> test state from the current master is accepted%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another cluster name%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][WARN ][org.elasticsearch.discovery.zen.publish] received cluster state from [null] which is also master but with a different cluster name [Cluster [RWjXdhUFey]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of a cluster state with wrong local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,908][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from [null] and not part of the cluster, should not happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,909][INFO ][org.elasticsearch.test.transport] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,912][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from [null] and not part of the cluster, should not happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,912][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptance of an old cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,912][DEBUG][org.elasticsearch.discovery.zen.publish] received a cluster state that is not newer than the current one, ignoring (received 0, current 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:21,913][WARN ][org.elasticsearch.discovery.zen.publish] rejecting cluster state version [0] uuid [bhwGqOzLQrWT17jf3xdTAA] received from [master]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474047201887,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
  "startTimestamp": 1474047200636,
  "executionTime": 1280
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "displayName": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "children": [
    {
     "id": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "displayName": "testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "methodName": "testConcurrentAccess",
     "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047201922
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
  "startTimestamp": 1474047201965,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
  "startTimestamp": 1474047201922,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "children": [
    {
     "id": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanUnigramOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testNoFlags",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202004
 }
]

[
 "TEST_STARTED",
 "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474047202028,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474047202040,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474047202061,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474047202073,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
  "startTimestamp": 1474047202004,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.PathTests",
   "displayName": "org.elasticsearch.search.aggregations.support.PathTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.PathTests",
   "children": [
    {
     "id": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testValidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testInvalidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202094
 }
]

[
 "TEST_STARTED",
 "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1474047202137,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1474047202204,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.PathTests",
  "startTimestamp": 1474047202094,
  "executionTime": 115
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "children": [
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202216
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,245][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,246][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,247][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,248][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,248][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,249][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test][2], [test1][0], [test][0], [test1][1], [test][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474047202238,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,255][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,256][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,256][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,258][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1], [test1][2], [test1][0], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,258][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,263][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,264][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474047202249,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,279][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,279][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,281][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,282][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, assign%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,282][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the primaries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,289][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] kill one node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,291][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,294][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:22,295][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474047202272,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
  "startTimestamp": 1474047202216,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "displayName": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "children": [
    {
     "id": "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
     "displayName": "test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
     "methodName": "test",
     "className": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202304
 }
]

[
 "TEST_STARTED",
 "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
  "startTimestamp": 1474047202375,
  "executionTime": 132
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
  "startTimestamp": 1474047202304,
  "executionTime": 205
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ExtensionPointTests",
   "displayName": "org.elasticsearch.common.util.ExtensionPointTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ExtensionPointTests",
   "children": [
    {
     "id": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "displayName": "testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "methodName": "testClassSet",
     "className": "org.elasticsearch.common.util.ExtensionPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202515
 }
]

[
 "TEST_STARTED",
 "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
  "startTimestamp": 1474047202539,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ExtensionPointTests",
  "startTimestamp": 1474047202515,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.store.IndicesStoreTests",
   "displayName": "org.elasticsearch.indices.store.IndicesStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.store.IndicesStoreTests",
   "children": [
    {
     "id": "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNoShardRouting",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNodeVersion",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNoShardStarted",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedShardExistsLocally",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNodeNotInList",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedRelocatingNode",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202557
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:22,607][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{T3nxQ9G4R5q75TCEz3ev2g}{local}{local[347]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474047202597,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:22,616][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JjrpkH8YSqy49iJmOhcSbA}{local}{local[348]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474047202610,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:22,641][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Sp3o5GeETgOCQmwImCPJEA}{local}{local[349]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474047202623,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:22,652][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fn7bkZGEQimnKnaAfJGPIQ}{local}{local[350]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474047202646,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:22,660][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{r1hbeY0fR6yd1KvA3WbKbg}{local}{local[351]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474047202654,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:22,685][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pnFRW8JxSzKcMoRda_rf1Q}{local}{local[352]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474047202663,
  "executionTime": 25
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.store.IndicesStoreTests",
  "startTimestamp": 1474047202557,
  "executionTime": 132
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testNullGeoPointIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047202720
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474047202774,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474047203026,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474047203033,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
  "startTimestamp": 1474047202720,
  "executionTime": 322
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testNegativeIsError",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefaultDefaultsToAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testZero",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testLargerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testSmallerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047203048
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,190][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,215][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,216][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,219][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,220][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,220][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,532][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,532][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,532][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,594][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{FvCxN7DrR_GRAkNYLJi-hw}{vv2gMd-wRCy3m8cRGDPDHg}{local}{local[52]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,595][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,687][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,707][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,829][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:23,870][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/zW6mZo46SdqfORYMQXdWtw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:25,376][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047203081,
  "executionTime": 3108
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:26,199][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testNegativeIsError]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047206189,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:26,214][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:26,331][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:26,540][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefaultDefaultsToAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047206200,
  "executionTime": 431
 }
]

[
 "TEST_STARTED",
 "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:26,641][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:26,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,021][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testZero]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047206631,
  "executionTime": 447
 }
]

[
 "TEST_STARTED",
 "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,088][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,448][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testLargerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047207079,
  "executionTime": 415
 }
]

[
 "TEST_STARTED",
 "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,750][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testSmallerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047207494,
  "executionTime": 284
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,778][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,779][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,779][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:27,781][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1474047203048,
  "executionTime": 4743
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "children": [
    {
     "id": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testCancelCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testAllocateCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testMoveShardCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047207800
 }
]

[
 "TEST_STARTED",
 "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,907][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,908][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,909][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,910][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary shard with accept_data_loss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,941][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,941][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,941][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the relocation allocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,944][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary being replicated, make sure it fails%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,944][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,944][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,944][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel allocation of the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,946][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,948][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,949][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,950][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary allocation (with allow_primary set to true)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,954][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474047207889,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,971][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-existent node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-data node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing shard, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing index, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating stale primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,973][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on the primary shard node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,974][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:27,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verify that we fail when there are no unassigned shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474047207955,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474047207975,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474047208003,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:28,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:28,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:28,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:28,015][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:28,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:28,016][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474047208006,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
  "startTimestamp": 1474047207800,
  "executionTime": 218
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208027
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
  "startTimestamp": 1474047208044,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
  "startTimestamp": 1474047208027,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208061
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1474047208080,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1474047208061,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
   "displayName": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "children": [
    {
     "id": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "displayName": "testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "methodName": "testEnumIds",
     "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208090
 }
]

[
 "TEST_STARTED",
 "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
  "startTimestamp": 1474047208107,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
  "startTimestamp": 1474047208090,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.NodeEnvironmentTests",
   "displayName": "org.elasticsearch.env.NodeEnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.NodeEnvironmentTests",
   "children": [
    {
     "id": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testSegmentInfosTracing",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSingleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testDeleteSafe",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockMultipleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testResolveIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testAvailableIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testStressShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testCustomDataPaths",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testPersistentNodeId",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testWhetherClusterFolderShouldBeUsed",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSillySettings",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208155
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,226][INFO ][org.elasticsearch.env    ] [nM1XdA9] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,227][INFO ][org.elasticsearch.env    ] [nM1XdA9] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,250][INFO ][org.elasticsearch.env    ] [nM1XdA9] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,250][INFO ][org.elasticsearch.env    ] [nM1XdA9] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208187,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,391][INFO ][org.elasticsearch.env    ] [EaGRP_g] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,391][INFO ][org.elasticsearch.env    ] [EaGRP_g] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208257,
  "executionTime": 256
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,668][INFO ][org.elasticsearch.env    ] [SuSrjSr] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,668][INFO ][org.elasticsearch.env    ] [SuSrjSr] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,715][INFO ][org.elasticsearch.env    ] [_0v5_oC] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,715][INFO ][org.elasticsearch.env    ] [_0v5_oC] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208513,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,812][INFO ][org.elasticsearch.env    ] [TEiXtih] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,813][INFO ][org.elasticsearch.env    ] [TEiXtih] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208722,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,906][INFO ][org.elasticsearch.env    ] [U-8Cg4S] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:28,906][INFO ][org.elasticsearch.env    ] [U-8Cg4S] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208836,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:29,088][INFO ][org.elasticsearch.env    ] [ebMuDAm] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:29,088][INFO ][org.elasticsearch.env    ] [ebMuDAm] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047208920,
  "executionTime": 893
 }
]

[
 "TEST_STARTED",
 "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:29,968][INFO ][org.elasticsearch.env    ] [uWI8Wjn] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:29,968][INFO ][org.elasticsearch.env    ] [uWI8Wjn] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047209814,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,163][INFO ][org.elasticsearch.env    ] [xVbYYgk] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,163][INFO ][org.elasticsearch.env    ] [xVbYYgk] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047210008,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,321][INFO ][org.elasticsearch.env    ] [XDQewWk] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,321][INFO ][org.elasticsearch.env    ] [XDQewWk] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,375][INFO ][org.elasticsearch.env    ] [XDQewWk] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,375][INFO ][org.elasticsearch.env    ] [XDQewWk] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,510][INFO ][org.elasticsearch.env    ] [RA6RGFJ] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,510][INFO ][org.elasticsearch.env    ] [RA6RGFJ] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047210186,
  "executionTime": 333
 }
]

[
 "TEST_STARTED",
 "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,568][INFO ][org.elasticsearch.env    ] [dJF5v_s] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,568][INFO ][org.elasticsearch.env    ] [dJF5v_s] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,604][INFO ][org.elasticsearch.env    ] [p1mH4p7] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,605][INFO ][org.elasticsearch.env    ] [p1mH4p7] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,667][INFO ][org.elasticsearch.env    ] [i9MdyA2] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:30,668][INFO ][org.elasticsearch.env    ] [i9MdyA2] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047210520,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474047210672,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.NodeEnvironmentTests",
  "startTimestamp": 1474047208155,
  "executionTime": 2808
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineTests",
   "children": [
    {
     "id": "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSycnedFlushSurvivesEngineRestart",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogReplayWithFailure",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testDocStats",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningCreateExistsException",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningIndexConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogRecoveryDoesNotReplayIntoTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegmentsStatsIncludingFileSizes",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testAppendConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSkipTranslogReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningReplicaConflict2",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testMissingTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testBasicCreatedFlag",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningDeleteConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningReplicaConflict1",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testForceMerge",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningNewIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCreatedFlagAfterFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCurrentTranslogIDisCommitted",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexWriterInfoStream",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testConcurrentGetAndFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testEnableGcDeletes",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegmentsWithMergeFlag",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSycnedFlushVanishesOnReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningIndexConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexSearcherWrapper",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningDeleteConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRenewSyncFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRecoverFromForeignTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexWriterIFDInfoStream",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testForceMergeAndClose",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testFlushIsDisabledDuringTranslogRecovery",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningIndexConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testUpgradeOldIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogMultipleOperationsSameDocument",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSyncedFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testDoubleDelivery",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningIndexConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningNewIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testShardNotAvailableExceptionWhenEngineClosedConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningCreateExistsExceptionWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningNewCreate",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047211027
 }
]

[
 "TEST_STARTED",
 "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047211091,
  "executionTime": 2272
 }
]

[
 "TEST_STARTED",
 "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047213363,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047213523,
  "executionTime": 273
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047213796,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047213889,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047214124,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047214182,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047214234,
  "executionTime": 391
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047214625,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047214733,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047214844,
  "executionTime": 1900
 }
]

[
 "TEST_STARTED",
 "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047216757,
  "executionTime": 409
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047217166,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047217259,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047217376,
  "executionTime": 276
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047217652,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047217766,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047217821,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047218010,
  "executionTime": 2373
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047220383,
  "executionTime": 218
 }
]

[
 "TEST_STARTED",
 "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047220601,
  "executionTime": 429
 }
]

[
 "TEST_STARTED",
 "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047221030,
  "executionTime": 333
 }
]

[
 "TEST_STARTED",
 "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,486][TRACE][org.elasticsearch.index.engine]  [index][1] acquired flush lock immediately%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:41,486 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,497][TRACE][org.elasticsearch.index.translog]  [index][1] current translog set to [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:41,498 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,498][TRACE][org.elasticsearch.index.engine]  [index][1] starting commit for flush; commitTranslog=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:41,498 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,499][TRACE][org.elasticsearch.index.engine]  [index][1] committing writer with translog id [3]  and sync id [null] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:41,499 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,499][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,499][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: enter lock%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,499][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: now prepare%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,499][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: prepareCommit: flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,500][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW:   index before flush _0(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,500][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DW: startFullFlush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,500][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DW: anyChanges? numDocsInRam=1 deletes=false hasTickets:false pendingChangesInFullFlush: false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,500][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWFC: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_1, aborted=false, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 4 ]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,500][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: flush postings as segment _1 numDocs=1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,500][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: 0 msec to write norms%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,501][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: 0 msec to write docValues%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,501][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: 0 msec to write points%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,501][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: 0 msec to finish stored fields%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,505][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: 4 msec to write postings and finish vectors%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,507][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: 1 msec to write fieldInfos%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,507][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: new segment has 0 deleted docs%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,507][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: new segment has no vectors; norms; docValues; prox; freqs%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,507][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: flushedFiles=[_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,507][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: flushed codec=Asserting(Lucene62)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,509][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: flushed: segment=_1 ramUsed=0.087 MB newFlushedSize=0.001 MB docs/MB=771.012%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,511][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: create compound file%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,516][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DWPT: flush time 12.812839 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,518][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DW: publishFlushedSegment seg-private updates=null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,518][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: publishFlushedSegment%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,518][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: publish sets newSegment delGen=6 seg=_1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,518][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.dvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.tip\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.nvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.doc\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.tim\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.dvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.pos\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.fdx\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.nvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.fnm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.fdt\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: delete [_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,519][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.dvm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.tip%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.nvd%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.doc%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.tim%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.dvd%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.pos%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fdx%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.nvm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fnm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fdt%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,520][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: apply all deletes during flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,521][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: now apply all deletes for all segments maxDoc=2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,521][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] BD: applyDeletes: open segment readers took 0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,521][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] BD: applyDeletes: no segments; skipping%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,521][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] BD: prune sis=segments_2: _0(6.2.0):c1 _1(6.2.0):c1 minGen=3 packetCount=0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,521][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DW: TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] finishFullFlush success=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,521][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: %0Adir=store(MockDirectoryWrapper(RAMDirectory@b7ab60e lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@22f52c5c))%0Aindex=_0(6.2.0):c1 _1(6.2.0):c1%0Aversion=6.2.0%0Aanalyzer=org.apache.lucene.analysis.MockAnalyzer%0AramBufferSizeMB=256.0%0AmaxBufferedDocs=-1%0AmaxBufferedDeleteTerms=-1%0AmergedSegmentWarmer=null%0AdelPolicy=org.apache.lucene.index.SnapshotDeletionPolicy%0Acommit=null%0AopenMode=CREATE%0Asimilarity=org.apache.lucene.search.similarities.ClassicSimilarity%0AmergeScheduler=EngineMergeScheduler: maxThreadCount=2, maxMergeCount=7, ioThrottle=true%0Acodec=Asserting(Lucene62)%0AinfoStream=org.elasticsearch.common.lucene.LoggerInfoStream%0AmergePolicy=ElasticsearchMergePolicy([AlcoholicMergePolicy: minMergeSize=0, mergeFactor=10, maxMergeSize=333616452, maxMergeSizeForForcedMerge=9223372036854775807, calibrateSizeByDeletes=true, maxMergeDocs=2147483647, maxCFSSegmentSizeMB=8.796093022207999E12, noCFSRatio=0.1])%0AindexerThreadPool=org.apache.lucene.index.DocumentsWriterPerThreadPool@57910a02%0AreaderPooling=false%0AperThreadHardLimitMB=1945%0AuseCompoundFile=true%0AcommitOnClose=false%0AindexSort=null%0Awriter=org.apache.lucene.index.IndexWriter@4d0e9567%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: MMapDirectory.UNMAP_SUPPORTED=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] LMP: findMerges: 2 segments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] LMP: seg=_0(6.2.0):c1 level=3.3332455 size=0.002 MB%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] LMP: seg=_1(6.2.0):c1 level=3.3332455 size=0.002 MB%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] LMP:   level 2.5832455 to 3.3332455: 2 segments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] MS: now merge%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] MS:   index: _0(6.2.0):c1 _1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] MS:   no more merges pending; now return%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,522][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: startCommit(): start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,523][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: startCommit index=_0(6.2.0):c1 _1(6.2.0):c1 changeCount=11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: startCommit: wrote pending segments file \"pending_segments_3\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: done all syncs: [_1.cfs, _0.cfe, _0.si, _1.cfe, _1.si, _0.cfs]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: pendingCommit != null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: done writing segments file \"segments_3\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: deleteCommits: now decRef commit \"segments_2\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: delete [segments_2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,524][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file segments_2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: took 25.7 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: commit: done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine]  [index][1] finished commit for flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: nrtIsCurrent: infoVersion matches: false; DW changes: false; BD changes: false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: flush at getReader%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,525][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DW: startFullFlush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,526][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: apply all deletes during flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,526][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: now apply all deletes for all segments maxDoc=2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,526][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] BD: applyDeletes: open segment readers took 0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,526][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] BD: applyDeletes: no segments; skipping%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,526][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] BD: prune sis=segments_3: _0(6.2.0):c1 _1(6.2.0):c1 minGen=3 packetCount=0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,527][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: incRefDeleter for NRT reader version=11 segments=_0(6.2.0):c1 _1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,527][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: return reader version=11 reader=StandardDirectoryReader(segments_3:11:nrt _0(6.2.0):c1 _1(6.2.0):c1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,528][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] DW: TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] finishFullFlush success=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,528][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: getReader took 3 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,528][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,528][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[229C635BFFC33CB2] IW: decRefDeleter for NRT reader version=7 segments=_0(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:41,528][TRACE][org.elasticsearch.index.translog]  [index][1] delete translog file - not referenced and not current anymore C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.engine.InternalEngineTests_229C635BFFC33CB2-001\\translog-primary-023\\translog-2.tlog%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047221363,
  "executionTime": 203
 }
]

[
 "TEST_STARTED",
 "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047221566,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047221697,
  "executionTime": 396
 }
]

[
 "TEST_STARTED",
 "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047222093,
  "executionTime": 1315
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047223408,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047223642,
  "executionTime": 472
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047224114,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047224309,
  "executionTime": 647
 }
]

[
 "TEST_STARTED",
 "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047224956,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047225188,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047225356,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047225542,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047225674,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047225885,
  "executionTime": 761
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047226646,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:46,999 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:46,999][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:47,000 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:46,999][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:47,000 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,000][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: 1 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-17 06:18:47,001 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,000][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.dvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.tip\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.nvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.doc\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.tim\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.dvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1_Asserting_0.pos\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.fdx\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,002][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.nvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,003][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.fnm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,003][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: will delete new file \"_1.fdt\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,004][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: delete [_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,021][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,021][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: deleteCommits: now decRef commit \"segments_2\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,021][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: delete [segments_2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,021][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,021][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,022][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[229C635BFFC33CB2] IFD: delete []%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047226841,
  "executionTime": 254
 }
]

[
 "TEST_STARTED",
 "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047227095,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,327][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,328][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,328][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,370][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,370][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,380][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,415][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,416][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,444][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,463][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,463][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,548][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,549][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,672][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,672][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,733][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,733][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,733][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,735][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,735][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,744][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,744][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,768][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,813][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,814][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,814][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,814][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,816][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,817][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,897][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,898][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,920][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,930][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,943][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:47,959][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,015][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,020][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,043][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,062][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,062][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,063][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,083][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:48,340][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047227255,
  "executionTime": 1387
 }
]

[
 "TEST_STARTED",
 "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047228642,
  "executionTime": 580
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047229222,
  "executionTime": 674
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047229896,
  "executionTime": 309
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047230206,
  "executionTime": 2970
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047233176,
  "executionTime": 396
 }
]

[
 "TEST_STARTED",
 "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047233572,
  "executionTime": 383
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047233955,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047234166,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047234257,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:54,465][INFO ][org.elasticsearch.index.engine]  [index][1] try with optimize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:18:54,469][INFO ][org.elasticsearch.index.engine]  [index][1] exception caught: %0D%0Aorg.elasticsearch.index.engine.EngineClosedException: CurrentState[CLOSED] Closed%0A%09at org.elasticsearch.index.engine.Engine.ensureOpen(Engine.java:380) ~[main/:?]%0A%09at org.elasticsearch.index.engine.InternalEngine.forceMerge(InternalEngine.java:873) ~[main/:?]%0A%09at org.elasticsearch.index.engine.InternalEngineTests$7.run(InternalEngineTests.java:2087) ~[test/:?]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047234351,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047234485,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047234609,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474047234699,
  "executionTime": 141
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineTests",
  "startTimestamp": 1474047211027,
  "executionTime": 24529
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testFiltersSortedByKey",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047235562
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:55,591][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wGe5HStvR8eTjeuyFSbXYQ}{local}{local[362]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474047235616,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474047235651,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474047235666,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474047235668,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FiltersTests",
  "startTimestamp": 1474047235562,
  "executionTime": 113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "displayName": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "children": [
    {
     "id": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testShouldIgnoreNewClusterState",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    },
    {
     "id": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testFilterNonMasterPingResponse",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047235681
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:55,697][WARN ][org.elasticsearch.discovery.zen] received a cluster state from a different master than the current one, rejecting (received {a}{9eL1rTsmQzKoEn_i_-hdFg}{local}{local[364]}, current {b}{zW76ofXJSUyd9T4xKTnwng}{local}{local[365]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1474047235695,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1474047235699,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
  "startTimestamp": 1474047235681,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testPhraseMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047235740
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,768][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{j-ve4DtATkSZLcz7vryHvA}{local}{local[382]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,775][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,775][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,790][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,794][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,794][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,794][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,800][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,800][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,800][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,802][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,802][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,802][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,804][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,804][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,804][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,807][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,807][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,807][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,811][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,811][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,811][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:55,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [yMm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235763,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235816,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235824,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235831,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235835,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235850,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235853,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235927,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235930,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235933,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235936,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474047235939,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
  "startTimestamp": 1474047235740,
  "executionTime": 245
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "children": [
    {
     "id": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testClusterFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testIndexFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testConcurrentRecoveriesAfterShardsCannotRemainOnNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047235993
 }
]

[
 "TEST_STARTED",
 "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,054][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,055][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding four nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,056][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,057][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,058][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,058][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure shards are only allocated on tag1 with value1 and value2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1474047236045,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,074][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,078][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure shards are only allocated on tag1 with value1 and value2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> switch between value2 and value4, shards should be relocating%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,080][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> finish relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1474047236059,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,091][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,091][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0], [test2][1], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,091][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure all shards are started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,091][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> disable allocation for node1 and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move shards from node1 to node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,097][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> check that concurrent recoveries only allows 1 shard to move%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,097][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,098][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move second shard from node1 to node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,098][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1474047236083,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
  "startTimestamp": 1474047235993,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "children": [
    {
     "id": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testBreakOnCustomSeparator",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceEnd",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testFirstPosition",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceStart",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSingleSentences",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceMiddle",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236109
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474047236154,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474047236170,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474047236202,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474047236204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474047236206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474047236208,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
  "startTimestamp": 1474047236109,
  "executionTime": 103
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "children": [
    {
     "id": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "displayName": "testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "methodName": "testSimpleFailedNodeTest",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236219
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:56,240][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 4 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:56,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:56,243][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:56,243][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:56,243][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove 2 nodes where primaries are allocated, reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:56,249][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
  "startTimestamp": 1474047236233,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
  "startTimestamp": 1474047236219,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236259
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:56,274][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{e5-iz_06Re24eOe1abZEcA}{local}{local[397]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474047236301,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474047236389,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474047236392,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
  "startTimestamp": 1474047236259,
  "executionTime": 152
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236417
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
  "startTimestamp": 1474047236438,
  "executionTime": 48
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
  "startTimestamp": 1474047236417,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
   "displayName": "org.elasticsearch.monitor.fs.FsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.FsProbeTests",
   "children": [
    {
     "id": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testIoStats",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    },
    {
     "id": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testFsInfo",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236496
 }
]

[
 "TEST_STARTED",
 "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1474047236535,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:56,676][INFO ][org.elasticsearch.env    ] [ANd0I3m] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:56,680][INFO ][org.elasticsearch.env    ] [ANd0I3m] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1474047236574,
  "executionTime": 134
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
  "startTimestamp": 1474047236496,
  "executionTime": 229
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "displayName": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "children": [
    {
     "id": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "displayName": "testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "methodName": "testCompareParsingTokens",
     "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236731
 }
]

[
 "TEST_STARTED",
 "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
  "startTimestamp": 1474047236818,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
  "startTimestamp": 1474047236731,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineStoreTests",
   "displayName": "org.elasticsearch.ingest.PipelineStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineStoreTests",
   "children": [
    {
     "id": "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testPutWithErrorResponse",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testUpdatePipelines",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testCrud",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testPut(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testPut",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testValidateNoIngestInfo",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testGetPipelines",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testDelete",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236855
 }
]

[
 "TEST_STARTED",
 "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236897,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236904,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236910,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236912,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236914,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236954,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236957,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474047236961,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineStoreTests",
  "startTimestamp": 1474047236855,
  "executionTime": 111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "displayName": "testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "methodName": "testPorter2FilterFactory",
     "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "displayName": "testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "methodName": "testEnglishFilterFactory",
     "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236971
 }
]

[
 "TEST_STARTED",
 "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
  "startTimestamp": 1474047237047,
  "executionTime": 626
 }
]

[
 "TEST_STARTED",
 "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
  "startTimestamp": 1474047237673,
  "executionTime": 1108
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
  "startTimestamp": 1474047236971,
  "executionTime": 2030
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "children": [
    {
     "id": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObject",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingMixed",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testParsingContextFromDocument",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingBasic",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239009
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,033][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,055][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,055][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,059][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,061][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,061][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,214][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,214][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,215][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,216][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Nn_rHfTbT8WRjYTu5DbGtw}{4Xa62C5sSEisgqXFhN-EbQ}{local}{local[53]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,217][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,228][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,253][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239023,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,258][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239254,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,264][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,331][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,382][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239259,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,414][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239411,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,422][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,496][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239415,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,592][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239528,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,630][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239627,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,634][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testParsingContextFromDocument]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239631,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,638][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239635,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,692][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,705][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474047239639,
  "executionTime": 119
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,758][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,758][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,759][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:59,760][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
  "startTimestamp": 1474047239009,
  "executionTime": 757
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "displayName": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "children": [
    {
     "id": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testSingleValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testMultiValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239771
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1474047239801,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1474047239898,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
  "startTimestamp": 1474047239771,
  "executionTime": 160
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.NewPathForShardTests",
   "displayName": "org.elasticsearch.index.shard.NewPathForShardTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.NewPathForShardTests",
   "children": [
    {
     "id": "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
     "displayName": "testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
     "methodName": "testSelectNewPathForShard",
     "className": "org.elasticsearch.index.shard.NewPathForShardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239939
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:00,015][INFO ][org.elasticsearch.env    ] [PyZyCSp] using [2] data paths, mounts [[mocka, mockb]], net usable_space [0b], net total_space [0b], spins? [unknown], types [mock]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:00,015][INFO ][org.elasticsearch.env    ] [PyZyCSp] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
  "startTimestamp": 1474047239973,
  "executionTime": 51
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.NewPathForShardTests",
  "startTimestamp": 1474047239939,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "children": [
    {
     "id": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllExcluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testTwoPhaseMinScore",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllIncluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047240043
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474047240805,
  "executionTime": 366
 }
]

[
 "TEST_STARTED",
 "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474047241171,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474047241328,
  "executionTime": 95
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
  "startTimestamp": 1474047240043,
  "executionTime": 1418
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "displayName": "testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "methodName": "testRandomDecisions",
     "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047241467
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,528][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,530][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,534][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,536][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[INDEX_0][5], [INDEX_0][7], [INDEX_0][2], [INDEX_0][9], [INDEX_0][8], [INDEX_0][0], [INDEX_1][4], [INDEX_1][1], [INDEX_0][10], [INDEX_0][13]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,536][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Fill up nodes such that every shard can be allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now say YES to everything%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[INDEX_0][1], [INDEX_0][13], [INDEX_0][5], [INDEX_0][3], [INDEX_0][2], [INDEX_0][8], [INDEX_0][7], [INDEX_0][4], [INDEX_0][6], [INDEX_0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:01,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Done Balancing after [1] iterations%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
  "startTimestamp": 1474047241521,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
  "startTimestamp": 1474047241467,
  "executionTime": 113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PriorityComparatorTests",
   "displayName": "org.elasticsearch.gateway.PriorityComparatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PriorityComparatorTests",
   "children": [
    {
     "id": "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPreferNewIndices",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    },
    {
     "id": "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPriorityComparatorSort",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPreferPriorityIndices",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047241586
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1474047241671,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1474047241686,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1474047241694,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PriorityComparatorTests",
  "startTimestamp": 1474047241586,
  "executionTime": 126
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.OriginalIndicesTests",
   "displayName": "org.elasticsearch.action.OriginalIndicesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.OriginalIndicesTests",
   "children": [
    {
     "id": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "displayName": "testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "methodName": "testOriginalIndicesSerialization",
     "className": "org.elasticsearch.action.OriginalIndicesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047241718
 }
]

[
 "TEST_STARTED",
 "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
  "startTimestamp": 1474047241868,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.OriginalIndicesTests",
  "startTimestamp": 1474047241718,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQueryInnerPrefixQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testInnerQueryEmptyException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047241881
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:02,157][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lrDZAjdmQ8SgyNAIZPUZPw}{local}{local[401]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:02,164][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:02,164][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242020,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:B7AABD3F3AA4B418]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.DisMaxQueryBuilderTests.testToQueryInnerPrefixQuery(DisMaxQueryBuilderTests.java:109)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242189,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242217,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242220,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242223,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242283,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242288,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242356,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242370,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242378,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242423,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:02,428][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:78]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474047242426,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
  "startTimestamp": 1474047241881,
  "executionTime": 556
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "displayName": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "children": [
    {
     "id": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatFieldMappingBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatCustomBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047242445
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:02,633][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:02,670][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:02,670][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:02,675][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:02,678][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:02,678][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,050][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,050][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,051][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,066][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Qks3fO8YQy6M8JW1Vwn-mQ}{ZZbTeSboRy2KE2GFd5CX2A}{local}{local[54]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,067][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,139][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [text] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,355][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[text][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,375][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text] [CustomBoostMappingTests#testBackCompatFieldMappingBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1474047242614,
  "executionTime": 839
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,460][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,556][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,558][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CustomBoostMappingTests#testBackCompatCustomBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1474047243453,
  "executionTime": 152
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,605][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,606][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,606][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:03,608][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
  "startTimestamp": 1474047242445,
  "executionTime": 1169
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "children": [
    {
     "id": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSameAllocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testExpectedSize",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSourceTargetRelocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testEqualsIgnoringVersion",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047243620
 }
]

[
 "TEST_STARTED",
 "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474047243661,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474047243663,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474047243687,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474047243688,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
  "startTimestamp": 1474047243620,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidTests",
   "displayName": "org.elasticsearch.index.mapper.UidTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidTests",
   "children": [
    {
     "id": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "displayName": "testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "methodName": "testCreateAndSplitId",
     "className": "org.elasticsearch.index.mapper.UidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047243697
 }
]

[
 "TEST_STARTED",
 "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
  "startTimestamp": 1474047243721,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidTests",
  "startTimestamp": 1474047243697,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047243731
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474047243776,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474047243779,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474047243781,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474047243783,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474047243785,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
  "startTimestamp": 1474047243731,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientTests",
   "children": [
    {
     "id": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testThatUsingAClosedClientThrowsAnException",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    },
    {
     "id": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testPluginNamedWriteablesRegistered",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047243800
 }
]

[
 "TEST_STARTED",
 "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:03,829][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:03,829][INFO ][org.elasticsearch.plugins] [_client_] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:03,865][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1474047243825,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:03,875][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:03,875][INFO ][org.elasticsearch.plugins] [_client_] loaded plugin [org.elasticsearch.client.transport.TransportClientTests$MockPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:03,892][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1474047243870,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientTests",
  "startTimestamp": 1474047243800,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexModuleTests",
   "displayName": "org.elasticsearch.index.IndexModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexModuleTests",
   "children": [
    {
     "id": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testOtherServiceBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddIndexOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testForceCustomQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupWithoutType",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupUnknownSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testWrapperIsBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testFrozen",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDefaultQueryCacheImplIsSelected",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSearchOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testRegisterIndexStore",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047243902
 }
]

[
 "TEST_STARTED",
 "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:03,926][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{B8J5cxznREKmIb9TR3RHtw}{local}{local[402]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:03,949][INFO ][org.elasticsearch.env    ] [B3JdEZd] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:03,949][INFO ][org.elasticsearch.env    ] [B3JdEZd] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047243914,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:03,971][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8Wv06XFmRuWFZVgRT2YE0Q}{local}{local[403]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:03,992][INFO ][org.elasticsearch.env    ] [8TYWaA0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:03,992][INFO ][org.elasticsearch.env    ] [8TYWaA0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047243961,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,013][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Z6KxwsfaTjGj7SqUfEoC_g}{local}{local[404]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,053][INFO ][org.elasticsearch.env    ] [Jftn9ZR] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,053][INFO ][org.elasticsearch.env    ] [Jftn9ZR] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244003,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,075][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MSmmaberQZKJFhnGpRCg-w}{local}{local[405]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,096][INFO ][org.elasticsearch.env    ] [0GlaZB5] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,096][INFO ][org.elasticsearch.env    ] [0GlaZB5] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244066,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,119][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{IlWprMq3R-C3AnJrx3Ol0w}{local}{local[406]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,139][INFO ][org.elasticsearch.env    ] [VsMNtuS] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,139][INFO ][org.elasticsearch.env    ] [VsMNtuS] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244104,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,176][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3Xy2-5zDSa-2oCmyL8Gu8g}{local}{local[407]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,240][INFO ][org.elasticsearch.env    ] [qk7C9jr] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,241][INFO ][org.elasticsearch.env    ] [qk7C9jr] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244150,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,305][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qV661El5TPWBbrjgC4im6A}{local}{local[408]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,325][INFO ][org.elasticsearch.env    ] [MET25IB] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,326][INFO ][org.elasticsearch.env    ] [MET25IB] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244274,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,371][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{mc-2d0mQQ2eKqjQtauMz0w}{local}{local[409]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,392][INFO ][org.elasticsearch.env    ] [N7YGrZ0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,392][INFO ][org.elasticsearch.env    ] [N7YGrZ0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244355,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,412][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hiTmU88fRjWI1-ghcKvRCg}{local}{local[410]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,432][INFO ][org.elasticsearch.env    ] [hKVrB9X] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,432][INFO ][org.elasticsearch.env    ] [hKVrB9X] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244400,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,456][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{C-6ziTDOR46y9MMfGjaShg}{local}{local[411]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,478][INFO ][org.elasticsearch.env    ] [4Xc0apg] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,478][INFO ][org.elasticsearch.env    ] [4Xc0apg] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244446,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,502][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UZNnupiGQHixh3i5NDNBiw}{local}{local[412]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,524][INFO ][org.elasticsearch.env    ] [CZGB1bc] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,524][INFO ][org.elasticsearch.env    ] [CZGB1bc] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244491,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,549][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cYrSH3CXSiy22wknklQsIQ}{local}{local[413]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,568][INFO ][org.elasticsearch.env    ] [RC21q2Q] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,569][INFO ][org.elasticsearch.env    ] [RC21q2Q] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244539,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,601][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ias6hpoESxWgcsu4wDhdyQ}{local}{local[414]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,625][INFO ][org.elasticsearch.env    ] [86Mknuq] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,625][INFO ][org.elasticsearch.env    ] [86Mknuq] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474047244586,
  "executionTime": 63
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexModuleTests",
  "startTimestamp": 1474047243902,
  "executionTime": 783
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "children": [
    {
     "id": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testParsingWithIndexSettings",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    },
    {
     "id": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testConditionsParsing",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047244691
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1474047244710,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1474047244714,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
  "startTimestamp": 1474047244691,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "children": [
    {
     "id": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testField",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testTypeNotCreatedOnIndexFailure",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIntroduceTwoFields",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testMixTemplateMultiFieldAndMappingReuse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTemplateOrder",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingsNotNeeded",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDefaultFloatingPointMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrict",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingOnEmptyString",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testReuseExistingMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIncremental",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testInnerDynamicMapping",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTrue",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testObject",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testComplexArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionEnabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionDefault",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047244728
 }
]

[
 "TEST_STARTED",
 "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,757][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,784][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,785][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,788][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,791][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,791][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,907][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,907][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,908][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,917][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{06vQf6tGS7SnrO8FI8rtIA}{5FuQlm7rSISptPrD21quOA}{local}{local[57]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,917][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,929][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:04,946][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,017][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,029][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047244748,
  "executionTime": 342
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,097][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,154][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,170][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testTypeNotCreatedOnIndexFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245090,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,203][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,254][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,265][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245197,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,300][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,370][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,382][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIntroduceTwoFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245294,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,416][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,473][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,498][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testMixTemplateMultiFieldAndMappingReuse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245407,
  "executionTime": 198
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,613][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,696][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Zmqp5n6zQXqJZGH_i1TCpQ] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,726][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTemplateOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245605,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,788][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,840][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,853][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingsNotNeeded]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245782,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,889][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,936][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:05,949][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrictWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047245883,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,087][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,105][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246001,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,143][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,195][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,210][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDefaultFloatingPointMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246137,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,245][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,302][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,316][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246238,
  "executionTime": 184
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,429][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,557][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/D6vKHHsxS9u3JoVC74uBXQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,579][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingOnEmptyString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246422,
  "executionTime": 198
 }
]

[
 "TEST_STARTED",
 "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,634][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,785][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testReuseExistingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246620,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,858][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,904][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,915][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalseWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246853,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:06,998][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,016][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIncremental]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047246943,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,164][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,209][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testInnerDynamicMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047247068,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,246][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,353][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,529][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTrue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047247240,
  "executionTime": 366
 }
]

[
 "TEST_STARTED",
 "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,613][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,676][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047247607,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,735][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,822][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testComplexArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047247727,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,852][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,894][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,907][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/k_4kwwtbROWhbZcLb1AMdQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,918][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/k_4kwwtbROWhbZcLb1AMdQ] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,929][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047247846,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:07,960][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,023][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/3Hea0jazT9aDDEq4YmEDyw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/3Hea0jazT9aDDEq4YmEDyw] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,060][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474047247954,
  "executionTime": 133
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,088][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,088][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,088][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:08,090][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
  "startTimestamp": 1474047244728,
  "executionTime": 3403
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "children": [
    {
     "id": "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testLinearMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testEWMAMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersAdditivePredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testSimpleMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testNumericValidation",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersMultiplicativePadPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testSimplePredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersMultiplicativePadModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltLinearPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testEWMAPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltLinearMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testLinearPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersAdditiveModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047248150
 }
]

[
 "TEST_STARTED",
 "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248184,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248193,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248196,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248199,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248200,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248202,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248208,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474047248212,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
  "startTimestamp": 1474047248150,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery1",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery2",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery3",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery4",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047248222
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,275][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{u-obFZ0bR92rS2u0V1-r-A}{local}{local[415]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,282][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,282][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,298][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,302][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,302][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,304][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,306][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,306][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,306][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,309][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,309][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,309][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,310][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,312][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,312][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,312][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,315][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:08,331][WARN ][org.elasticsearch.deprecation.index.mapper]  [hVTJL] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248270,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248333,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248338,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248341,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248344,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248346,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248359,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248361,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248365,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248367,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248380,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248385,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248388,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474047248391,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
  "startTimestamp": 1474047248222,
  "executionTime": 178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047248411
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474047248425,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474047248460,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474047248501,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474047248507,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
  "startTimestamp": 1474047248411,
  "executionTime": 115
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
   "displayName": "org.elasticsearch.common.settings.SettingsModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsModuleTests",
   "children": [
    {
     "id": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testOldMaxClauseCountSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testLoggerSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testMutuallyExclusiveScopes",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterShared",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testSpecialTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettingsFilter",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047248534
 }
]

[
 "TEST_STARTED",
 "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248562,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248576,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:34:08,601][WARN ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] %0D%0A*************************************************************************************%0D%0AFound index level settings on node level configuration.%0D%0A%0D%0ASince elasticsearch 5.x index level settings can NOT be set on the nodes %0D%0Aconfiguration like the elasticsearch.yaml, in system properties or command line %0D%0Aarguments.In order to upgrade all indices the settings must be updated via the %0D%0A/${index}/_settings API. Unless all settings are dynamic all indices must be closed %0D%0Ain order to apply the upgradeIndices created in the future should use index templates %0D%0Ato set default values. %0D%0A%0D%0APlease ensure all required values are updated on all indices by executing: %0D%0A%0D%0Acurl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{%0A  \"index.foo.bar\" : \"1\"%0A}'%0D%0A*************************************************************************************%0D%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248582,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248612,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248623,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248631,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248640,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248646,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474047248655,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
  "startTimestamp": 1474047248534,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
   "displayName": "org.elasticsearch.index.mapper.MapperServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MapperServiceTests",
   "children": [
    {
     "id": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameStartsWithIllegalDot",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameTooLong",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testIndexIntoDefaultMapping",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTotalFieldsExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testUnmappedFieldType",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypes",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMergeWithMap",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMappingDepthExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047248672
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,740][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,766][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,767][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,776][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,779][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,779][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,904][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,905][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,905][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,943][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{KNWzhJEEQGa1b8KNP2Dpvw}{pTzMm2ckSaC4YtTO3yj0-g}{local}{local[58]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,943][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,967][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,987][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test-index] [MapperServiceTests#testTypeNameStartsWithIllegalDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047248731,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:08,994][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text-index] [MapperServiceTests#testTypeNameTooLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047248988,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,001][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,058][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,083][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,159][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2] [MapperServiceTests#testIndexIntoDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047248995,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,217][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,264][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,276][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test1] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,281][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,327][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,340][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,341][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testTotalFieldsExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047249211,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,388][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,448][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [index] [unmapped_type:string] should be replaced with [unmapped_type:keyword]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,448][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index] [MapperServiceTests#testUnmappedFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047249381,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,536][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,553][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testTypes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047249482,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,589][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,640][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,652][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testMergeWithMap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047249582,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,684][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,748][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,794][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,807][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testMappingDepthExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474047249678,
  "executionTime": 173
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,851][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,851][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,852][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:34:09,853][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
  "startTimestamp": 1474047248672,
  "executionTime": 1186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "children": [
    {
     "id": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionEquality",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationToXContent",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionAndExplanation",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047249870
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474047249892,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474047249906,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474047249908,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474047249910,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
  "startTimestamp": 1474047249870,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "displayName": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "children": [
    {
     "id": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckParse",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCountOnLinux",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckRead",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCount",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047249926
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474047249955,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474047249958,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474047249960,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "APPEND_STDERR",
 {
  "chunk": "REPRODUCE WITH: gradle :core:test -Dtests.seed=229C635BFFC33CB2 -Dtests.class=org.elasticsearch.bootstrap.MaxMapCountCheckTests -Dtests.method=\"testGetMaxMapCount\" -Dtests.security.manager=true -Dtests.locale=sq-AL -Dtests.timezone=Australia/Eucla"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FAILURE",
 {
  "description": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "message": "\nArgument(s) are different! Wanted:\nlogger.warn(\n    <custom argument matcher>,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\nActual invocation has different arguments:\nlogger.warn(\n    org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck$$Lambda$1837/278285656@5cffcbe5,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck.getMaxMapCount(BootstrapCheck.java:437)\n",
  "trace": "Argument(s) are different! Wanted:\nlogger.warn(\n    <custom argument matcher>,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\nActual invocation has different arguments:\nlogger.warn(\n    org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck$$Lambda$1837/278285656@5cffcbe5,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck.getMaxMapCount(BootstrapCheck.java:437)\n\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:CA77F2BC34FB8889]:0)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "Argument(s) are different! Wanted:\nlogger.warn(\n    <custom argument matcher>,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\nActual invocation has different arguments:\nlogger.warn(\n    org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck$$Lambda$1837/278285656@5cffcbe5,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck.getMaxMapCount(BootstrapCheck.java:437)\n",
  "throwableClass": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
  "assertionViolation": true,
  "assumptionViolation": false
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474047249971,
  "executionTime": 81
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: leaving temporary files on disk at: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.bootstrap.MaxMapCountCheckTests_229C635BFFC33CB2-001"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: test params are: codec=Asserting(Lucene62): {}, docValues:{}, maxPointsInLeafNode=1245, maxMBSortInHeap=7.124561462713095, sim=RandomSimilarity(queryNorm=false,coord=no): {}, locale=sq-AL, timezone=Australia/Eucla"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: Windows 10 10.0 amd64/Oracle Corporation 1.8.0_102 (64-bit)/cpus=4,threads=1,free=412601280,total=530579456"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: All tests run in this JVM: [AbstractLifecycleRunnableTests, ChannelsTests, ESDirectoryReaderTests, DeflateCompressTests, OsProbeTests, TransportMultiSearchActionTests, TimestampFieldMapperTests, VersionTests, BalanceConfigurationTests, QueryParseContextTests, DiscoveryNodesTests, TransportBroadcastByNodeActionTests, GeoHashTests, BinaryRangeAggregatorTests, IndicesLifecycleListenerSingleNodeTests, YamlSettingsLoaderTests, NodeConnectionsServiceTests, RoutingFieldTypeTests, SettingsUpdaterTests, MultiMatchQueryBuilderTests, TransportAnalyzeActionTests, SimulatePipelineResponseTests, RestTableTests, RoutingIteratorTests, BytesRefHashTests, DefaultSearchContextTests, UpdateThreadPoolSettingsTests, QueryRescoreModeTests, ArrayUtilsTests, ParentFieldMapperTests, NumberFieldMapperTests, XContentMapValuesTests, TribeServiceTests, StatsBucketTests, ClusterModuleTests, ListTasksResponseTests, PathTrieTests, AllFieldMapperTests, TransportBulkActionTookTests, DocumentParserTests, CidrsTests, IdsQueryBuilderTests, ExternalFieldMapperTests, ScopedSettingsTests, BoolQueryBuilderTests, LuceneTests, IndexIdTests, LegacyShortFieldTypeTests, UpdateRequestTests, IngestStatsTests, NGramTokenizerFactoryTests, CamelCaseFieldNameTests, AvgTests, ValueCountTests, SliceBuilderTests, CopyOnWriteHashMapTests, ToAndFromJsonMetaDataTests, LaplaceModelTests, AutoExpandReplicasTests, OperationRoutingTests, AggregatorParsingTests, CompletionFieldTypeTests, TranslogTests, TermQueryBuilderTests, ElectMasterServiceTests, LongObjectHashMapTests, JavaMultiFieldMergeTests, DanglingIndicesStateTests, ESExceptionTests, MetaDataCreateIndexServiceTests, TTLFieldMapperTests, ParentIdQueryBuilderTests, VersionValueTests, ESPolicyTests, KeepFilterFactoryTests, NodeInfoStreamingTests, SearchStatsUnitTests, StringDistanceImplTests, SimilarityServiceTests, BytesRestResponseTests, FsBlobStoreTests, ChildrenTests, MaxBucketTests, EnableAllocationTests, IndicesOptionsTests, StatsTests, ProgressInputStreamTests, CompositeBytesReferenceTests, SearchPhaseControllerTests, NodeClientHeadersTests, ScoreFunctionBuilderTests, DiversifiedSamplerTests, CountDownTests, PreferPrimaryAllocationTests, ScriptExceptionTests, JvmInfoTests, JNANativesTests, GeoEncodingTests, ThreadPoolSerializationTests, HighlightBuilderTests, RatioValueTests, ShapeRelationTests, GeoDistanceRangeQueryTests, TransportModuleTests, ParentChildFieldDataTests, WildcardQueryBuilderTests, WritePipelineResponseTests, IndexTests, GeoShapeFieldMapperTests, AnalysisFactoryTests, NestedObjectMapperTests, LegacyIpFieldMapperTests, ThreadContextTests, CumulativeSumTests, ClusterStateToStringTests, ConcurrentRebalanceRoutingTests, ShardPathTests, IdFieldMapperTests, TransportWriteActionTests, ScoreModeTests, MaxTests, XContentTypeTests, TypeFieldMapperTests, GeohashCellQueryBuilderTests, UpdateNumberOfReplicasTests, RangeQueryBuilderTests, EnvelopeBuilderTests, CompletionSuggestionTests, UUIDTests, MetaDataIndexTemplateServiceTests, PublishClusterStateActionTests, BlockingClusterStatePublishResponseHandlerTests, CJKFilterFactoryTests, PathTests, RoutingNodesIntegrityTests, ReplaceMissingTests, ExtensionPointTests, IndicesStoreTests, GeoQueryContextTests, StringFieldMapperPositionIncrementGapTests, AllocationCommandsTests, IndexRequestBuilderTests, MurmurHash3Tests, DateTimeUnitTests, NodeEnvironmentTests, InternalEngineTests, FiltersTests, ZenDiscoveryUnitTests, MatchPhraseQueryBuilderTests, FilterRoutingTests, CustomSeparatorBreakIteratorTests, FailedNodeRoutingTests, PercentileRanksTests, MoreLikeThisQueryTests, FsProbeTests, JsonVsSmileTests, PipelineStoreTests, StemmerTokenFilterFactoryTests, CategoryContextMappingTests, HalfFloatFielddataTests, NewPathForShardTests, FunctionScoreEquivalenceTests, RandomAllocationDeciderTests, PriorityComparatorTests, OriginalIndicesTests, DisMaxQueryBuilderTests, CustomBoostMappingTests, ShardRoutingTests, UidTests, IndexFieldTypeTests, TransportClientTests, IndexModuleTests, RolloverRequestTests, DynamicMappingTests, MovAvgUnitTests, CommonTermsQueryBuilderTests, PhraseSuggestionBuilderTests, SettingsModuleTests, MapperServiceTests, ClusterAllocationExplanationTests, MaxMapCountCheckTests]"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
  "startTimestamp": 1474047249926,
  "executionTime": 128
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047250061
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474047250090,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474047250097,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474047250100,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
  "startTimestamp": 1474047250061,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047250121
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250168,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250185,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250195,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250200,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250204,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250208,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250212,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250214,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250225,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250230,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250234,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250267,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250271,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250275,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250279,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250281,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250284,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250287,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250290,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250292,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250297,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250299,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250302,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250305,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250317,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250319,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250325,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250327,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250330,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474047250333,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
  "startTimestamp": 1474047250121,
  "executionTime": 217
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testSingleRetryOnIgnore",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testFailedAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047250345
 }
]

[
 "TEST_STARTED",
 "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:10,396][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1474047250385,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:10,412][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:10,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:10,421][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1474047250400,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
  "startTimestamp": 1474047250345,
  "executionTime": 78
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataTests",
   "children": [
    {
     "id": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testSortableLongBitsToDoubles",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testDoublesToSortableLongBits",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047250431
 }
]

[
 "TEST_STARTED",
 "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1474047250482,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1474047250484,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
  "startTimestamp": 1474047250431,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "children": [
    {
     "id": "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
     "displayName": "testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
     "methodName": "testBackwardCompatibility",
     "className": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047250493
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
  "startTimestamp": 1474047250509,
  "executionTime": 1212
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
  "startTimestamp": 1474047250493,
  "executionTime": 1229
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestFilterChainTests",
   "displayName": "org.elasticsearch.rest.RestFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestFilterChainTests",
   "children": [
    {
     "id": "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
     "displayName": "testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
     "methodName": "testTooManyContinueProcessing",
     "className": "org.elasticsearch.rest.RestFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
     "displayName": "testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
     "methodName": "testRestFilters",
     "className": "org.elasticsearch.rest.RestFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047251730
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
  "startTimestamp": 1474047251774,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
  "startTimestamp": 1474047251786,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestFilterChainTests",
  "startTimestamp": 1474047251730,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestDocumentTests",
   "displayName": "org.elasticsearch.ingest.IngestDocumentTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestDocumentTests",
   "children": [
    {
     "id": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNonExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNested",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedRemoveFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNestedNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValues",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testIngestMetadataTimestamp",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListOfMaps",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNullListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueListElementConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds_fail",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueEmptyName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNullField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveInnerField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedHasFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetInvalidSourceField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueListAsPartOfPath",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueNoIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047251809
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251851,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251856,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251859,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251862,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251866,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251868,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251870,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251872,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251951,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251953,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251955,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251957,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251960,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251963,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251966,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251968,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251984,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251986,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251989,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251992,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251994,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047251998,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252000,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252013,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252017,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252019,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252021,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252023,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252025,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252028,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252030,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252033,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252034,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252037,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252039,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252041,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252044,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252046,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252051,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252054,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252056,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252057,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252060,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252062,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252064,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252066,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252068,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252070,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252072,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252074,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252076,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252078,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252080,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252082,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252087,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252089,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252091,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252093,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252096,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252098,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252100,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252102,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252104,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252106,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252108,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252110,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252112,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252116,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252120,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252123,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252125,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252127,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252129,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252137,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252139,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252142,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252144,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252146,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474047252148,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestDocumentTests",
  "startTimestamp": 1474047251809,
  "executionTime": 343
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.DocValueFormatTests",
   "displayName": "org.elasticsearch.search.DocValueFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.search.DocValueFormatTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIpFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIPParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252159
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252194,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252199,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252201,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252206,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252209,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474047252231,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.DocValueFormatTests",
  "startTimestamp": 1474047252159,
  "executionTime": 76
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
   "displayName": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "children": [
    {
     "id": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testMaxConcurrentSearchRequests",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd2",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testResponseErrorToXContent",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd4",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd3",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252242
 }
]

[
 "TEST_STARTED",
 "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474047252256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474047252259,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474047252268,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474047252270,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474047252273,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474047252281,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
  "startTimestamp": 1474047252242,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "children": [
    {
     "id": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDictionaryDecompounder",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    },
    {
     "id": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDefaultsCompoundAnalysis",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252291
 }
]

[
 "TEST_STARTED",
 "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1474047252332,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1474047252418,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
  "startTimestamp": 1474047252291,
  "executionTime": 153
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252456
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474047252489,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474047252495,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474047252497,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474047252499,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474047252501,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
  "startTimestamp": 1474047252456,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.RangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.RangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252511
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:12,533][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7yxeKcCWSX2_BcfHGdKt8Q}{local}{local[424]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1474047252552,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1474047252563,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1474047252565,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.RangeTests",
  "startTimestamp": 1474047252511,
  "executionTime": 208
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "children": [
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252726
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474047252742,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474047252745,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474047252747,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474047252749,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474047252751,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474047252754,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
  "startTimestamp": 1474047252726,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
   "displayName": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "children": [
    {
     "id": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTerms",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendNoTermQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testCrossFieldMultiMatchQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsWithFieldBoosts",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsUnsupportedValue",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047252819
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:12,856][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:12,900][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:12,900][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:12,904][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:12,910][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:12,910][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,072][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,073][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,073][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,074][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{vpuKhJpbRmi2uyrIAnIfhA}{Js5R_bsdRfe_LOLVvhXLPQ}{local}{local[59]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,075][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,169][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,189][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,412][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,435][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTerms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474047252847,
  "executionTime": 618
 }
]

[
 "TEST_STARTED",
 "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,474][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,551][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,597][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendNoTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474047253466,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,630][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,693][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,709][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testCrossFieldMultiMatchQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474047253624,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,765][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,830][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsWithFieldBoosts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474047253759,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,863][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,927][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsUnsupportedValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474047253856,
  "executionTime": 117
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,973][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,974][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,974][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:13,977][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
  "startTimestamp": 1474047252819,
  "executionTime": 1163
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
   "displayName": "org.elasticsearch.action.bulk.BulkRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkRequestTests",
   "children": [
    {
     "id": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk7",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk4",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk3",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk8",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkRequestWithRefresh",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk2",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testCannotAddNullRequests",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAllowExplicitIndex",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk10",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk1",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAddIterable",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk9",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk6",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkNoSource",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047253990
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254004,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254007,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254010,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254013,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254015,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254019,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254022,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254027,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254031,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254034,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254036,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254038,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254041,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474047254043,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
  "startTimestamp": 1474047253990,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.IndexStoreTests",
   "displayName": "org.elasticsearch.index.store.IndexStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.IndexStoreTests",
   "children": [
    {
     "id": "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
     "displayName": "testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
     "methodName": "testUpdateThrottleType",
     "className": "org.elasticsearch.index.store.IndexStoreTests",
     "children": []
    },
    {
     "id": "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
     "displayName": "testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
     "methodName": "testStoreDirectory",
     "className": "org.elasticsearch.index.store.IndexStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047254052
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
  "startTimestamp": 1474047254093,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
  "startTimestamp": 1474047254096,
  "executionTime": 28
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.IndexStoreTests",
  "startTimestamp": 1474047254052,
  "executionTime": 96
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeValueTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
   "children": [
    {
     "id": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testNoDotsAllowed",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnEmptyParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActualTera",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testEquality",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnUnknownUnits",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActual",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActualPeta",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnMissingUnits",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnEmptyNumberParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047254155
 }
]

[
 "TEST_STARTED",
 "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254184,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254186,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254188,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254197,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254199,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254201,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254203,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474047254206,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeValueTests",
  "startTimestamp": 1474047254155,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "displayName": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "methodName": null,
   "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "children": [
    {
     "id": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "displayName": "testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "methodName": "testSimple",
     "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047254286
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
  "startTimestamp": 1474047254308,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
  "startTimestamp": 1474047254286,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests",
   "displayName": "org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests",
   "methodName": null,
   "className": "org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests",
   "children": [
    {
     "id": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests)",
     "displayName": "testSimple(org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests)",
     "methodName": "testSimple",
     "className": "org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047254581
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests)",
  "startTimestamp": 1474047254618,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.analysis.miscellaneous.UniqueTokenFilterTests",
  "startTimestamp": 1474047254581,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
   "displayName": "org.apache.lucene.queries.BlendedTermQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.BlendedTermQueryTests",
   "children": [
    {
     "id": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testDismaxQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBooleanQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testExtractTerms",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047254925
 }
]

[
 "TEST_STARTED",
 "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474047254977,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474047255043,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474047255102,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474047255106,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
  "startTimestamp": 1474047254925,
  "executionTime": 185
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.MinDocQueryTests",
   "displayName": "org.apache.lucene.queries.MinDocQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.MinDocQueryTests",
   "children": [
    {
     "id": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testRandom",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047255203
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1474047255227,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1474047255393,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.MinDocQueryTests",
  "startTimestamp": 1474047255203,
  "executionTime": 194
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "children": [
    {
     "id": "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "displayName": "testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "methodName": "testSimpleFormat",
     "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
     "children": []
    },
    {
     "id": "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "displayName": "testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "methodName": "testHtmlEncodeFormat",
     "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047255478
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
  "startTimestamp": 1474047255514,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
  "startTimestamp": 1474047255550,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
  "startTimestamp": 1474047255478,
  "executionTime": 79
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "children": [
    {
     "id": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testNoMatchSize",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testCustomPostingsHighlighter",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047255813
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1474047255832,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1474047256010,
  "executionTime": 96
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
  "startTimestamp": 1474047255813,
  "executionTime": 301
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "children": [
    {
     "id": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFindChildTasks",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksDescriptions",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksToXContentGrouping",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testRunningTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testCancellingTasksThatDontSupportCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFailedTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskManagementOptOut",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskNodeFiltering",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskLevelActionFailures",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047256401
 }
]

[
 "TEST_STARTED",
 "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,585][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nRu9eKg6QQWZPkFhrLcgBw}{local}{local[425]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,596][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,607][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bJGvEV0kSwGvk6-elYwVZQ}{local}{local[426]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,609][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,625][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zJeQqRPoRV6uV4hVtuFltw}{local}{local[427]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,627][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,656][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sFGL70WYTomXmaFXcz09-g}{local}{local[428]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,657][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,667][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CjeweV4VQD61TC7zwqMiXQ}{local}{local[429]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,669][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,687][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OY3MSkJhTHankSw40K1G9Q}{local}{local[430]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,689][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,692][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{A-IBGpJXQjCR8UJJFNmc3w}{local}{local[431]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,693][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,697][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dequzeUfQrKRDpQnpTVdnw}{local}{local[432]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,698][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Lmsre9nRQxOHhGycH7lXhg}{local}{local[433]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,703][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,706][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tlWwaiW5RNCKxbYjCV9WPQ}{local}{local[434]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,707][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,708][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{nRu9eKg6QQWZPkFhrLcgBw}{local}{local[425]}}, removed {{node}{nRu9eKg6QQWZPkFhrLcgBw}{local}{local[425]},}, added {{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,709][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{bJGvEV0kSwGvk6-elYwVZQ}{local}{local[426]}}, removed {{node}{bJGvEV0kSwGvk6-elYwVZQ}{local}{local[426]},}, added {{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,709][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{zJeQqRPoRV6uV4hVtuFltw}{local}{local[427]}}, removed {{node}{zJeQqRPoRV6uV4hVtuFltw}{local}{local[427]},}, added {{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,710][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{sFGL70WYTomXmaFXcz09-g}{local}{local[428]}}, removed {{node}{sFGL70WYTomXmaFXcz09-g}{local}{local[428]},}, added {{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,710][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{CjeweV4VQD61TC7zwqMiXQ}{local}{local[429]}}, removed {{node}{CjeweV4VQD61TC7zwqMiXQ}{local}{local[429]},}, added {{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,711][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{OY3MSkJhTHankSw40K1G9Q}{local}{local[430]}}, removed {{node}{OY3MSkJhTHankSw40K1G9Q}{local}{local[430]},}, added {{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,711][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{A-IBGpJXQjCR8UJJFNmc3w}{local}{local[431]}}, removed {{node}{A-IBGpJXQjCR8UJJFNmc3w}{local}{local[431]},}, added {{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,712][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{dequzeUfQrKRDpQnpTVdnw}{local}{local[432]}}, removed {{node}{dequzeUfQrKRDpQnpTVdnw}{local}{local[432]},}, added {{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,712][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{Lmsre9nRQxOHhGycH7lXhg}{local}{local[433]}}, removed {{node}{Lmsre9nRQxOHhGycH7lXhg}{local}{local[433]},}, added {{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node9}{j_M2ivOrRmOWDAWRoHFEug}{local}{local[69]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,713][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]}, previous {node}{tlWwaiW5RNCKxbYjCV9WPQ}{local}{local[434]}}, removed {{node}{tlWwaiW5RNCKxbYjCV9WPQ}{local}{local[434]},}, added {{node4}{XUnY4JAeRkeSkznFM1Lu4g}{local}{local[64]},{node3}{geGwwaLZQK2ZqM6sMzDLNQ}{local}{local[63]},{node7}{PAYMDUC-SB2GZjo858Hscg}{local}{local[67]},{node8}{n5QwcJ0TSgqUAE2TLwNMwQ}{local}{local[68]},{node6}{okAAJvA4RoG9jkAwLZ4sKA}{local}{local[66]},{node1}{samQ5G85QGeVQShB5tBgzg}{local}{local[61]},{node0}{OJ1yMt8EQPCG2gWT-d4aCQ}{local}{local[60]},{node5}{P0Cra0DST2-t2vfZkMaf0g}{local}{local[65]},{node2}{g4Uwp8AERdGLFPF5ut3SZw}{local}{local[62]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,737][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,749][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,751][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,752][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,753][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,753][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,754][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,754][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,754][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,759][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,759][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,759][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A[2016-09-16T17:34:16,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,858][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 9 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,858][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,858][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,858][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,859][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,859][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047256497,
  "executionTime": 372
 }
]

[
 "TEST_STARTED",
 "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,903][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-bdK7XHlQoeBjghJXFm19g}{local}{local[435]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,904][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,907][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{22HeFOsIR_mD_JmmaKKqPg}{local}{local[436]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,909][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,912][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YYQ_zSb-TLCUIxBLvYyiSQ}{local}{local[437]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,913][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,919][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6Yq7LXg2Q1KxmfOkFAPLUQ}{local}{local[438]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,920][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,923][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{j5mN6O2CQwOgz8CRJ6XTqA}{local}{local[439]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,924][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,927][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hwTi9cpCS7OMnaE8oaUJ5w}{local}{local[440]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,929][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,964][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{p1wFOlCEQ-S7UZfwgC92yg}{local}{local[441]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,966][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,967][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{-bdK7XHlQoeBjghJXFm19g}{local}{local[435]}}, removed {{node}{-bdK7XHlQoeBjghJXFm19g}{local}{local[435]},}, added {{node4}{vkXlyV9tRnyBqoz9evz97g}{local}{local[74]},{node3}{EKKkxeCfQKCZwb3opmqtJA}{local}{local[73]},{node1}{31cK2t6RTH2w7YM8w-iKPg}{local}{local[71]},{node2}{HK-RYyndTIe1UB0Q9VPIZw}{local}{local[72]},{node6}{vQesT9UETOSTBf7nVoeHrA}{local}{local[76]},{node5}{yl-9k_4xQsyOl1tLarMV1A}{local}{local[75]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,968][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{22HeFOsIR_mD_JmmaKKqPg}{local}{local[436]}}, removed {{node}{22HeFOsIR_mD_JmmaKKqPg}{local}{local[436]},}, added {{node5}{yl-9k_4xQsyOl1tLarMV1A}{local}{local[75]},{node2}{HK-RYyndTIe1UB0Q9VPIZw}{local}{local[72]},{node6}{vQesT9UETOSTBf7nVoeHrA}{local}{local[76]},{node3}{EKKkxeCfQKCZwb3opmqtJA}{local}{local[73]},{node4}{vkXlyV9tRnyBqoz9evz97g}{local}{local[74]},{node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,969][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{YYQ_zSb-TLCUIxBLvYyiSQ}{local}{local[437]}}, removed {{node}{YYQ_zSb-TLCUIxBLvYyiSQ}{local}{local[437]},}, added {{node4}{vkXlyV9tRnyBqoz9evz97g}{local}{local[74]},{node6}{vQesT9UETOSTBf7nVoeHrA}{local}{local[76]},{node5}{yl-9k_4xQsyOl1tLarMV1A}{local}{local[75]},{node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]},{node1}{31cK2t6RTH2w7YM8w-iKPg}{local}{local[71]},{node3}{EKKkxeCfQKCZwb3opmqtJA}{local}{local[73]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,970][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{6Yq7LXg2Q1KxmfOkFAPLUQ}{local}{local[438]}}, removed {{node}{6Yq7LXg2Q1KxmfOkFAPLUQ}{local}{local[438]},}, added {{node1}{31cK2t6RTH2w7YM8w-iKPg}{local}{local[71]},{node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]},{node6}{vQesT9UETOSTBf7nVoeHrA}{local}{local[76]},{node2}{HK-RYyndTIe1UB0Q9VPIZw}{local}{local[72]},{node5}{yl-9k_4xQsyOl1tLarMV1A}{local}{local[75]},{node4}{vkXlyV9tRnyBqoz9evz97g}{local}{local[74]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,970][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{j5mN6O2CQwOgz8CRJ6XTqA}{local}{local[439]}}, removed {{node}{j5mN6O2CQwOgz8CRJ6XTqA}{local}{local[439]},}, added {{node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]},{node1}{31cK2t6RTH2w7YM8w-iKPg}{local}{local[71]},{node6}{vQesT9UETOSTBf7nVoeHrA}{local}{local[76]},{node3}{EKKkxeCfQKCZwb3opmqtJA}{local}{local[73]},{node2}{HK-RYyndTIe1UB0Q9VPIZw}{local}{local[72]},{node5}{yl-9k_4xQsyOl1tLarMV1A}{local}{local[75]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,971][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{hwTi9cpCS7OMnaE8oaUJ5w}{local}{local[440]}}, removed {{node}{hwTi9cpCS7OMnaE8oaUJ5w}{local}{local[440]},}, added {{node2}{HK-RYyndTIe1UB0Q9VPIZw}{local}{local[72]},{node6}{vQesT9UETOSTBf7nVoeHrA}{local}{local[76]},{node3}{EKKkxeCfQKCZwb3opmqtJA}{local}{local[73]},{node4}{vkXlyV9tRnyBqoz9evz97g}{local}{local[74]},{node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]},{node1}{31cK2t6RTH2w7YM8w-iKPg}{local}{local[71]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,972][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]}, previous {node}{p1wFOlCEQ-S7UZfwgC92yg}{local}{local[441]}}, removed {{node}{p1wFOlCEQ-S7UZfwgC92yg}{local}{local[441]},}, added {{node5}{yl-9k_4xQsyOl1tLarMV1A}{local}{local[75]},{node4}{vkXlyV9tRnyBqoz9evz97g}{local}{local[74]},{node0}{ex9JezXKS1SO1u3XMadtAQ}{local}{local[70]},{node2}{HK-RYyndTIe1UB0Q9VPIZw}{local}{local[72]},{node1}{31cK2t6RTH2w7YM8w-iKPg}{local}{local[71]},{node3}{EKKkxeCfQKCZwb3opmqtJA}{local}{local[73]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,977][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,990][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,992][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,993][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,993][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,994][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,994][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,994][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:16,994][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,012][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047256870,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,061][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vQcZHdOHTLiA6Pzluuc2nw}{local}{local[442]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,062][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,068][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gp-99TF4RayD4tRwKWJ8uQ}{local}{local[443]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,069][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,074][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RqXaXKJsT3ubJfhBKxtHmQ}{local}{local[444]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,077][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,088][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tUEPkonTTeKyiWKGAENpLQ}{local}{local[445]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,089][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,093][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{iTB7cuGlT5uuXzrB0gUxbw}{local}{local[446]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,094][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,105][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Q31K0_-cRFiMpMz0Ymj2oQ}{local}{local[447]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,106][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,112][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{v7ojjh-DT_qZeg5dMhl7sA}{local}{local[448]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,114][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,118][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sGLHj5AMS5aYP7_aoNccnA}{local}{local[449]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,119][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,122][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jkk2pFrPTu-52wQhD53fog}{local}{local[450]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,123][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,127][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UISWHBecTQ6JY4ULG2UxKw}{local}{local[451]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,129][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,130][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{vQcZHdOHTLiA6Pzluuc2nw}{local}{local[442]}}, removed {{node}{vQcZHdOHTLiA6Pzluuc2nw}{local}{local[442]},}, added {{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,131][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{gp-99TF4RayD4tRwKWJ8uQ}{local}{local[443]}}, removed {{node}{gp-99TF4RayD4tRwKWJ8uQ}{local}{local[443]},}, added {{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,132][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{RqXaXKJsT3ubJfhBKxtHmQ}{local}{local[444]}}, removed {{node}{RqXaXKJsT3ubJfhBKxtHmQ}{local}{local[444]},}, added {{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,133][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{tUEPkonTTeKyiWKGAENpLQ}{local}{local[445]}}, removed {{node}{tUEPkonTTeKyiWKGAENpLQ}{local}{local[445]},}, added {{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,133][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{iTB7cuGlT5uuXzrB0gUxbw}{local}{local[446]}}, removed {{node}{iTB7cuGlT5uuXzrB0gUxbw}{local}{local[446]},}, added {{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,135][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{Q31K0_-cRFiMpMz0Ymj2oQ}{local}{local[447]}}, removed {{node}{Q31K0_-cRFiMpMz0Ymj2oQ}{local}{local[447]},}, added {{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,136][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{v7ojjh-DT_qZeg5dMhl7sA}{local}{local[448]}}, removed {{node}{v7ojjh-DT_qZeg5dMhl7sA}{local}{local[448]},}, added {{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,137][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{sGLHj5AMS5aYP7_aoNccnA}{local}{local[449]}}, removed {{node}{sGLHj5AMS5aYP7_aoNccnA}{local}{local[449]},}, added {{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,137][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{jkk2pFrPTu-52wQhD53fog}{local}{local[450]}}, removed {{node}{jkk2pFrPTu-52wQhD53fog}{local}{local[450]},}, added {{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node9}{n3vOfW4VQGi3j0WRu7Z2sw}{local}{local[86]},{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,138][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]}, previous {node}{UISWHBecTQ6JY4ULG2UxKw}{local}{local[451]}}, removed {{node}{UISWHBecTQ6JY4ULG2UxKw}{local}{local[451]},}, added {{node6}{ghncoL6HTgCtqzcmy91liw}{local}{local[83]},{node0}{c1tSgyy2Sq-fHZsDyQVDmw}{local}{local[77]},{node2}{An2A1yR-Qu-5kOwZjnqT6Q}{local}{local[79]},{node3}{-xmTPMERRcW-mm5jaRD3GA}{local}{local[80]},{node5}{Yg-dlUjaSySOfWjgzoEFlA}{local}{local[82]},{node4}{kUaezWVuSJCsXchk3LKOnQ}{local}{local[81]},{node8}{0b-VqyPVQ_6jQ-rQrgTIqQ}{local}{local[85]},{node1}{8DmNjzg8QE6QooT9dPO1OA}{local}{local[78]},{node7}{WsoRS9lFTNKg8g-pOYMM9A}{local}{local[84]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,156][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"nodes\":{\"node4\":{\"name\":\"\",\"transport_address\":\"local[81]\",\"host\":\"local\",\"ip\":\"local[81]\",\"roles\":[],\"tasks\":{\"node4:1\":{\"node\":\"node4\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257151,\"running_time_in_nanos\":48052,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node5\":{\"name\":\"\",\"transport_address\":\"local[82]\",\"host\":\"local\",\"ip\":\"local[82]\",\"roles\":[],\"tasks\":{\"node5:1\":{\"node\":\"node5\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257152,\"running_time_in_nanos\":41055,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node2\":{\"name\":\"\",\"transport_address\":\"local[79]\",\"host\":\"local\",\"ip\":\"local[79]\",\"roles\":[],\"tasks\":{\"node2:1\":{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257149,\"running_time_in_nanos\":41521,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node3\":{\"name\":\"\",\"transport_address\":\"local[80]\",\"host\":\"local\",\"ip\":\"local[80]\",\"roles\":[],\"tasks\":{\"node3:1\":{\"node\":\"node3\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257154,\"running_time_in_nanos\":25193,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node8\":{\"name\":\"\",\"transport_address\":\"local[85]\",\"host\":\"local\",\"ip\":\"local[85]\",\"roles\":[],\"tasks\":{\"node8:1\":{\"node\":\"node8\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257150,\"running_time_in_nanos\":37322,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node9\":{\"name\":\"\",\"transport_address\":\"local[86]\",\"host\":\"local\",\"ip\":\"local[86]\",\"roles\":[],\"tasks\":{\"node9:1\":{\"node\":\"node9\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257153,\"running_time_in_nanos\":31724,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node6\":{\"name\":\"\",\"transport_address\":\"local[83]\",\"host\":\"local\",\"ip\":\"local[83]\",\"roles\":[],\"tasks\":{\"node6:1\":{\"node\":\"node6\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257153,\"running_time_in_nanos\":26592,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node7\":{\"name\":\"\",\"transport_address\":\"local[84]\",\"host\":\"local\",\"ip\":\"local[84]\",\"roles\":[],\"tasks\":{\"node7:1\":{\"node\":\"node7\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257150,\"running_time_in_nanos\":41055,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node0\":{\"name\":\"\",\"transport_address\":\"local[77]\",\"host\":\"local\",\"ip\":\"local[77]\",\"roles\":[],\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1474047257145,\"running_time_in_nanos\":8260419,\"cancellable\":false},\"node0:2\":{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257153,\"running_time_in_nanos\":34523,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node1\":{\"name\":\"\",\"transport_address\":\"local[78]\",\"host\":\"local\",\"ip\":\"local[78]\",\"roles\":[],\"tasks\":{\"node1:1\":{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257154,\"running_time_in_nanos\":38722,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,157][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1474047257145,\"running_time_in_nanos\":8260419,\"cancellable\":false,\"children\":[{\"node\":\"node3\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257154,\"running_time_in_nanos\":25193,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257149,\"running_time_in_nanos\":41521,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257154,\"running_time_in_nanos\":38722,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257153,\"running_time_in_nanos\":34523,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node9\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257153,\"running_time_in_nanos\":31724,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node8\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257150,\"running_time_in_nanos\":37322,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node7\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257150,\"running_time_in_nanos\":41055,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node6\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257153,\"running_time_in_nanos\":26592,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node5\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257152,\"running_time_in_nanos\":41055,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node4\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474047257151,\"running_time_in_nanos\":48052,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}]}}}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047257016,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{086J7hzISU-s7iBKVd0m-Q}{local}{local[452]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,211][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,215][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eO8ZO5FESZG7snFFDFWyvQ}{local}{local[453]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,217][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,220][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fnwkpdJlTjquRWjP1aDnAw}{local}{local[454]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,222][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,226][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OIZnDUW0Qg-C4Q4OIsIb5g}{local}{local[455]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,231][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,234][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2dzfy0XJQcGxUFqmB6j8QA}{local}{local[456]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,236][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,240][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Vqk4FlGPTmiHefIVjEGPYg}{local}{local[457]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,241][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,245][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kbRzDKvbSmuXUwPobsmM5Q}{local}{local[458]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,246][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,249][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cJcyZj2VTBCvLAvCeSbBmQ}{local}{local[459]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,250][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[94]}, bound_addresses {local[94]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,255][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8DAGCMcHSpOp-xGYd_PAxw}{local}{local[460]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,256][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[95]}, bound_addresses {local[95]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,257][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{086J7hzISU-s7iBKVd0m-Q}{local}{local[452]}}, removed {{node}{086J7hzISU-s7iBKVd0m-Q}{local}{local[452]},}, added {{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,258][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{eO8ZO5FESZG7snFFDFWyvQ}{local}{local[453]}}, removed {{node}{eO8ZO5FESZG7snFFDFWyvQ}{local}{local[453]},}, added {{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,259][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{fnwkpdJlTjquRWjP1aDnAw}{local}{local[454]}}, removed {{node}{fnwkpdJlTjquRWjP1aDnAw}{local}{local[454]},}, added {{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,260][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{OIZnDUW0Qg-C4Q4OIsIb5g}{local}{local[455]}}, removed {{node}{OIZnDUW0Qg-C4Q4OIsIb5g}{local}{local[455]},}, added {{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,261][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{2dzfy0XJQcGxUFqmB6j8QA}{local}{local[456]}}, removed {{node}{2dzfy0XJQcGxUFqmB6j8QA}{local}{local[456]},}, added {{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,261][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{Vqk4FlGPTmiHefIVjEGPYg}{local}{local[457]}}, removed {{node}{Vqk4FlGPTmiHefIVjEGPYg}{local}{local[457]},}, added {{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,261][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{kbRzDKvbSmuXUwPobsmM5Q}{local}{local[458]}}, removed {{node}{kbRzDKvbSmuXUwPobsmM5Q}{local}{local[458]},}, added {{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,262][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{cJcyZj2VTBCvLAvCeSbBmQ}{local}{local[459]}}, removed {{node}{cJcyZj2VTBCvLAvCeSbBmQ}{local}{local[459]},}, added {{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node8}{59F-0L_XRHCs_29rA81CUg}{local}{local[95]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,263][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]}, previous {node}{8DAGCMcHSpOp-xGYd_PAxw}{local}{local[460]}}, removed {{node}{8DAGCMcHSpOp-xGYd_PAxw}{local}{local[460]},}, added {{node3}{gHQWsBqFRT-PpaMsGpRc3g}{local}{local[90]},{node6}{qGfyoni6R2mG3TORxKLy_g}{local}{local[93]},{node4}{oJBGQQTqTMG-jA0RA9AqEQ}{local}{local[91]},{node5}{2h2G-za5TdyZhDCM-PG73A}{local}{local[92]},{node2}{vS6bFasjRROXpwd2_fX9ZA}{local}{local[89]},{node1}{oxx-9WI0RC2EWKCpL0U6Xw}{local}{local[88]},{node0}{ebA57hD5Rym91-Ih8Y3jEg}{local}{local[87]},{node7}{iMN70ATkSIipIl7VwVfeCw}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,268][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,284][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,284][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,284][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,284][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,285][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,286][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,289][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A[2016-09-16T17:34:17,289][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,290][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,290][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,290][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Listing currently running tasks using node [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,312][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Checking currently running tasks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,355][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,355][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,355][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,355][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,355][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,356][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,356][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,356][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,356][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047257163,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,413][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xcG3RfkSSZupQTUPqaHtXg}{local}{local[461]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,414][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[96]}, bound_addresses {local[96]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,424][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WSTuC5kkRfuSW5rftPve_w}{local}{local[462]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,425][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[97]}, bound_addresses {local[97]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{IrkVVOu3Qa2c1mJBzjVu2A}{local}{local[463]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,431][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[98]}, bound_addresses {local[98]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,437][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NWS13WnFTGGdknMkQJjKNQ}{local}{local[464]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,438][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[99]}, bound_addresses {local[99]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,447][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{30l8_KZ2RuyZiJYxTgBHvQ}{local}{local[465]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,448][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[100]}, bound_addresses {local[100]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,454][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{QhZI-2vlTKeEf3aFdxGxdA}{local}{local[466]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,455][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[101]}, bound_addresses {local[101]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,461][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WC-Ia29nQkGP8NSKbRKOEQ}{local}{local[467]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,463][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[102]}, bound_addresses {local[102]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,474][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{92mAO-CST7uGg6nFmMLQzQ}{local}{local[468]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,476][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[103]}, bound_addresses {local[103]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,490][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pa4Uj-SLRXSYL_t6Xxg8IQ}{local}{local[469]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,492][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[104]}, bound_addresses {local[104]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,493][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{xcG3RfkSSZupQTUPqaHtXg}{local}{local[461]}}, removed {{node}{xcG3RfkSSZupQTUPqaHtXg}{local}{local[461]},}, added {{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,493][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{WSTuC5kkRfuSW5rftPve_w}{local}{local[462]}}, removed {{node}{WSTuC5kkRfuSW5rftPve_w}{local}{local[462]},}, added {{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,493][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{IrkVVOu3Qa2c1mJBzjVu2A}{local}{local[463]}}, removed {{node}{IrkVVOu3Qa2c1mJBzjVu2A}{local}{local[463]},}, added {{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,494][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{NWS13WnFTGGdknMkQJjKNQ}{local}{local[464]}}, removed {{node}{NWS13WnFTGGdknMkQJjKNQ}{local}{local[464]},}, added {{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,494][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{30l8_KZ2RuyZiJYxTgBHvQ}{local}{local[465]}}, removed {{node}{30l8_KZ2RuyZiJYxTgBHvQ}{local}{local[465]},}, added {{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,494][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{QhZI-2vlTKeEf3aFdxGxdA}{local}{local[466]}}, removed {{node}{QhZI-2vlTKeEf3aFdxGxdA}{local}{local[466]},}, added {{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,494][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{WC-Ia29nQkGP8NSKbRKOEQ}{local}{local[467]}}, removed {{node}{WC-Ia29nQkGP8NSKbRKOEQ}{local}{local[467]},}, added {{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,494][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{92mAO-CST7uGg6nFmMLQzQ}{local}{local[468]}}, removed {{node}{92mAO-CST7uGg6nFmMLQzQ}{local}{local[468]},}, added {{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node8}{7JOricCuSqe_wL0Ff3knYw}{local}{local[104]},{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,495][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]}, previous {node}{pa4Uj-SLRXSYL_t6Xxg8IQ}{local}{local[469]}}, removed {{node}{pa4Uj-SLRXSYL_t6Xxg8IQ}{local}{local[469]},}, added {{node1}{LmNtZ9AOS4GBNtAeoljomw}{local}{local[97]},{node7}{KGEtAVqoS-mG9UfSXtXlsA}{local}{local[103]},{node2}{h4C_P6vvQR6mk0-TLi1r9A}{local}{local[98]},{node6}{KNWgEZ06QJCdbqvubT9Kbg}{local}{local[102]},{node5}{qK6tu5ilTny-EBxWVOBqPw}{local}{local[101]},{node4}{D7mf1Gj4SJudB9Sr1MPoPg}{local}{local[100]},{node0}{S3d_CApPQD6n7NByrB_utg}{local}{local[96]},{node3}{Pd2oT7ECRimfBfXyEtuZKw}{local}{local[99]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,501][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,506][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,506][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,507][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,507][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,508][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,509][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,509][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,510][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,511][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,511][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,527][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047257365,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,573][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hrzYjJ6LSuGvlkhZNFucAw}{local}{local[470]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,574][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[105]}, bound_addresses {local[105]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,576][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wHA6hQoDSpepbXTL1VJk8A}{local}{local[471]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,578][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[106]}, bound_addresses {local[106]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,583][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0V123GfMTry6YexLECIyDw}{local}{local[472]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,585][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[107]}, bound_addresses {local[107]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,590][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1Xwp_uSsT9C-V_XX9sjp-A}{local}{local[473]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,592][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[108]}, bound_addresses {local[108]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,595][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Rc9Zs40JR52Rj4LfWODXdQ}{local}{local[474]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,596][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[109]}, bound_addresses {local[109]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,599][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{M-AVKirAS6C9sLshfhCBrw}{local}{local[475]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,601][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[110]}, bound_addresses {local[110]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,602][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]}, previous {node}{hrzYjJ6LSuGvlkhZNFucAw}{local}{local[470]}}, removed {{node}{hrzYjJ6LSuGvlkhZNFucAw}{local}{local[470]},}, added {{node3}{rRZn5vMYQ8WbbYcKMW0cIw}{local}{local[108]},{node4}{oD-pb87xSzeRvmU0vGsdZg}{local}{local[109]},{node5}{jveX4On1SuWULbzvqcyqGw}{local}{local[110]},{node2}{q2XI_zgfQSaysLvSXSrC0w}{local}{local[107]},{node1}{tK6G2_BsRIC-Lri_g8RlPw}{local}{local[106]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,602][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]}, previous {node}{wHA6hQoDSpepbXTL1VJk8A}{local}{local[471]}}, removed {{node}{wHA6hQoDSpepbXTL1VJk8A}{local}{local[471]},}, added {{node3}{rRZn5vMYQ8WbbYcKMW0cIw}{local}{local[108]},{node4}{oD-pb87xSzeRvmU0vGsdZg}{local}{local[109]},{node5}{jveX4On1SuWULbzvqcyqGw}{local}{local[110]},{node2}{q2XI_zgfQSaysLvSXSrC0w}{local}{local[107]},{node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,602][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]}, previous {node}{0V123GfMTry6YexLECIyDw}{local}{local[472]}}, removed {{node}{0V123GfMTry6YexLECIyDw}{local}{local[472]},}, added {{node3}{rRZn5vMYQ8WbbYcKMW0cIw}{local}{local[108]},{node4}{oD-pb87xSzeRvmU0vGsdZg}{local}{local[109]},{node5}{jveX4On1SuWULbzvqcyqGw}{local}{local[110]},{node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]},{node1}{tK6G2_BsRIC-Lri_g8RlPw}{local}{local[106]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,603][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]}, previous {node}{1Xwp_uSsT9C-V_XX9sjp-A}{local}{local[473]}}, removed {{node}{1Xwp_uSsT9C-V_XX9sjp-A}{local}{local[473]},}, added {{node4}{oD-pb87xSzeRvmU0vGsdZg}{local}{local[109]},{node5}{jveX4On1SuWULbzvqcyqGw}{local}{local[110]},{node2}{q2XI_zgfQSaysLvSXSrC0w}{local}{local[107]},{node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]},{node1}{tK6G2_BsRIC-Lri_g8RlPw}{local}{local[106]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,603][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]}, previous {node}{Rc9Zs40JR52Rj4LfWODXdQ}{local}{local[474]}}, removed {{node}{Rc9Zs40JR52Rj4LfWODXdQ}{local}{local[474]},}, added {{node3}{rRZn5vMYQ8WbbYcKMW0cIw}{local}{local[108]},{node5}{jveX4On1SuWULbzvqcyqGw}{local}{local[110]},{node2}{q2XI_zgfQSaysLvSXSrC0w}{local}{local[107]},{node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]},{node1}{tK6G2_BsRIC-Lri_g8RlPw}{local}{local[106]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,604][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]}, previous {node}{M-AVKirAS6C9sLshfhCBrw}{local}{local[475]}}, removed {{node}{M-AVKirAS6C9sLshfhCBrw}{local}{local[475]},}, added {{node3}{rRZn5vMYQ8WbbYcKMW0cIw}{local}{local[108]},{node4}{oD-pb87xSzeRvmU0vGsdZg}{local}{local[109]},{node2}{q2XI_zgfQSaysLvSXSrC0w}{local}{local[107]},{node0}{NKRFISkYRQOYdjuOd1YtwQ}{local}{local[105]},{node1}{tK6G2_BsRIC-Lri_g8RlPw}{local}{local[106]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,610][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,614][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,615][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,623][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,623][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,623][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047257531,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2HTF6JBqRkO1majJ4QOXVQ}{local}{local[476]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,674][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[111]}, bound_addresses {local[111]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,677][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Srff1HjiSuSI2vqZQqx4TQ}{local}{local[477]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,678][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[112]}, bound_addresses {local[112]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,681][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5RM7_cxWTv2SemTtw3__3Q}{local}{local[478]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,682][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[113]}, bound_addresses {local[113]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,686][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-fIoeZ7FRfuFmsewAOme8A}{local}{local[479]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,687][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[114]}, bound_addresses {local[114]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,697][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{S7S7xdAoTe6OeKVQ9aA-Wg}{local}{local[480]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,698][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[115]}, bound_addresses {local[115]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7k-3164mSVCgEi1Et3fTeQ}{local}{local[481]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,702][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[116]}, bound_addresses {local[116]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,710][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vRrDDePhS-akTDJW5VFg6w}{local}{local[482]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,711][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[117]}, bound_addresses {local[117]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,718][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yjcp6ennTaOHyIsPSekrpA}{local}{local[483]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,719][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[118]}, bound_addresses {local[118]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,721][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{2HTF6JBqRkO1majJ4QOXVQ}{local}{local[476]}}, removed {{node}{2HTF6JBqRkO1majJ4QOXVQ}{local}{local[476]},}, added {{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,721][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{Srff1HjiSuSI2vqZQqx4TQ}{local}{local[477]}}, removed {{node}{Srff1HjiSuSI2vqZQqx4TQ}{local}{local[477]},}, added {{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,721][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{5RM7_cxWTv2SemTtw3__3Q}{local}{local[478]}}, removed {{node}{5RM7_cxWTv2SemTtw3__3Q}{local}{local[478]},}, added {{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,721][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{-fIoeZ7FRfuFmsewAOme8A}{local}{local[479]}}, removed {{node}{-fIoeZ7FRfuFmsewAOme8A}{local}{local[479]},}, added {{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,722][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{S7S7xdAoTe6OeKVQ9aA-Wg}{local}{local[480]}}, removed {{node}{S7S7xdAoTe6OeKVQ9aA-Wg}{local}{local[480]},}, added {{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,722][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{7k-3164mSVCgEi1Et3fTeQ}{local}{local[481]}}, removed {{node}{7k-3164mSVCgEi1Et3fTeQ}{local}{local[481]},}, added {{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,722][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{vRrDDePhS-akTDJW5VFg6w}{local}{local[482]}}, removed {{node}{vRrDDePhS-akTDJW5VFg6w}{local}{local[482]},}, added {{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node7}{3CeR_76PQY-f6KUy7l2HKA}{local}{local[118]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,723][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]}, previous {node}{yjcp6ennTaOHyIsPSekrpA}{local}{local[483]}}, removed {{node}{yjcp6ennTaOHyIsPSekrpA}{local}{local[483]},}, added {{node4}{p8TneAuNQeOdqjIuBEC5hg}{local}{local[115]},{node6}{A_hutLVUQ66Cuw68oVqO0A}{local}{local[117]},{node5}{dqejVBobSLSsYUxn3DKc5A}{local}{local[116]},{node2}{C2lpzE1-Q9m9uqPkHjAXiw}{local}{local[113]},{node1}{Rn6sKhLnSpWKHn_UXN7Seg}{local}{local[112]},{node3}{GocdppxaQuGYbDN1JGoJew}{local}{local[114]},{node0}{PZztFQ-hR5ulLv1NLTek6w}{local}{local[111]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,727][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,730][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,730][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,731][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,731][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,731][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,731][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,738][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A[2016-09-16T17:34:17,738][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,738][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,739][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,738][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,739][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,739][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,739][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047257633,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,804][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UNG3O3TTTIaazSK9jq7nkg}{local}{local[484]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,806][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[119]}, bound_addresses {local[119]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,951][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{KPwsJpNbSoyku3OE-aK4AA}{local}{local[485]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,953][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[120]}, bound_addresses {local[120]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,976][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rNCAqrHiScaKxyWo8Kvtxg}{local}{local[486]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,981][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[121]}, bound_addresses {local[121]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,991][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tW1Kn8_pSjOLXoSv_R-SFg}{local}{local[487]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:17,992][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[122]}, bound_addresses {local[122]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,019][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{z9rIC9lNTb28U-zZTN_JRA}{local}{local[488]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,020][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[123]}, bound_addresses {local[123]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,040][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4J72toqFTCyDcK0Ouom49w}{local}{local[489]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,042][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[124]}, bound_addresses {local[124]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,050][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XFHpB8LUTDyAShg2PCvt2Q}{local}{local[490]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,051][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[125]}, bound_addresses {local[125]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,052][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{UNG3O3TTTIaazSK9jq7nkg}{local}{local[484]}}, removed {{node}{UNG3O3TTTIaazSK9jq7nkg}{local}{local[484]},}, added {{node4}{lqQlj9NkR-y-1f1omyvOTw}{local}{local[123]},{node3}{ed522dSSTsO1PSExCOCzsA}{local}{local[122]},{node1}{0KQs7FzTSW6k2qhL6Xg9aw}{local}{local[120]},{node5}{G9EFUsgqRx69VFVCXASCLA}{local}{local[124]},{node2}{xccjAIP5Sbmx3XEy3G8qvw}{local}{local[121]},{node6}{jpKCxVi3R-GlVswi1cht9A}{local}{local[125]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,052][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{KPwsJpNbSoyku3OE-aK4AA}{local}{local[485]}}, removed {{node}{KPwsJpNbSoyku3OE-aK4AA}{local}{local[485]},}, added {{node2}{xccjAIP5Sbmx3XEy3G8qvw}{local}{local[121]},{node3}{ed522dSSTsO1PSExCOCzsA}{local}{local[122]},{node4}{lqQlj9NkR-y-1f1omyvOTw}{local}{local[123]},{node5}{G9EFUsgqRx69VFVCXASCLA}{local}{local[124]},{node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]},{node6}{jpKCxVi3R-GlVswi1cht9A}{local}{local[125]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,053][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{rNCAqrHiScaKxyWo8Kvtxg}{local}{local[486]}}, removed {{node}{rNCAqrHiScaKxyWo8Kvtxg}{local}{local[486]},}, added {{node4}{lqQlj9NkR-y-1f1omyvOTw}{local}{local[123]},{node1}{0KQs7FzTSW6k2qhL6Xg9aw}{local}{local[120]},{node3}{ed522dSSTsO1PSExCOCzsA}{local}{local[122]},{node5}{G9EFUsgqRx69VFVCXASCLA}{local}{local[124]},{node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]},{node6}{jpKCxVi3R-GlVswi1cht9A}{local}{local[125]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,053][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{tW1Kn8_pSjOLXoSv_R-SFg}{local}{local[487]}}, removed {{node}{tW1Kn8_pSjOLXoSv_R-SFg}{local}{local[487]},}, added {{node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]},{node4}{lqQlj9NkR-y-1f1omyvOTw}{local}{local[123]},{node6}{jpKCxVi3R-GlVswi1cht9A}{local}{local[125]},{node2}{xccjAIP5Sbmx3XEy3G8qvw}{local}{local[121]},{node1}{0KQs7FzTSW6k2qhL6Xg9aw}{local}{local[120]},{node5}{G9EFUsgqRx69VFVCXASCLA}{local}{local[124]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,053][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{z9rIC9lNTb28U-zZTN_JRA}{local}{local[488]}}, removed {{node}{z9rIC9lNTb28U-zZTN_JRA}{local}{local[488]},}, added {{node3}{ed522dSSTsO1PSExCOCzsA}{local}{local[122]},{node1}{0KQs7FzTSW6k2qhL6Xg9aw}{local}{local[120]},{node5}{G9EFUsgqRx69VFVCXASCLA}{local}{local[124]},{node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]},{node2}{xccjAIP5Sbmx3XEy3G8qvw}{local}{local[121]},{node6}{jpKCxVi3R-GlVswi1cht9A}{local}{local[125]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,053][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{4J72toqFTCyDcK0Ouom49w}{local}{local[489]}}, removed {{node}{4J72toqFTCyDcK0Ouom49w}{local}{local[489]},}, added {{node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]},{node4}{lqQlj9NkR-y-1f1omyvOTw}{local}{local[123]},{node3}{ed522dSSTsO1PSExCOCzsA}{local}{local[122]},{node2}{xccjAIP5Sbmx3XEy3G8qvw}{local}{local[121]},{node6}{jpKCxVi3R-GlVswi1cht9A}{local}{local[125]},{node1}{0KQs7FzTSW6k2qhL6Xg9aw}{local}{local[120]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,053][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]}, previous {node}{XFHpB8LUTDyAShg2PCvt2Q}{local}{local[490]}}, removed {{node}{XFHpB8LUTDyAShg2PCvt2Q}{local}{local[490]},}, added {{node2}{xccjAIP5Sbmx3XEy3G8qvw}{local}{local[121]},{node0}{1fl89DipTfKei4koVI50fA}{local}{local[119]},{node4}{lqQlj9NkR-y-1f1omyvOTw}{local}{local[123]},{node1}{0KQs7FzTSW6k2qhL6Xg9aw}{local}{local[120]},{node3}{ed522dSSTsO1PSExCOCzsA}{local}{local[122]},{node5}{G9EFUsgqRx69VFVCXASCLA}{local}{local[124]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,057][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,094][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,099][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,099][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,113][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,115][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,116][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,116][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,116][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,116][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Filtering out nodes [node4, node5, node3, node6, node1] size: 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,186][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,186][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,186][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,186][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,187][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,187][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,187][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047257742,
  "executionTime": 476
 }
]

[
 "TEST_STARTED",
 "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,265][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jgCMKjR_T8mj2Joa_S3CDw}{local}{local[491]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,266][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[126]}, bound_addresses {local[126]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,270][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZdC-mhGaQ9WF2-R6zocdlA}{local}{local[492]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,271][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[127]}, bound_addresses {local[127]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,272][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{11xk8Dg6RnWW6vSL3LIdRw}{local}{local[126]}, previous {node}{jgCMKjR_T8mj2Joa_S3CDw}{local}{local[491]}}, removed {{node}{jgCMKjR_T8mj2Joa_S3CDw}{local}{local[491]},}, added {{node1}{xEZCCisRQd6SnVLAxaEoiw}{local}{local[127]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,273][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{11xk8Dg6RnWW6vSL3LIdRw}{local}{local[126]}, previous {node}{ZdC-mhGaQ9WF2-R6zocdlA}{local}{local[492]}}, removed {{node}{ZdC-mhGaQ9WF2-R6zocdlA}{local}{local[492]},}, added {{node0}{11xk8Dg6RnWW6vSL3LIdRw}{local}{local[126]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,274][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,275][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,275][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,275][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,280][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,281][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,281][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Failing on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,286][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:18,286][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474047258219,
  "executionTime": 68
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 16, 2016 7:34:18 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 12 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
  "startTimestamp": 1474047256401,
  "executionTime": 2188
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    },
    {
     "id": "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047258867
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1474047258910,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1474047258928,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1474047258933,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
  "startTimestamp": 1474047258867,
  "executionTime": 100
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "children": [
    {
     "id": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testSerializeRequest",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testClusterStateUpdateTask",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047259138
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1474047259155,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:04:19,164][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1474047259157,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
  "startTimestamp": 1474047259138,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "displayName": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "children": [
    {
     "id": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testResponseStreaming",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    },
    {
     "id": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testIndicesSyncedFlushResult",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047259420
 }
]

[
 "TEST_STARTED",
 "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1474047259438,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1474047259448,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
  "startTimestamp": 1474047259420,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "children": [
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    },
    {
     "id": "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testBuildFromSimplifiedDef",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047259724
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1474047259777,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1474047259779,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
  "startTimestamp": 1474047259724,
  "executionTime": 60
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "children": [
    {
     "id": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxDocs",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    },
    {
     "id": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxAge",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260197
 }
]

[
 "TEST_STARTED",
 "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1474047260223,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1474047260229,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
  "startTimestamp": 1474047260197,
  "executionTime": 38
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "displayName": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "children": [
    {
     "id": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testStoreStatusOrdering",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    },
    {
     "id": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testBasicSerialization",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260466
 }
]

[
 "TEST_STARTED",
 "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1474047260486,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1474047260488,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
  "startTimestamp": 1474047260466,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
   "children": [
    {
     "id": "ID#testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "displayName": "testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "methodName": "testShrinkIndexSettings",
     "className": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
     "children": []
    },
    {
     "id": "ID#testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "displayName": "testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "methodName": "testErrorCondition",
     "className": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047260741
 }
]

[
 "TEST_STARTED",
 "ID#testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:20,783][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[iCUtQrKXOj][1], [iCUtQrKXOj][2], [iCUtQrKXOj][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
  "startTimestamp": 1474047260778,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:20,794][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[source][3], [source][7], [source][2], [source][6], [source][4], [source][5], [source][1], [source][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
  "startTimestamp": 1474047260785,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
  "startTimestamp": 1474047260741,
  "executionTime": 56
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "displayName": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "children": [
    {
     "id": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStatsEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047261015
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,061][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,083][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,083][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,087][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,089][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,089][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,210][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,211][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,211][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[128]}, bound_addresses {local[128]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,215][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Eac3GIgLTzi3qpxnCtaDCQ}{gssWzvaOSOqQcsAxs2AS3w}{local}{local[128]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,216][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,231][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,256][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,316][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,346][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testCommitStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474047261053,
  "executionTime": 391
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,450][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,493][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,507][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStatsEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474047261444,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,559][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [doc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:21,606][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,271][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474047261550,
  "executionTime": 756
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,306][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,306][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,307][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,308][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
  "startTimestamp": 1474047261015,
  "executionTime": 1303
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
   "displayName": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "children": [
    {
     "id": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testIndexApiSinglePipelineExecution",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyWithBulkRequest",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyBulkNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyExecuted",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyIngestIdViaRequestParam",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyFailed",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047262345
 }
]

[
 "TEST_STARTED",
 "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262361,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262427,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262436,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262495,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262499,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262503,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474047262506,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
  "startTimestamp": 1474047262345,
  "executionTime": 177
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
   "displayName": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
   "children": [
    {
     "id": "ID#testApplyAnyAction(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "displayName": "testApplyAnyAction(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "methodName": "testApplyAnyAction",
     "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyIndexRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "displayName": "testApplyIndexRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "methodName": "testApplyIndexRedirect",
     "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyBulkRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "displayName": "testApplyBulkRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "methodName": "testApplyBulkRedirect",
     "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "displayName": "testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "methodName": "testApplyNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyFailures(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "displayName": "testApplyFailures(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "methodName": "testApplyFailures",
     "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyNoIngestNodes(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "displayName": "testApplyNoIngestNodes(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
     "methodName": "testApplyNoIngestNodes",
     "className": "org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047262681
 }
]

[
 "TEST_STARTED",
 "ID#testApplyAnyAction(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyAnyAction(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
  "startTimestamp": 1474047262702,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testApplyIndexRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyIndexRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
  "startTimestamp": 1474047262718,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testApplyBulkRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyBulkRedirect(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
  "startTimestamp": 1474047262726,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
  "startTimestamp": 1474047262744,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testApplyFailures(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyFailures(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
  "startTimestamp": 1474047262747,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testApplyNoIngestNodes(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyNoIngestNodes(org.elasticsearch.action.ingest.IngestProxyActionFilterTests)",
  "startTimestamp": 1474047262750,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.IngestProxyActionFilterTests",
  "startTimestamp": 1474047262681,
  "executionTime": 74
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047262952
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
  "startTimestamp": 1474047262965,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
  "startTimestamp": 1474047262952,
  "executionTime": 17
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "children": [
    {
     "id": "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemExceptionWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemWithOnFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteItem",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteItemWithFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemExceptionWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItem",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263444
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263531,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263557,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263637,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263697,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263745,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263768,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474047263783,
  "executionTime": 63
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
  "startTimestamp": 1474047263444,
  "executionTime": 421
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
   "children": [
    {
     "id": "ID#testParseUsingPipelineStore(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "displayName": "testParseUsingPipelineStore(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "methodName": "testParseUsingPipelineStore",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
     "children": []
    },
    {
     "id": "ID#testNullPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "displayName": "testNullPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "methodName": "testNullPipelineId",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
     "children": []
    },
    {
     "id": "ID#testParseWithProvidedPipeline(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "displayName": "testParseWithProvidedPipeline(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "methodName": "testParseWithProvidedPipeline",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
     "children": []
    },
    {
     "id": "ID#testNonExistentPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "displayName": "testNonExistentPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
     "methodName": "testNonExistentPipelineId",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047264161
 }
]

[
 "TEST_STARTED",
 "ID#testParseUsingPipelineStore(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUsingPipelineStore(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
  "startTimestamp": 1474047264174,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNullPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
  "startTimestamp": 1474047264180,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseWithProvidedPipeline(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseWithProvidedPipeline(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
  "startTimestamp": 1474047264183,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNonExistentPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonExistentPipelineId(org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests)",
  "startTimestamp": 1474047264186,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestParsingTests",
  "startTimestamp": 1474047264161,
  "executionTime": 30
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047264442
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
  "startTimestamp": 1474047264500,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
  "startTimestamp": 1474047264442,
  "executionTime": 62
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "displayName": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "children": [
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNoShards",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testShardsList",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testResultCombine",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047264738
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,775][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DNTrARsbRQKDwOMMZq7AjQ}{local}{local[520]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,777][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[129]}, bound_addresses {local[129]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,779][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{S_3w54RvRsWsbpk5VJoGpQ}{local}{local[522]}, previous {node}{DNTrARsbRQKDwOMMZq7AjQ}{local}{local[520]}}, removed {{node}{DNTrARsbRQKDwOMMZq7AjQ}{local}{local[520]},}, added {{node_1}{S_3w54RvRsWsbpk5VJoGpQ}{local}{local[522]},{node_2}{4IFjY31wRqaZXGwVD4r5Ew}{local}{local[523]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,780][INFO ][org.elasticsearch.action.support.replication] total shards: 2, %0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474047264758,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,785][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zAjSeIbKS4uwUaT8lp5LVQ}{local}{local[527]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,786][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[130]}, bound_addresses {local[130]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,787][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{zAjSeIbKS4uwUaT8lp5LVQ}{local}{local[527]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474047264781,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,797][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BQsYFMHgQK6TFwFW2m8gWg}{local}{local[530]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,797][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[131]}, bound_addresses {local[131]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,799][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{I4l1xRhMToyD1hs_FpfXXQ}{local}{local[532]}, previous {node}{BQsYFMHgQK6TFwFW2m8gWg}{local}{local[530]}}, removed {{node}{BQsYFMHgQK6TFwFW2m8gWg}{local}{local[530]},}, added {{node_1}{I4l1xRhMToyD1hs_FpfXXQ}{local}{local[532]},{node_2}{BSgPN1cpTKSeZFNtFIusiQ}{local}{local[533]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,801][INFO ][org.elasticsearch.action.support.replication] total shards: 1, %0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474047264789,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,809][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eU_l-XfrTjuy-456njbeMA}{local}{local[537]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,809][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[132]}, bound_addresses {local[132]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474047264801,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,815][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{z4hNMEYzRICXPa11BzT8yA}{local}{local[543]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,816][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[133]}, bound_addresses {local[133]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:04:24,818][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{rC3Hfib5TjCwWFQbI1LVlg}{local}{local[545]}, previous {node}{z4hNMEYzRICXPa11BzT8yA}{local}{local[543]}}, removed {{node}{z4hNMEYzRICXPa11BzT8yA}{local}{local[543]},}, added {{node_1}{rC3Hfib5TjCwWFQbI1LVlg}{local}{local[545]},{node_2}{BVNiewZ0SqyEGfXZEigCIA}{local}{local[546]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474047264811,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
  "startTimestamp": 1474047264738,
  "executionTime": 84
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.ReplicationOperationTests",
   "displayName": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
   "children": [
    {
     "id": "ID#testAddedReplicaAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "displayName": "testAddedReplicaAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "methodName": "testAddedReplicaAfterPrimaryOperation",
     "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
     "children": []
    },
    {
     "id": "ID#testReplication(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "displayName": "testReplication(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "methodName": "testReplication",
     "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
     "children": []
    },
    {
     "id": "ID#testDemotedPrimary(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "displayName": "testDemotedPrimary(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "methodName": "testDemotedPrimary",
     "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
     "children": []
    },
    {
     "id": "ID#testWaitForActiveShards(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "displayName": "testWaitForActiveShards(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "methodName": "testWaitForActiveShards",
     "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
     "children": []
    },
    {
     "id": "ID#testIndexDeletedAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "displayName": "testIndexDeletedAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "methodName": "testIndexDeletedAfterPrimaryOperation",
     "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
     "children": []
    },
    {
     "id": "ID#testReplicationWithShadowIndex(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "displayName": "testReplicationWithShadowIndex(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
     "methodName": "testReplicationWithShadowIndex",
     "className": "org.elasticsearch.action.support.replication.ReplicationOperationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047265021
 }
]

[
 "TEST_STARTED",
 "ID#testAddedReplicaAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddedReplicaAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
  "startTimestamp": 1474047265044,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReplication(org.elasticsearch.action.support.replication.ReplicationOperationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplication(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
  "startTimestamp": 1474047265055,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testDemotedPrimary(org.elasticsearch.action.support.replication.ReplicationOperationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDemotedPrimary(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
  "startTimestamp": 1474047265104,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForActiveShards(org.elasticsearch.action.support.replication.ReplicationOperationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForActiveShards(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
  "startTimestamp": 1474047265110,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexDeletedAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexDeletedAfterPrimaryOperation(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
  "startTimestamp": 1474047265114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplicationWithShadowIndex(org.elasticsearch.action.support.replication.ReplicationOperationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicationWithShadowIndex(org.elasticsearch.action.support.replication.ReplicationOperationTests)",
  "startTimestamp": 1474047265116,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.ReplicationOperationTests",
  "startTimestamp": 1474047265021,
  "executionTime": 100
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "children": [
    {
     "id": "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testShadowIndexDisablesReplication",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testReplicasCounter",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testReplicaProxy",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testStalePrimaryShardOnReroute",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testNoRerouteOnStaleClusterState",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryReference",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testCounterOnPrimary",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testBlocks",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testUnknownIndexOrShardOnReroute",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testRoutePhaseExecutesRequest",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testDefaultWaitForActiveShardsUsesIndexSetting",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047265312
 }
]

[
 "TEST_STARTED",
 "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,363][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4YE6PVQGQG-MyXOpScmcQQ}{local}{local[625]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,368][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{LokdlvRGSDOSWocFqfvcWw}{local}{local[627]}, previous {node}{4YE6PVQGQG-MyXOpScmcQQ}{local}{local[625]}}, removed {{node}{4YE6PVQGQG-MyXOpScmcQQ}{local}{local[625]},}, added {{node_4}{1KzfxrVHTU2OXncYNrh-0Q}{local}{local[630]},{node_1}{LokdlvRGSDOSWocFqfvcWw}{local}{local[627]},{node_2}{L4nuOdwdSRKxSBn_XP4orA}{local}{local[628]},{node_3}{pNO8uLb1RNCTB0rma8E1Ug}{local}{local[629]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265357,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,379][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bD_iXrSvQMqvIu2ZYz3vWQ}{local}{local[634]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,380][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{AxywbsUySaCVTzW2fsZXUg}{local}{local[636]}, previous {node}{bD_iXrSvQMqvIu2ZYz3vWQ}{local}{local[634]}}, removed {{node}{bD_iXrSvQMqvIu2ZYz3vWQ}{local}{local[634]},}, added {{node_1}{AxywbsUySaCVTzW2fsZXUg}{local}{local[636]},{node_2}{eaCPhNMcRUy4e4EZ-re5DA}{local}{local[637]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,381][WARN ][org.elasticsearch.transport] [node_s_0] registered two transport handlers for action internal:cluster/shard/started, handlers: org.elasticsearch.cluster.action.shard.ShardStateAction$ShardStartedTransportHandler@2f00357b, org.elasticsearch.cluster.action.shard.ShardStateAction$ShardStartedTransportHandler@670d409%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,381][WARN ][org.elasticsearch.transport] [node_s_0] registered two transport handlers for action internal:cluster/shard/failure, handlers: org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler@4abc94b0, org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler@1df1ebc4%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265372,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,403][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{R190u-67TeK1wbFJ19nekA}{local}{local[641]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,405][INFO ][org.elasticsearch.action.support.replication] using state: cluster uuid: hdRPLsKAQ8-pg3PacOsJWg%0Aversion: 0%0Astate uuid: 1_UN5LnMQBWexo8dB4B62Q%0Afrom_diff: false%0Ameta data version: 0%0A   [test]: v[1]%0A      0: p_term [37], a_ids []%0Anodes: %0A   {node_3}{XA4L3wXfTDW9iVnkjW4uiA}{local}{local[645]}%0A   {node_8}{WixlnIiOTxWMF5s0Njboow}{local}{local[650]}%0A   {node_4}{z_PgitRcTxG-nqS-JctsXA}{local}{local[646]}%0A   {node_10}{49uhgzQ7S3eiPaS4wb7QnA}{local}{local[652]}%0A   {node_5}{HOHi_GJ1Q4eP0W5jUzPg5Q}{local}{local[647]}%0A   {node_9}{_YwLlbzcR0uzurkjZCyi-Q}{local}{local[651]}%0A   {node_6}{xK-zhaPyQ2aAOFoQhQm14Q}{local}{local[648]}%0A   {node_0}{0qmna_9bSlu3uhqH3AQrBw}{local}{local[642]}, local%0A   {node_2}{blaYvyYORHC7p81qd9DEJw}{local}{local[644]}%0A   {node_1}{NaWzy4UmSw639zb8s6LtJA}{local}{local[643]}, master%0A   {node_7}{7nHSFRWaRCudn9fWmAo07A}{local}{local[649]}%0Arouting_table (version 0):%0A-- index [[test]]%0A----shard_id [test][0]%0A--------[test][0], node[node_0], relocating [node_6], [P], s[RELOCATING], a[id=9YtV9el2QZKm8Aj0-fofOw, rId=ZZKIiffNTTaAdVMA4syO1w]%0A--------[test][0], node[node_2], relocating [node_3], [R], s[RELOCATING], a[id=iA-dM2FDQh6ANH7baiQEew, rId=SJXpkkfcRHaBjFnU47DKAw]%0A--------[test][0], node[node_9], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=ZwpN-tYPQzWdD09k3B-2Aw]%0A--------[test][0], node[node_8], relocating [node_7], [R], s[RELOCATING], a[id=pSXAg68VTdazt-vqW9PTRQ, rId=oDyT5eonT2e4QPVCnDRfAQ]%0A--------[test][0], node[node_4], [R], s[STARTED], a[id=056seQEGSQaqHaiaRdJOLw]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:34:25.405Z], delayed=false, allocation_status[no_attempt]]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:34:25.405Z], delayed=false, allocation_status[no_attempt]]%0A%0Arouting_nodes:%0A-----node_id[node_0][V]%0A--------[test][0], node[node_0], relocating [node_6], [P], s[RELOCATING], a[id=9YtV9el2QZKm8Aj0-fofOw, rId=ZZKIiffNTTaAdVMA4syO1w]%0A-----node_id[node_1][V]%0A-----node_id[node_2][V]%0A--------[test][0], node[node_2], relocating [node_3], [R], s[RELOCATING], a[id=iA-dM2FDQh6ANH7baiQEew, rId=SJXpkkfcRHaBjFnU47DKAw]%0A-----node_id[node_3][V]%0A--------[test][0], node[node_3], relocating [node_2], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=SJXpkkfcRHaBjFnU47DKAw, rId=iA-dM2FDQh6ANH7baiQEew]%0A-----node_id[node_4][V]%0A--------[test][0], node[node_4], [R], s[STARTED], a[id=056seQEGSQaqHaiaRdJOLw]%0A-----node_id[node_5][V]%0A-----node_id[node_6][V]%0A--------[test][0], node[node_6], relocating [node_0], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=ZZKIiffNTTaAdVMA4syO1w, rId=9YtV9el2QZKm8Aj0-fofOw]%0A-----node_id[node_7][V]%0A--------[test][0], node[node_7], relocating [node_8], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=oDyT5eonT2e4QPVCnDRfAQ, rId=pSXAg68VTdazt-vqW9PTRQ]%0A-----node_id[node_8][V]%0A--------[test][0], node[node_8], relocating [node_7], [R], s[RELOCATING], a[id=pSXAg68VTdazt-vqW9PTRQ, rId=oDyT5eonT2e4QPVCnDRfAQ]%0A-----node_id[node_10][V]%0A-----node_id[node_9][V]%0A--------[test][0], node[node_9], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=ZwpN-tYPQzWdD09k3B-2Aw]%0A---- unassigned%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:34:25.405Z], delayed=false, allocation_status[no_attempt]]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:34:25.405Z], delayed=false, allocation_status[no_attempt]]%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,406][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{NaWzy4UmSw639zb8s6LtJA}{local}{local[643]}, previous {node}{R190u-67TeK1wbFJ19nekA}{local}{local[641]}}, removed {{node}{R190u-67TeK1wbFJ19nekA}{local}{local[641]},}, added {{node_3}{XA4L3wXfTDW9iVnkjW4uiA}{local}{local[645]},{node_8}{WixlnIiOTxWMF5s0Njboow}{local}{local[650]},{node_4}{z_PgitRcTxG-nqS-JctsXA}{local}{local[646]},{node_10}{49uhgzQ7S3eiPaS4wb7QnA}{local}{local[652]},{node_5}{HOHi_GJ1Q4eP0W5jUzPg5Q}{local}{local[647]},{node_9}{_YwLlbzcR0uzurkjZCyi-Q}{local}{local[651]},{node_6}{xK-zhaPyQ2aAOFoQhQm14Q}{local}{local[648]},{node_2}{blaYvyYORHC7p81qd9DEJw}{local}{local[644]},{node_1}{NaWzy4UmSw639zb8s6LtJA}{local}{local[643]},{node_7}{7nHSFRWaRCudn9fWmAo07A}{local}{local[649]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265394,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,419][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{w6B8oxlaR6uYXH7jgi5omw}{local}{local[656]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,421][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{JqTQIUgoTESoqDXkwscnkg}{local}{local[658]}, previous {node}{w6B8oxlaR6uYXH7jgi5omw}{local}{local[656]}}, removed {{node}{w6B8oxlaR6uYXH7jgi5omw}{local}{local[656]},}, added {{node_1}{JqTQIUgoTESoqDXkwscnkg}{local}{local[658]},{node_2}{c7um1Kf8SrmWPHQaw8--WQ}{local}{local[659]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265413,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,434][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JE5lPMuHS6WF3XmdTpcQ1g}{local}{local[663]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,436][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{S6BqT18uTl2K6w5gaUBeMg}{local}{local[665]}, previous {node}{JE5lPMuHS6WF3XmdTpcQ1g}{local}{local[663]}}, removed {{node}{JE5lPMuHS6WF3XmdTpcQ1g}{local}{local[663]},}, added {{node_0}{DlaPYUQ_SvOwB-AHcMrA_Q}{local}{local[664]},{node_1}{S6BqT18uTl2K6w5gaUBeMg}{local}{local[665]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265426,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,451][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lhkp2lehQd-o8YJ15ED8_A}{local}{local[670]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265446,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,459][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aL_I-nMwSTiSiAi1ln5aOA}{local}{local[671]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,460][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{3Biuvv9kS3GLuNGAX2LfoQ}{local}{local[673]}, previous {node}{aL_I-nMwSTiSiAi1ln5aOA}{local}{local[671]}}, removed {{node}{aL_I-nMwSTiSiAi1ln5aOA}{local}{local[671]},}, added {{node_1}{3Biuvv9kS3GLuNGAX2LfoQ}{local}{local[673]},{node_2}{zprh7GoAS2-JZoFn5PHRhA}{local}{local[674]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,465][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{8PcyCeXVRHCOgoXPVKrfEQ}{local}{local[672]},{node_1}{3Biuvv9kS3GLuNGAX2LfoQ}{local}{local[673]},{node_2}{zprh7GoAS2-JZoFn5PHRhA}{local}{local[674]},}, added {{node_1}{BVIS1vFpTOm44XMXUNd1Jg}{local}{local[679]},{node_2}{2suJ4xjdTxmtwr8XFR3mGQ}{local}{local[680]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265454,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,473][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NQsRP5vOTZe7tJZeq7mydA}{local}{local[684]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,475][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Idn9x5ivTA6TWCdRgf0D8Q}{local}{local[686]}, previous {node}{NQsRP5vOTZe7tJZeq7mydA}{local}{local[684]}}, removed {{node}{NQsRP5vOTZe7tJZeq7mydA}{local}{local[684]},}, added {{node_1}{Idn9x5ivTA6TWCdRgf0D8Q}{local}{local[686]},{node_2}{a2lMe4bATIG4kbWvXuB1ZQ}{local}{local[687]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265466,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,490][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{plV03nbzR8SmmqQrw6Q3dw}{local}{local[691]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,494][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{2Wp4rF4BR-mgWcjnAHPt3Q}{local}{local[693]}, previous {node}{plV03nbzR8SmmqQrw6Q3dw}{local}{local[691]}}, removed {{node}{plV03nbzR8SmmqQrw6Q3dw}{local}{local[691]},}, added {{node_1}{2Wp4rF4BR-mgWcjnAHPt3Q}{local}{local[693]},{node_2}{LFZ-W0NRSL-NYZZD7VNkdQ}{local}{local[694]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265477,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,521][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{inU7lfZ_TgCJGMnM8yo69w}{local}{local[698]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,523][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{TxHhZHu9TRWGBjd9FR_ZGg}{local}{local[700]}, previous {node}{inU7lfZ_TgCJGMnM8yo69w}{local}{local[698]}}, removed {{node}{inU7lfZ_TgCJGMnM8yo69w}{local}{local[698]},}, added {{node_0}{4uwi0h3hR_WJlLkRw9Mggw}{local}{local[699]},{node_1}{TxHhZHu9TRWGBjd9FR_ZGg}{local}{local[700]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265497,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,533][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FJhjQIuLTiapaj7JyCUfEA}{local}{local[705]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265526,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,553][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cqjzMU_OS8CTc_AeYyJGrQ}{local}{local[706]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,555][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{GMKx-Aw-STOYSMoxnN_sCQ}{local}{local[708]}, previous {node}{cqjzMU_OS8CTc_AeYyJGrQ}{local}{local[706]}}, removed {{node}{cqjzMU_OS8CTc_AeYyJGrQ}{local}{local[706]},}, added {{node_1}{GMKx-Aw-STOYSMoxnN_sCQ}{local}{local[708]},{node_2}{lPGnSi2KTWW5-N5_0cem7A}{local}{local[709]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265545,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,578][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wPlxgQ1nRdSK8sjDLcRdQA}{local}{local[713]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,581][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{gPbv2BFWTY-b_rddc2FKGQ}{local}{local[715]}, previous {node}{wPlxgQ1nRdSK8sjDLcRdQA}{local}{local[713]}}, removed {{node}{wPlxgQ1nRdSK8sjDLcRdQA}{local}{local[713]},}, added {{node_4}{HJT4A1PgTgSDWHRiezjmLQ}{local}{local[718]},{node_1}{gPbv2BFWTY-b_rddc2FKGQ}{local}{local[715]},{node_2}{5ow9CEokSKKpzObih7ZJ9g}{local}{local[716]},{node_3}{zBsyGVGBTuO5ANUIs3pJBA}{local}{local[717]},{node_5}{kLetY4zBSCWwdyxZ1vuzvw}{local}{local[719]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,581][INFO ][org.elasticsearch.action.support.replication] --> primary is assigned to [node_0], checking request forwarded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265573,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,589][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gLYSYiILSnWpqmobp62rbA}{local}{local[723]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:25,591][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{_bodY-sfTrGL0T7KJm4Zug}{local}{local[725]}, previous {node}{gLYSYiILSnWpqmobp62rbA}{local}{local[723]}}, removed {{node}{gLYSYiILSnWpqmobp62rbA}{local}{local[723]},}, added {{node_4}{ZasTEpoZQGOxX6M9iF5gEQ}{local}{local[728]},{node_1}{_bodY-sfTrGL0T7KJm4Zug}{local}{local[725]},{node_2}{5suUD4jDSFybejtecQSx_A}{local}{local[726]},{node_3}{F6AwR7bxQ66E93DIPRuNDg}{local}{local[727]},{node_5}{VKowsoInRkiCFvhgz8ryww}{local}{local[729]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474047265582,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportReplicationActionTests",
  "startTimestamp": 1474047265312,
  "executionTime": 283
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.MultiCommandTests",
   "displayName": "org.elasticsearch.cli.MultiCommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.MultiCommandTests",
   "children": [
    {
     "id": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandArguments",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testMissingCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testUnknownCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testNoCommandsConfigured",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047266055
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474047266123,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474047266319,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474047266330,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474047266333,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474047266336,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474047266339,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.MultiCommandTests",
  "startTimestamp": 1474047266055,
  "executionTime": 296
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.TerminalTests",
   "displayName": "org.elasticsearch.cli.TerminalTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.TerminalTests",
   "children": [
    {
     "id": "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)",
     "displayName": "testVerbosity(org.elasticsearch.cli.TerminalTests)",
     "methodName": "testVerbosity",
     "className": "org.elasticsearch.cli.TerminalTests",
     "children": []
    },
    {
     "id": "ID#testEscaping(org.elasticsearch.cli.TerminalTests)",
     "displayName": "testEscaping(org.elasticsearch.cli.TerminalTests)",
     "methodName": "testEscaping",
     "className": "org.elasticsearch.cli.TerminalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047266592
 }
]

[
 "TEST_STARTED",
 "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)",
  "startTimestamp": 1474047266622,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEscaping(org.elasticsearch.cli.TerminalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscaping(org.elasticsearch.cli.TerminalTests)",
  "startTimestamp": 1474047266624,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.TerminalTests",
  "startTimestamp": 1474047266592,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
   "displayName": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "children": [
    {
     "id": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "displayName": "testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "methodName": "testSetsParentId",
     "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047266855
 }
]

[
 "TEST_STARTED",
 "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
  "startTimestamp": 1474047266883,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
  "startTimestamp": 1474047266855,
  "executionTime": 49
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
   "displayName": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "children": [
    {
     "id": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testGlobalBlocksCheckedIfNoIndicesSpecified",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testToStringDanglingComma",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047267323
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474047267410,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474047267413,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474047267422,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
  "startTimestamp": 1474047267323,
  "executionTime": 113
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "children": [
    {
     "id": "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
     "displayName": "testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
     "methodName": "testClusterIndexHealth",
     "className": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047267694
 }
]

[
 "TEST_STARTED",
 "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:27,803][INFO ][org.elasticsearch.cluster.health] index status: GREEN, expected GREEN%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
  "startTimestamp": 1474047267800,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterIndexHealthTests",
  "startTimestamp": 1474047267694,
  "executionTime": 115
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "children": [
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreation",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealth",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthWaitsForClusterStateApplication",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreationWithFailedAllocations",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecovery",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268003
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,034][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{mkAD-JkbSTC6G_Otu7aX_Q}{local}{local[733]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268028,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,042][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{F91InUuFTYCxi5GVVVgT8Q}{local}{local[734]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268038,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,048][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GPWZbdlPSuKELMulO7ekXQ}{local}{local[735]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,050][INFO ][org.elasticsearch.cluster.health] cluster status: YELLOW, expected YELLOW%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268044,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,056][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bCdvFUH_RLS-IlNQZtDKig}{local}{local[736]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268051,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,062][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AZhnRcFISWO8qFIxYtz6Eg}{local}{local[737]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,064][INFO ][org.elasticsearch.cluster.health] --> waiting for listener to be called and cluster state being blocked%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268058,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,071][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pSMj51crS5KTrYVcHdIJag}{local}{local[738]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268066,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,077][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wYVZgThGQYyyeIDqPjKsIg}{local}{local[739]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268073,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:28,083][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0W9OSbYOSPi1haREAJXxtA}{local}{local[740]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474047268079,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
  "startTimestamp": 1474047268003,
  "executionTime": 83
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testPurge",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testAddTombstones",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testContains",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testDiffs",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268340
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268427,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268429,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268433,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268436,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268438,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268440,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474047268442,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexGraveyardTests",
  "startTimestamp": 1474047268340,
  "executionTime": 108
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexMetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
   "children": [
    {
     "id": "ID#testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "displayName": "testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "methodName": "testGetRoutingFactor",
     "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "displayName": "testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "methodName": "testSelectShrinkShards",
     "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "displayName": "testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "methodName": "testIndexMetaDataSerialization",
     "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268617
 }
]

[
 "TEST_STARTED",
 "ID#testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
  "startTimestamp": 1474047268667,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
  "startTimestamp": 1474047268670,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
  "startTimestamp": 1474047268673,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexMetaDataTests",
  "startTimestamp": 1474047268617,
  "executionTime": 71
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "children": [
    {
     "id": "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesOnlyWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesExplicitAll",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsNoExpandWildcards",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingSingleExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesNormalIndexes",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesExplicitAllPlusOther",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsWildcardExpansion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsSingleIndexNoExpandWildcards",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testFilteringAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsStrict",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesWildcardExpansion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsLenient",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testFilterClosedIndicesOnAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesExplicitAllPlusOther",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesNull",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesExplicitAll",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsAllowUnavailableDisallowEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesWildcardNoMatch",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesAllMissing",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesAllPatternRandom",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesOneMissingIndex",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesNull",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testDedupConcreteIndices",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingSingleExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsFailClosedIndicesAndAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesNormalIndexes",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsEmptyCluster",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesEmptyRequest",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesExplicitList",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268972
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269058,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269061,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269063,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269065,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269081,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269084,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269099,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269101,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269103,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269106,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269108,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269115,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269121,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269123,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269125,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269128,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269130,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269132,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269164,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269169,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269174,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269176,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269180,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269183,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269186,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269219,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269224,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269226,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269228,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269230,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269234,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269236,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269238,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269240,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474047269242,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
  "startTimestamp": 1474047268972,
  "executionTime": 274
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "children": [
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testIsUpgraded",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047269270
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:29,292][WARN ][org.elasticsearch.common.settings] [node_s_0] found unknown setting: index.refresh.interval value: -1 - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474047269285,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474047269292,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474047269300,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
  "startTimestamp": 1474047269270,
  "executionTime": 34
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "children": [
    {
     "id": "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "displayName": "testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "methodName": "testAddExtraChildTypePointingToAlreadyParentExistingType",
     "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "displayName": "testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "methodName": "testAddChildTypePointingToAlreadyExistingType",
     "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047269819
 }
]

[
 "TEST_STARTED",
 "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:29,853][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:29,922][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:29,922][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:29,927][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:29,929][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:29,929][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,138][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,138][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,138][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[134]}, bound_addresses {local[134]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,367][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{90x5dW-LRMag7nibbBaN9g}{L_pOaWWcRziA_IzLPwp5HA}{local}{local[134]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,368][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,498][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:30,518][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [parent, child1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,108][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,133][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/N7yHgejrTKS7vvEYVCxUGw] create_mapping [child2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,148][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [MetaDataMappingServiceTests#testAddExtraChildTypePointingToAlreadyParentExistingType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
  "startTimestamp": 1474047269844,
  "executionTime": 1342
 }
]

[
 "TEST_STARTED",
 "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,198][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,298][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,369][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [MetaDataMappingServiceTests#testAddChildTypePointingToAlreadyExistingType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
  "startTimestamp": 1474047271186,
  "executionTime": 219
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,405][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,406][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,406][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:31,408][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
  "startTimestamp": 1474047269819,
  "executionTime": 1594
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "children": [
    {
     "id": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testXContentWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldClusterMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldIndexMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testIndexAndAliasWithSameName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testMetaDataGlobalStateChangesOnIndexDeletions",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testSerializationWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testResolveIndexRouting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047271473
 }
]

[
 "TEST_STARTED",
 "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271546,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271549,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271553,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271556,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271557,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474047271559,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
  "startTimestamp": 1474047271473,
  "executionTime": 90
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "children": [
    {
     "id": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047271742
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:31,762][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.watermark.low] from [85%25] to [500mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:31,763][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.watermark.high] from [90%25] to [70%25]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:31,763][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.include_relocations] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:31,763][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.reroute_interval] from [60s] to [30s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:04:31,763][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.threshold_enabled] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1474047271759,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1474047271764,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
  "startTimestamp": 1474047271742,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "children": [
    {
     "id": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "displayName": "testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "methodName": "testElectReplicaAsPrimaryDuringRelocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272007
 }
]

[
 "TEST_STARTED",
 "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,037][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start another node and perform rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] find the replica shard that gets relocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] kill the node [node2] of the primary shard for the relocating replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,039][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:34:32,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] make sure all the primary shards are active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
  "startTimestamp": 1474047272027,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
  "startTimestamp": 1474047272007,
  "executionTime": 34
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "children": [
    {
     "id": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testInitializingHasExpectedSize",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testExpectedSizeOnMove",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272279
 }
]

[
 "TEST_STARTED",
 "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,323][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,323][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,324][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1474047272309,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,341][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,341][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,342][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,343][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,343][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1474047272325,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
  "startTimestamp": 1474047272279,
  "executionTime": 70
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "children": [
    {
     "id": "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testClusterLevelShardsLimitAllocate",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testIndexLevelShardsLimitRemain",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testIndexLevelShardsLimitAllocate",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272584
 }
]

[
 "TEST_STARTED",
 "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,659][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Do another reroute, make sure shards are now allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,665][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][2], [test][3]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1474047272651,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,684][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,686][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][4], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add another index with 5 shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,688][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][3], [test1][4], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] update index.routing.allocation.total_shards_per_node for test, see that things move%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute after setting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1474047272667,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,701][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,701][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,704][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:32,705][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Do another reroute, make sure its still not allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1474047272691,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
  "startTimestamp": 1474047272584,
  "executionTime": 123
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
   "children": [
    {
     "id": "ID#testSingleIndexShardFailed(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "displayName": "testSingleIndexShardFailed(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "methodName": "testSingleIndexShardFailed",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
     "children": []
    },
    {
     "id": "ID#testMultiIndexUnevenNodes(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "displayName": "testMultiIndexUnevenNodes(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "methodName": "testMultiIndexUnevenNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
     "children": []
    },
    {
     "id": "ID#testSingleIndexStartedShard(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "displayName": "testSingleIndexStartedShard(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "methodName": "testSingleIndexStartedShard",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
     "children": []
    },
    {
     "id": "ID#testMultiIndexEvenDistribution(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "displayName": "testMultiIndexEvenDistribution(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
     "methodName": "testMultiIndexEvenDistribution",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272869
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexShardFailed(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,920][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,921][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,921][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Marking the shard as failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,922][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexShardFailed(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
  "startTimestamp": 1474047272912,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMultiIndexUnevenNodes(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,929][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table with 10 indices%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,930][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Starting 3 nodes and rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,931][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start two more nodes, things should remain the same%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,951][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0], [test9][0], [test6][0], [test3][0], [test2][0], [test8][0], [test5][0], [test7][0], [test1][0], [test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Now, mark the relocated as started%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiIndexUnevenNodes(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
  "startTimestamp": 1474047272922,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexStartedShard(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,962][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Rerouting again, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Marking the shard as started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,964][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Starting another node and making sure nothing changed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Killing node1 where the shard is, checking the shard is relocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,965][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start another node, make sure that things remain the same (shard is in node2 and initializing)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shard on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,965][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexStartedShard(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
  "startTimestamp": 1474047272956,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMultiIndexEvenDistribution(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table with 50 indices%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:32,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:33,194][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding additional 25 nodes, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:33,210][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Marking the shard as started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:33,234][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test9][0], [test30][0], [test8][0], [test3][0], [test7][0], [test29][0], [test28][0], [test6][0], [test27][0], [test5][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiIndexEvenDistribution(org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests)",
  "startTimestamp": 1474047272966,
  "executionTime": 268
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardNoReplicasRoutingTests",
  "startTimestamp": 1474047272869,
  "executionTime": 878
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "children": [
    {
     "id": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
     "displayName": "testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
     "methodName": "testSingleIndexFirstStartPrimaryThenBackups",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047273978
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,009][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary shards not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,011][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Kill node1, backup shard should become primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,012][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:34,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start another node, backup shard should start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
  "startTimestamp": 1474047274001,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
  "startTimestamp": 1474047273978,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "displayName": "testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "methodName": "testStartedShardsMatching",
     "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047274241
 }
]

[
 "TEST_STARTED",
 "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:34,260][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:34,260][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> test starting of shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:34,261][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:34,261][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> testing starting of relocating shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
  "startTimestamp": 1474047274254,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
  "startTimestamp": 1474047274241,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
   "children": [
    {
     "id": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)",
     "displayName": "testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)",
     "methodName": "testSingleIndexFirstStartPrimaryThenBackups",
     "className": "org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047274509
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,575][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,576][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,576][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][5], [test][6], [test][3], [test][8], [test][1], [test][9], [test][4], [test][2], [test][7], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:34:34,579][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards on node 3%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)",
  "startTimestamp": 1474047274562,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
  "startTimestamp": 1474047274509,
  "executionTime": 76
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PriorityTests",
   "displayName": "org.elasticsearch.common.PriorityTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PriorityTests",
   "children": [
    {
     "id": "ID#testToString(org.elasticsearch.common.PriorityTests)",
     "displayName": "testToString(org.elasticsearch.common.PriorityTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
     "displayName": "testSerialization(org.elasticsearch.common.PriorityTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
     "displayName": "testValueOf(org.elasticsearch.common.PriorityTests)",
     "methodName": "testValueOf",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.PriorityTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047275345
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474047275536,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474047275538,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueOf(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474047275540,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474047275542,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PriorityTests",
  "startTimestamp": 1474047275345,
  "executionTime": 202
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.TableTests",
   "displayName": "org.elasticsearch.common.TableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.TableTests",
   "children": [
    {
     "id": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnMoreCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
     "displayName": "testWithTimestamp(org.elasticsearch.common.TableTests)",
     "methodName": "testWithTimestamp",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutRow",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.TableTests)",
     "displayName": "testSimple(org.elasticsearch.common.TableTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndRowWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "displayName": "testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "methodName": "testOnLessCellsThanDeclaredUnchecked",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnLessCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnStartRowWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndHeadersWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047275821
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275842,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithTimestamp(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275844,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275847,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275849,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275851,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275852,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275853,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275855,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275857,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474047275858,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.TableTests",
  "startTimestamp": 1474047275821,
  "executionTime": 134
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testInvalidBuilderException",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047276344
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1474047276354,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1474047276359,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBuilderException(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1474047276373,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPointBuilderTests)",
  "startTimestamp": 1474047276376,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPointBuilderTests",
  "startTimestamp": 1474047276344,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.StreamsTests",
   "displayName": "org.elasticsearch.common.io.StreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.StreamsTests",
   "children": [
    {
     "id": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testBytesStreamInput",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromReader",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromByteArray",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyToString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromInputStream",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047276665
 }
]

[
 "TEST_STARTED",
 "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474047276682,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474047276684,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474047276686,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474047276688,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474047276701,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474047276703,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.StreamsTests",
  "startTimestamp": 1474047276665,
  "executionTime": 43
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "displayName": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "children": [
    {
     "id": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testDuplicates",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownName",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownCategory",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047276940
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474047276977,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474047276980,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474047276982,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474047276985,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474047276987,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
  "startTimestamp": 1474047276940,
  "executionTime": 50
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.joda.DateMathParserTests",
   "displayName": "org.elasticsearch.common.joda.DateMathParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.joda.DateMathParserTests",
   "children": [
    {
     "id": "ID#testRounding(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testRounding(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testRounding",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testBasicDates",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testMultipleAdjustments",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testTimestamps",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testThatUnixTimestampMayNotHaveTimeZone",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testOnlyCallsNowIfNecessary",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testTimezone(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testNow(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testNow(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testNow",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testIllegalMathFormat",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testBasicMath",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testIllegalDateFormat",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testRoundingDoesNotAffectExactDate",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    },
    {
     "id": "ID#testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "displayName": "testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)",
     "methodName": "testLenientEmptyMath",
     "className": "org.elasticsearch.common.joda.DateMathParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277272
 }
]

[
 "TEST_STARTED",
 "ID#testRounding(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRounding(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277315,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicDates(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277329,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleAdjustments(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277332,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestamps(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277335,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUnixTimestampMayNotHaveTimeZone(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277338,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnlyCallsNowIfNecessary(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277343,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277345,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNow(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNow(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277348,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalMathFormat(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277350,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicMath(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277353,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalDateFormat(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277356,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingDoesNotAffectExactDate(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277360,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientEmptyMath(org.elasticsearch.common.joda.DateMathParserTests)",
  "startTimestamp": 1474047277367,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.joda.DateMathParserTests",
  "startTimestamp": 1474047277272,
  "executionTime": 100
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277546
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1474047277605,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
  "startTimestamp": 1474047277546,
  "executionTime": 89
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "displayName": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "children": [
    {
     "id": "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
     "displayName": "testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
     "methodName": "testScriptScoresReturnsNaN",
     "className": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277872
 }
]

[
 "TEST_STARTED",
 "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
  "startTimestamp": 1474047277929,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
  "startTimestamp": 1474047277872,
  "executionTime": 77
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionLookupTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
   "children": [
    {
     "id": "ID#testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "displayName": "testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "methodName": "testTwoDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.uid.VersionLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047278158
 }
]

[
 "TEST_STARTED",
 "ID#testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoDocuments(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
  "startTimestamp": 1474047278183,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.uid.VersionLookupTests)",
  "startTimestamp": 1474047278240,
  "executionTime": 48
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionLookupTests",
  "startTimestamp": 1474047278158,
  "executionTime": 132
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkModuleTests",
   "displayName": "org.elasticsearch.common.network.NetworkModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkModuleTests",
   "children": [
    {
     "id": "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterHttpTransport",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterTransportService",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterTransport",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047281743
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1474047281805,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1474047281809,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1474047281812,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkModuleTests",
  "startTimestamp": 1474047281743,
  "executionTime": 81
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkUtilsTests",
   "displayName": "org.elasticsearch.common.network.NetworkUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkUtilsTests",
   "children": [
    {
     "id": "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKeyLinkLocal",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKey",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKeySiteLocal",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047282060
 }
]

[
 "TEST_STARTED",
 "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474047282082,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474047282085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474047282087,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474047282090,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkUtilsTests",
  "startTimestamp": 1474047282060,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "children": [
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047282559
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474047282599,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474047282611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474047282613,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474047282614,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474047282616,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
  "startTimestamp": 1474047282559,
  "executionTime": 62
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.QueueRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.QueueRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
   "children": [
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.QueueRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047282831
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474047282876,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474047282883,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474047282885,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474047282887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.QueueRecyclerTests)",
  "startTimestamp": 1474047282889,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.QueueRecyclerTests",
  "startTimestamp": 1474047282831,
  "executionTime": 62
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "children": [
    {
     "id": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeoutCleanup",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeout",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testExecutePrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testPriorityQueue",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithMixed",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithCallables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283097
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283135,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283196,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283205,
  "executionTime": 224
 }
]

[
 "TEST_STARTED",
 "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283429,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283448,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283452,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474047283459,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
  "startTimestamp": 1474047283097,
  "executionTime": 369
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.ObjectParserTests",
   "displayName": "org.elasticsearch.common.xcontent.ObjectParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
   "children": [
    {
     "id": "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testFailOnValueType",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testDeprecationFail",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectNoFieldsInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testExceptions",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseEnumFromString",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testAllVariants",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testObjectOrDefault",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectInOrder",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testEmptyObjectInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNestedShortcut",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObject",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNested",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectTwoFieldsInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectInOrderNotSupported",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectJunkInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283621
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283666,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:04:43,673][WARN ][org.elasticsearch.deprecation.common] Deprecated field [old_test] used, expected [test] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283670,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283674,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283680,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283683,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283690,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283731,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283736,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283738,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283742,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283744,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283748,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283751,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283754,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283757,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283760,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474047283763,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.ObjectParserTests",
  "startTimestamp": 1474047283621,
  "executionTime": 146
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentParserTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentParserTests",
   "children": [
    {
     "id": "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
     "displayName": "testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
     "methodName": "testReadListThrowsException",
     "className": "org.elasticsearch.common.xcontent.XContentParserTests",
     "children": []
    },
    {
     "id": "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
     "displayName": "testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
     "methodName": "testReadList",
     "className": "org.elasticsearch.common.xcontent.XContentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283893
 }
]

[
 "TEST_STARTED",
 "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
  "startTimestamp": 1474047283909,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
  "startTimestamp": 1474047283911,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentParserTests",
  "startTimestamp": 1474047283893,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
   "children": [
    {
     "id": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)",
     "displayName": "testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)",
     "methodName": "testCompareParsingTokens",
     "className": "org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047284156
 }
]

[
 "TEST_STARTED",
 "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.cbor.JsonVsCborTests)",
  "startTimestamp": 1474047284168,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.JsonVsCborTests",
  "startTimestamp": 1474047284156,
  "executionTime": 15
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "children": [
    {
     "id": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testEmptyFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithEscapedDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testNullFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testContainsDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testStartsWithDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testMultipleFilterPaths",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testWildcardInNameFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047284436
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284449,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284452,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284453,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284455,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284457,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284459,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284460,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284462,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284464,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284465,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284466,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474047284468,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
  "startTimestamp": 1474047284436,
  "executionTime": 35
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047284706
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284731,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284734,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284736,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284739,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284741,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284743,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284745,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284748,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284750,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284760,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284763,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284766,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284768,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284770,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284781,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284785,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284795,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284799,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284805,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284817,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284819,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284854,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284857,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284859,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284861,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284866,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284881,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284883,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284885,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474047284890,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
  "startTimestamp": 1474047284706,
  "executionTime": 190
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.lucene.SimpleLuceneTests",
   "displayName": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
   "children": [
    {
     "id": "ID#testBoost(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "displayName": "testBoost(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "methodName": "testBoost",
     "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
     "children": []
    },
    {
     "id": "ID#testOrdering(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "displayName": "testOrdering(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "methodName": "testOrdering",
     "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
     "children": []
    },
    {
     "id": "ID#testNRTSearchOnClosedWriter(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "displayName": "testNRTSearchOnClosedWriter(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "methodName": "testNRTSearchOnClosedWriter",
     "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
     "children": []
    },
    {
     "id": "ID#testSortValues(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "displayName": "testSortValues(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "methodName": "testSortValues",
     "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
     "children": []
    },
    {
     "id": "ID#testNumericTermDocsFreqs(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "displayName": "testNumericTermDocsFreqs(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "methodName": "testNumericTermDocsFreqs",
     "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
     "children": []
    },
    {
     "id": "ID#testSimpleNumericOps(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "displayName": "testSimpleNumericOps(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
     "methodName": "testSimpleNumericOps",
     "className": "org.elasticsearch.deps.lucene.SimpleLuceneTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047285192
 }
]

[
 "TEST_STARTED",
 "ID#testBoost(org.elasticsearch.deps.lucene.SimpleLuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoost(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
  "startTimestamp": 1474047285222,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testOrdering(org.elasticsearch.deps.lucene.SimpleLuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrdering(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
  "startTimestamp": 1474047285261,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNRTSearchOnClosedWriter(org.elasticsearch.deps.lucene.SimpleLuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNRTSearchOnClosedWriter(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
  "startTimestamp": 1474047285266,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSortValues(org.elasticsearch.deps.lucene.SimpleLuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortValues(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
  "startTimestamp": 1474047285272,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNumericTermDocsFreqs(org.elasticsearch.deps.lucene.SimpleLuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericTermDocsFreqs(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
  "startTimestamp": 1474047285280,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleNumericOps(org.elasticsearch.deps.lucene.SimpleLuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleNumericOps(org.elasticsearch.deps.lucene.SimpleLuceneTests)",
  "startTimestamp": 1474047285291,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.lucene.SimpleLuceneTests",
  "startTimestamp": 1474047285192,
  "executionTime": 108
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "displayName": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "children": [
    {
     "id": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoTermVector",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoStore",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterPrefixQuery",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighter",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047285545
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474047285587,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474047285643,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474047285686,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474047285723,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
  "startTimestamp": 1474047285545,
  "executionTime": 186
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.MetaStateServiceTests",
   "displayName": "org.elasticsearch.gateway.MetaStateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.MetaStateServiceTests",
   "children": [
    {
     "id": "ID#testLoadMissingIndex(org.elasticsearch.gateway.MetaStateServiceTests)",
     "displayName": "testLoadMissingIndex(org.elasticsearch.gateway.MetaStateServiceTests)",
     "methodName": "testLoadMissingIndex",
     "className": "org.elasticsearch.gateway.MetaStateServiceTests",
     "children": []
    },
    {
     "id": "ID#testLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)",
     "displayName": "testLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)",
     "methodName": "testLoadGlobal",
     "className": "org.elasticsearch.gateway.MetaStateServiceTests",
     "children": []
    },
    {
     "id": "ID#testWriteLoadIndex(org.elasticsearch.gateway.MetaStateServiceTests)",
     "displayName": "testWriteLoadIndex(org.elasticsearch.gateway.MetaStateServiceTests)",
     "methodName": "testWriteLoadIndex",
     "className": "org.elasticsearch.gateway.MetaStateServiceTests",
     "children": []
    },
    {
     "id": "ID#testWriteLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)",
     "displayName": "testWriteLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)",
     "methodName": "testWriteLoadGlobal",
     "className": "org.elasticsearch.gateway.MetaStateServiceTests",
     "children": []
    },
    {
     "id": "ID#testWriteGlobalStateWithIndexAndNoIndexIsLoaded(org.elasticsearch.gateway.MetaStateServiceTests)",
     "displayName": "testWriteGlobalStateWithIndexAndNoIndexIsLoaded(org.elasticsearch.gateway.MetaStateServiceTests)",
     "methodName": "testWriteGlobalStateWithIndexAndNoIndexIsLoaded",
     "className": "org.elasticsearch.gateway.MetaStateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047285820
 }
]

[
 "TEST_STARTED",
 "ID#testLoadMissingIndex(org.elasticsearch.gateway.MetaStateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:45,899][INFO ][org.elasticsearch.env    ] [3oYjO2r] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:45,899][INFO ][org.elasticsearch.env    ] [3oYjO2r] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadMissingIndex(org.elasticsearch.gateway.MetaStateServiceTests)",
  "startTimestamp": 1474047285837,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:45,958][INFO ][org.elasticsearch.env    ] [sqOqY21] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:45,959][INFO ][org.elasticsearch.env    ] [sqOqY21] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)",
  "startTimestamp": 1474047285911,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testWriteLoadIndex(org.elasticsearch.gateway.MetaStateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:46,076][INFO ][org.elasticsearch.env    ] [3FcC5OV] using [3] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:46,076][INFO ][org.elasticsearch.env    ] [3FcC5OV] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteLoadIndex(org.elasticsearch.gateway.MetaStateServiceTests)",
  "startTimestamp": 1474047286006,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testWriteLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:46,145][INFO ][org.elasticsearch.env    ] [aAH4-RA] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:46,145][INFO ][org.elasticsearch.env    ] [aAH4-RA] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteLoadGlobal(org.elasticsearch.gateway.MetaStateServiceTests)",
  "startTimestamp": 1474047286112,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testWriteGlobalStateWithIndexAndNoIndexIsLoaded(org.elasticsearch.gateway.MetaStateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:46,209][INFO ][org.elasticsearch.env    ] [DB2tfnt] using [2] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:46,209][INFO ][org.elasticsearch.env    ] [DB2tfnt] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteGlobalStateWithIndexAndNoIndexIsLoaded(org.elasticsearch.gateway.MetaStateServiceTests)",
  "startTimestamp": 1474047286158,
  "executionTime": 75
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.MetaStateServiceTests",
  "startTimestamp": 1474047285820,
  "executionTime": 465
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.SearchSlowLogTests",
   "displayName": "org.elasticsearch.index.SearchSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.SearchSlowLogTests",
   "children": [
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSlowLogSearchContextPrinterToLog",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetQueryLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetFetchLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047286368
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,407][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,443][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,444][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,447][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,450][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,450][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,576][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,576][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,577][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[135]}, bound_addresses {local[135]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,577][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{YiCCMjTmQg2wY4tWc--vsg}{rlxkqDljTkaD6rpc5TzHYA}{local}{local[135]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,578][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,589][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,604][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,604][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,604][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,607][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testReformatSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474047286396,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,611][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [INFO] to [TRACE]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,616][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testLevelSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474047286608,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,624][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,806][INFO ][org.elasticsearch.index  ] [node_s_0] [SearchSlowLogTests#testSlowLogSearchContextPrinterToLog]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474047286617,
  "executionTime": 253
 }
]

[
 "TEST_STARTED",
 "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,874][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,874][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,874][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,875][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,875][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,875][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,875][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,875][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,889][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetQueryLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474047286870,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,895][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,908][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetFetchLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474047286890,
  "executionTime": 19
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,909][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,909][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,910][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:46,911][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.SearchSlowLogTests",
  "startTimestamp": 1474047286368,
  "executionTime": 725
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "children": [
    {
     "id": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreCachedAndReused",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatAnalyzersAreUsedInMapping",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047287253
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,294][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,350][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,351][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,354][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,357][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,357][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,491][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,491][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,492][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[136]}, bound_addresses {local[136]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,511][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{DBdq0TMLSKywNPaWkpOYKA}{AB9qJGOAQLScSFEZVcSq4A}{local}{local[136]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,512][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,526][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,559][INFO ][org.elasticsearch.index.analysis] [node_s_0] [R9BT7PUlS1SxUqDbB9283w] [PreBuiltAnalyzerTests#testThatInstancesAreCachedAndReused]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474047287285,
  "executionTime": 275
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,562][INFO ][org.elasticsearch.index.analysis] [node_s_0] [R9BT7PUlS1SxUqDbB9283w] [PreBuiltAnalyzerTests#testThatDefaultAndStandardAnalyzerAreTheSameInstance]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474047287560,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,565][INFO ][org.elasticsearch.index.analysis] [node_s_0] [R9BT7PUlS1SxUqDbB9283w] [PreBuiltAnalyzerTests#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474047287563,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,574][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,655][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,669][INFO ][org.elasticsearch.index.analysis] [node_s_0] [test] [PreBuiltAnalyzerTests#testThatAnalyzersAreUsedInMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474047287567,
  "executionTime": 130
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,697][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,698][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,698][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:47,699][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
  "startTimestamp": 1474047287253,
  "executionTime": 455
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047287784
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287796,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287804,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287812,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287820,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287828,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287836,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287846,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474047287861,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1474047287784,
  "executionTime": 139
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "children": [
    {
     "id": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "displayName": "testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "methodName": "testSynonymsAnalysis",
     "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047288047
 }
]

[
 "TEST_STARTED",
 "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
  "startTimestamp": 1474047288065,
  "executionTime": 53
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
  "startTimestamp": 1474047288047,
  "executionTime": 75
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.codec.CodecTests",
   "displayName": "org.elasticsearch.index.codec.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.index.codec.CodecTests",
   "children": [
    {
     "id": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testBestCompression",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testResolveDefaultCodecs",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testDefault(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047288324
 }
]

[
 "TEST_STARTED",
 "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1474047288343,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1474047288354,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1474047288360,
  "executionTime": 96
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.codec.CodecTests",
  "startTimestamp": 1474047288324,
  "executionTime": 139
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "displayName": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "children": [
    {
     "id": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testFieldDataCacheListener",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnDoubles",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testGetForFieldDefaults",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testSetCacheListenerTwice",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnBools",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnLongs",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047288603
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,642][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,685][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,685][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,691][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,694][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,694][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,862][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,863][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,864][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[137]}, bound_addresses {local[137]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,865][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Hlmmv3iHTe-QcLZNzrhGAQ}{QFaHKR-DRUmBpO5dxfFOvg}{local}{local[137]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,866][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,879][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:48,898][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,136][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testFieldDataCacheListener]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474047288630,
  "executionTime": 534
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,178][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnDoubles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474047289164,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,185][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,292][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,318][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testGetForFieldDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474047289179,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,380][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,452][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,465][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testSetCacheListenerTwice]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474047289360,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,510][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnBools]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474047289503,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,516][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnLongs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474047289511,
  "executionTime": 6
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,518][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,518][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,519][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:49,521][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
  "startTimestamp": 1474047288603,
  "executionTime": 927
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "children": [
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047289766
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:49,815][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:49,925][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:49,925][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:49,932][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:49,937][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:49,937][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,143][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,143][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,144][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[138]}, bound_addresses {local[138]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,149][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iDFCDqRjTSCWf0uhDOIzmA}{TfazByZARkCMwzBR5dUSFQ}{local}{local[138]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,151][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,183][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,209][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,368][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,407][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047289804,
  "executionTime": 646
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:50,769][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:51,210][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047290450,
  "executionTime": 836
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:51,293][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:51,357][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:51,383][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047291286,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:51,438][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:51,532][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:52,246][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047291432,
  "executionTime": 911
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:52,351][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:52,604][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:52,694][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047292343,
  "executionTime": 475
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:52,825][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:52,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:53,082][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047292819,
  "executionTime": 326
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:53,153][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:53,215][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:54,316][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047293146,
  "executionTime": 1238
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:54,391][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:54,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:54,572][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047294384,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:54,626][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:54,703][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,034][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047294618,
  "executionTime": 514
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,138][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,322][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047295133,
  "executionTime": 306
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,446][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,549][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,567][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047295439,
  "executionTime": 184
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,630][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,713][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,729][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047295623,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,775][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,856][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:55,988][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047295760,
  "executionTime": 338
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,104][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,392][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047296098,
  "executionTime": 337
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,444][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,688][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047296435,
  "executionTime": 301
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,745][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,897][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,919][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047296736,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:56,971][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,101][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047296963,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,138][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,214][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,246][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047297130,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,282][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,346][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,365][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474047297276,
  "executionTime": 130
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,407][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,407][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,407][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:57,409][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
  "startTimestamp": 1474047289766,
  "executionTime": 7654
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "children": [
    {
     "id": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDotsConflict",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDeepDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047297481
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,540][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,564][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,564][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,571][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,578][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,578][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,757][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,757][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,757][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[139]}, bound_addresses {local[139]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,758][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{L1i_pvFRR4K-IwfsBK1xow}{Xd6_zT90RhWiWnLI8m1rfg}{local}{local[139]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,759][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,782][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,799][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,868][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,886][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDotsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474047297529,
  "executionTime": 386
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:57,922][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,032][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474047297915,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,172][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474047298070,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,207][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,335][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDeepDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474047298201,
  "executionTime": 164
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,365][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,366][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,366][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:58,367][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
  "startTimestamp": 1474047297481,
  "executionTime": 892
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047298398
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474047298416,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474047298419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474047298421,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474047298423,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474047298425,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474047298427,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
  "startTimestamp": 1474047298398,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
   "children": [
    {
     "id": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testThatEpochCanBeIgnoredWithCustomFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testDayWithoutYearFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testDefaultDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testParseLocal",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testAutomaticDateParser",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testThatNewIndicesOnlyAllowStrictDates",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testThatMergingWorks",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testDateDetection",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testLocale",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testTimestampAsDate",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testHourFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047299045
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,212][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,277][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,277][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,281][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,285][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,285][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,636][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,636][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,636][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[140]}, bound_addresses {local[140]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,733][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xLByZYgtQc-jfyl7AKcUpA}{6AeXmtQuQOKx31ipC2ZphQ}{local}{local[140]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,734][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,913][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:34:59,930][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,159][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,175][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/IJnYM13YQKGu3NtlVAI0gQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,189][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,428][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/X1rivRc7QoWA-vWoiaZSMg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,453][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,572][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/BjqmJtP7Tr2xc-ynYvRH_w] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,588][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testThatEpochCanBeIgnoredWithCustomFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047299204,
  "executionTime": 1575
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,854][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,867][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Gbj7oWseQ1-Kd6-RBZ8WWQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,892][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:00,997][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,009][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyDateFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047300779,
  "executionTime": 272
 }
]

[
 "TEST_STARTED",
 "ID#testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,057][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,131][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/GNTtRSv-SZyjusrT0xiVAg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,157][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testDayWithoutYearFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301051,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,312][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,364][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/O2c4llgGSqiRzABukEdYlg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,382][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testDefaultDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301220,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,416][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testParseLocal]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301410,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,482][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,520][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-8H4JhMBShqQgOYqdezA3w] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,539][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/-8H4JhMBShqQgOYqdezA3w] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,552][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testAutomaticDateParser]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301417,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,613][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,665][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/kroUnT0XRWGpZyyUPXtNNg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,696][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testThatNewIndicesOnlyAllowStrictDates]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301606,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,732][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/TT6kWDgFQkGq9XsW8S6XNQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,808][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,859][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/fEgVP3sxQzW1Zhb7ad7UNw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,882][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyDateFieldMapperTests#testThatMergingWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301726,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:01,988][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Rp2MbJiGQh-QggiukcC3nw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,000][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testDateDetection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047301921,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,093][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,107][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/gXixKG5eQVCa-4WOKBUJ-g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,122][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testLocale]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047302033,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,157][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,206][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,221][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/ZH5gQG3jSPui_GZCcAqTFA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,237][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testTimestampAsDate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047302151,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,311][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,386][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/3knYp3TlR-WwNAX3IAKxwQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,398][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testHourFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474047302305,
  "executionTime": 125
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,430][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,430][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,431][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:35:02,432][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
  "startTimestamp": 1474047299045,
  "executionTime": 3397
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "children": [
    {
     "id": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testRoutingMapper",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047302646
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,672][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,698][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,698][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,703][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,707][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,707][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,838][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,839][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,839][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[141]}, bound_addresses {local[141]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,864][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ArVoPeD5RECDhvm-i-YAsw}{c0enPiFjR2-s2ljqj7oJGQ}{local}{local[141]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,864][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,882][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,899][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:02,979][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testRoutingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1474047302663,
  "executionTime": 345
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,013][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,134][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1474047303008,
  "executionTime": 192
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,200][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,201][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,201][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:05:03,203][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
  "startTimestamp": 1474047302646,
  "executionTime": 564
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "children": [
    {
     "id": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testFormatBackCompat",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testComplete",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testEnabledNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testNoFormat",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testIncludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testExcludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testSourceObjectContainsExtraTokens",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testExcludes",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndWithMappingOverride",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndNoMapping",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndNoMappingWithMapperService",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testIncludes",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndWithMappingOverrideWithMapperService",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047303260
 }
]

[
 "TEST_STARTED",
 "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,326][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,487][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,487][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,490][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,492][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,492][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,608][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,608][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,608][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[142]}, bound_addresses {local[142]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,609][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{e_RO_9UnRuyqeD4d1r7hwg}{FSSx9bH2QeqQ9GcQSnNwow}{local}{local[142]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,610][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,766][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:03,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:04,529][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:04,606][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testFormatBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047303314,
  "executionTime": 1380
 }
]

[
 "TEST_STARTED",
 "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:04,700][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,108][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,182][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testComplete]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047304694,
  "executionTime": 571
 }
]

[
 "TEST_STARTED",
 "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,272][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,855][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,945][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testEnabledNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047305265,
  "executionTime": 789
 }
]

[
 "TEST_STARTED",
 "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:06,062][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:06,748][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:06,836][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testNoFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047306054,
  "executionTime": 944
 }
]

[
 "TEST_STARTED",
 "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:07,003][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:07,798][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:07,908][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testIncludesNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047306998,
  "executionTime": 1076
 }
]

[
 "TEST_STARTED",
 "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,080][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,822][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testExcludesNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047308074,
  "executionTime": 937
 }
]

[
 "TEST_STARTED",
 "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:09,016][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:09,493][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:09,589][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testSourceObjectContainsExtraTokens]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047309011,
  "executionTime": 655
 }
]

[
 "TEST_STARTED",
 "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:09,672][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:10,004][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:10,066][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testExcludes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047309666,
  "executionTime": 465
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:10,137][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:10,714][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:10,788][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndWithMappingOverride]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047310131,
  "executionTime": 738
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:10,875][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:11,861][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:12,096][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndNoMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047310869,
  "executionTime": 1419
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:12,294][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:13,282][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:13,447][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndNoMappingWithMapperService]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047312288,
  "executionTime": 1263
 }
]

[
 "TEST_STARTED",
 "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:13,557][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:14,318][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:14,450][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testIncludes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047313551,
  "executionTime": 1028
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:14,589][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:15,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:15,291][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndWithMappingOverrideWithMapperService]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474047314579,
  "executionTime": 782
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:15,361][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:15,361][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:15,362][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:15,363][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.SourceFieldMapperTests",
  "startTimestamp": 1474047303260,
  "executionTime": 12115
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047315731
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1474047315782,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1474047315731,
  "executionTime": 63
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "children": [
    {
     "id": "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
     "displayName": "testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
     "methodName": "testReadRandom",
     "className": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047316018
 }
]

[
 "TEST_STARTED",
 "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
  "startTimestamp": 1474047316043,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
  "startTimestamp": 1474047316018,
  "executionTime": 43
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
   "displayName": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "children": [
    {
     "id": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "displayName": "testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "methodName": "testGetLeave",
     "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047316283
 }
]

[
 "TEST_STARTED",
 "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
  "startTimestamp": 1474047316302,
  "executionTime": 412
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
  "startTimestamp": 1474047316283,
  "executionTime": 433
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.FsDirectoryServiceTests",
   "displayName": "org.elasticsearch.index.store.FsDirectoryServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
   "children": [
    {
     "id": "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testHasNoSleepWrapperOnNormalFS",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    },
    {
     "id": "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testPreload",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    },
    {
     "id": "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testHasSleepWrapperOnSharedFS",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047316818
 }
]

[
 "TEST_STARTED",
 "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1474047316847,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1474047316856,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1474047316882,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.FsDirectoryServiceTests",
  "startTimestamp": 1474047316818,
  "executionTime": 82
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "children": [
    {
     "id": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testClearAllEntityIdentity",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testCacheDifferentReaders",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testEviction",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testBasicOperationsCache",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047317091
 }
]

[
 "TEST_STARTED",
 "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:17,128][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474047317105,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474047317132,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:17,197][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474047317139,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474047317205,
  "executionTime": 28
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
  "startTimestamp": 1474047317091,
  "executionTime": 147
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesServiceTests",
   "displayName": "org.elasticsearch.indices.IndicesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesServiceTests",
   "children": [
    {
     "id": "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testVerifyIfIndexContentDeleted",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testIndexAndTombstoneWithSameNameOnStartup",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testPendingTasks",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteIndexContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteShardContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDeleteIndexStore",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDanglingIndicesWithAliasConflict",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047317381
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,418][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,443][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,443][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,447][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,449][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,449][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,572][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,572][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,572][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[143]}, bound_addresses {local[143]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,573][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{bV-tSONhQAufTN3XFNc8fg}{gBLeQihbSySR9mUBK9GH4Q}{local}{local[143]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,574][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,586][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,616][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testVerifyIfIndexContentDeleted]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,617][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,618][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,618][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,620][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,627][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,649][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,649][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,653][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,655][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,655][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,761][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,761][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,762][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[144]}, bound_addresses {local[144]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{9_S4nV_LRhWKV-Bi3uMH0w}{LZAX8R7kSAWuHJyF_esP9Q}{local}{local[144]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,763][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,775][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047317409,
  "executionTime": 379
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,792][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testIndexAndTombstoneWithSameNameOnStartup]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,793][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,794][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,794][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,796][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,804][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,826][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,826][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,830][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,832][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,832][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,976][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,976][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,977][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[145]}, bound_addresses {local[145]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,978][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{eaHaKYWiRvC8imXEb7M1Jw}{5uiuy4R6QgqmJPmjVyZ1OA}{local}{local[145]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,978][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:17,990][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047317788,
  "executionTime": 225
 }
]

[
 "TEST_STARTED",
 "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,079][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,100][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/kDIk0OjbSma5_UIxM-seZQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,158][WARN ][org.elasticsearch.indices] [node_s_0] 1 no shard lock for pending delete%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,162][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[test/kDIk0OjbSma5_UIxM-seZQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,198][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testPendingTasks]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,215][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,220][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,220][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,222][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,230][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,272][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,272][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,276][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,280][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,280][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,478][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,479][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,479][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[146]}, bound_addresses {local[146]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,491][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{qohzF6xtQ0WiI3XyaWJ9pw}{ZoLhKRTeQiGmL9jxcQdV1A}{local}{local[146]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,492][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,516][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047318013,
  "executionTime": 542
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,562][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testCanDeleteIndexContent]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,563][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,563][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,563][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,565][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,592][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,639][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,640][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,643][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,645][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,645][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,808][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,808][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,808][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[147]}, bound_addresses {local[147]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,822][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{tyvZIr2ESMubgdF-dh69lQ}{V8m03hBBQYOv942qmSGomw}{local}{local[147]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,823][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,835][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047318555,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,869][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,930][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,951][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testCanDeleteShardContent]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,971][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,972][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,972][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,974][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:18,983][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,008][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,008][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,011][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,014][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,014][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,224][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,224][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,224][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[148]}, bound_addresses {local[148]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,227][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{XE2T3ooBSxKE72yx_gBx_A}{Wau5NnvDQta5PWIBpEba1Q}{local}{local[148]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,227][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,247][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047318860,
  "executionTime": 402
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,269][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,612][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,812][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:19,849][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/j5IHwaTUT5qO67HD_Atw5g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,126][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/j5IHwaTUT5qO67HD_Atw5g]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,148][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[test/j5IHwaTUT5qO67HD_Atw5g]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,271][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,284][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testDeleteIndexStore]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,315][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,317][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,317][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,320][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,335][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,379][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,379][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,403][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,406][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,406][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,644][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,645][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,645][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[149]}, bound_addresses {local[149]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,673][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{lluyIwAlR3auOCsO8c5cTQ}{ewlibIMpR6SneehGJTsMTQ}{local}{local[149]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,674][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,723][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047319262,
  "executionTime": 1503
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:20,773][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,290][WARN ][org.elasticsearch.gateway] [node_s_0] ignoring dangled index [[test-alias/TuYQJ9kZQVSu3d4PKbH5cw]] on node [{node_s_0}{lluyIwAlR3auOCsO8c5cTQ}{ewlibIMpR6SneehGJTsMTQ}{local}{local[149]}] due to an existing alias with the same name%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,313][INFO ][org.elasticsearch.gateway] [node_s_0] auto importing dangled indices [[test-alias/TuYQJ9kZQVSu3d4PKbH5cw]/OPEN] from [{node_s_0}{lluyIwAlR3auOCsO8c5cTQ}{ewlibIMpR6SneehGJTsMTQ}{local}{local[149]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,356][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testDanglingIndicesWithAliasConflict]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,417][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,417][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,417][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,419][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,440][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,471][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,471][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,475][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,478][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,478][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,719][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,719][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,722][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[150]}, bound_addresses {local[150]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,777][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{uVcR1yDDQByagFHn_h63Wg}{45GEz-fkRhi_VzE8NHL3lQ}{local}{local[150]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,777][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,829][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474047320765,
  "executionTime": 1081
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,846][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,847][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,848][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:21,849][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesServiceTests",
  "startTimestamp": 1474047317381,
  "executionTime": 4543
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.TermsLookupTests",
   "displayName": "org.elasticsearch.indices.TermsLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.TermsLookupTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testTermsLookup",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047322048
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474047322074,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474047322077,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474047322078,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.TermsLookupTests",
  "startTimestamp": 1474047322048,
  "executionTime": 34
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "displayName": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "children": [
    {
     "id": "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testUnderscoreInAnalyzerNameAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testSimpleConfigurationYaml",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testSimpleConfigurationJson",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testVersionedAnalyzers",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasNotAllowedPost5x",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testRegisterHunspellDictionary",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasReferencesAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasDefault",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testDeprecatedPositionOffsetGap",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testDefaultFactoryTokenFilters",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testWordListPath",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testUnderscoreInAnalyzerName",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasMoreThanOnce",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047322326
 }
]

[
 "TEST_STARTED",
 "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:22,409][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.valid_name.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047322400,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047322410,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047322429,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047322453,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047322466,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047322475,
  "executionTime": 1354
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,837][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,837][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar_search.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323829,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,846][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323838,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323847,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323856,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,893][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,893][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar_search.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323883,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323894,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323910,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,943][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:35:23,944][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar1.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474047323924,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.analysis.AnalysisModuleTests",
  "startTimestamp": 1474047322326,
  "executionTime": 1635
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.analyze.HunspellServiceTests",
   "displayName": "org.elasticsearch.indices.analyze.HunspellServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.analyze.HunspellServiceTests",
   "children": [
    {
     "id": "ID#testLocaleDirectoryWithLocaleSpecificConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "displayName": "testLocaleDirectoryWithLocaleSpecificConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "methodName": "testLocaleDirectoryWithLocaleSpecificConfig",
     "className": "org.elasticsearch.indices.analyze.HunspellServiceTests",
     "children": []
    },
    {
     "id": "ID#testDicWithTwoAffs(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "displayName": "testDicWithTwoAffs(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "methodName": "testDicWithTwoAffs",
     "className": "org.elasticsearch.indices.analyze.HunspellServiceTests",
     "children": []
    },
    {
     "id": "ID#testLocaleDirectoryWithNodeLevelConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "displayName": "testLocaleDirectoryWithNodeLevelConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "methodName": "testLocaleDirectoryWithNodeLevelConfig",
     "className": "org.elasticsearch.indices.analyze.HunspellServiceTests",
     "children": []
    },
    {
     "id": "ID#testDicWithNoAff(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "displayName": "testDicWithNoAff(org.elasticsearch.indices.analyze.HunspellServiceTests)",
     "methodName": "testDicWithNoAff",
     "className": "org.elasticsearch.indices.analyze.HunspellServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047324103
 }
]

[
 "TEST_STARTED",
 "ID#testLocaleDirectoryWithLocaleSpecificConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocaleDirectoryWithLocaleSpecificConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)",
  "startTimestamp": 1474047324126,
  "executionTime": 3054
 }
]

[
 "TEST_STARTED",
 "ID#testDicWithTwoAffs(org.elasticsearch.indices.analyze.HunspellServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDicWithTwoAffs(org.elasticsearch.indices.analyze.HunspellServiceTests)",
  "startTimestamp": 1474047327180,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testLocaleDirectoryWithNodeLevelConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocaleDirectoryWithNodeLevelConfig(org.elasticsearch.indices.analyze.HunspellServiceTests)",
  "startTimestamp": 1474047327199,
  "executionTime": 1109
 }
]

[
 "TEST_STARTED",
 "ID#testDicWithNoAff(org.elasticsearch.indices.analyze.HunspellServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDicWithNoAff(org.elasticsearch.indices.analyze.HunspellServiceTests)",
  "startTimestamp": 1474047328309,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.analyze.HunspellServiceTests",
  "startTimestamp": 1474047324103,
  "executionTime": 4225
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "displayName": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "children": [
    {
     "id": "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "displayName": "testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "methodName": "testRandomClusterStateUpdates",
     "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
     "children": []
    },
    {
     "id": "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "displayName": "testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "methodName": "testJoiningNewClusterOnlyRemovesInMemoryIndexStructures",
     "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047328710
 }
]

[
 "TEST_STARTED",
 "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,833][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,865][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_echuwsqdcjagufg] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,867][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_albwtlgobpolzal] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,870][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_cssmovoahcewchu] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_bdcyitvsymgkgck] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,873][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_cssmovoahcewchu/hMM79elWQaeXTOO8_WhtPg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,873][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_cssmovoahcewchu/hMM79elWQaeXTOO8_WhtPg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_echuwsqdcjagufg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,890][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,891][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qtadfkpmwadqnhx] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,892][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_qtadfkpmwadqnhx/Q8PWrHeTRlyQpfIh3gaqPg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,894][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_cssmovoahcewchu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,896][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_tbseorbkdzacgrl] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,897][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_bdcyitvsymgkgck]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,906][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hmlhblijlswlglv] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,909][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_hmlhblijlswlglv/pwjTKW-KTxWomlLgCx3qsA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,912][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hmxmumqhtcojbuh] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jgrbzeaadzhjkit] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,916][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hagpcnzlvhtmvjn] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,940][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,941][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_pzygbtmetrdhzbn] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,943][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_uvcezjuoxgysplm] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,950][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_hmxmumqhtcojbuh/9j-DTGUyREihz_mPmBRuLQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,951][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_hmxmumqhtcojbuh/9j-DTGUyREihz_mPmBRuLQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,957][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,959][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,962][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,967][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,967][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:28,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_otictrjhkijpeqi] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,019][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gaxnavjtzhtbqqb] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,021][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_qtadfkpmwadqnhx/Q8PWrHeTRlyQpfIh3gaqPg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,023][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_gaxnavjtzhtbqqb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,038][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,039][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_hmxmumqhtcojbuh/9j-DTGUyREihz_mPmBRuLQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,042][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_pzygbtmetrdhzbn]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,045][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_mjpqsuhmdqdfxye] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_mjpqsuhmdqdfxye] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,048][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_mikrhefvmkjaogk] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [index [index_mikrhefvmkjaogk] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,062][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,066][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,069][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,074][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zhapdpfzqbucqmm] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,079][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ybuyghviraxlhti] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,081][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_gaxnavjtzhtbqqb/Cf0znrfySWurHO0maxBZOw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,081][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_cssmovoahcewchu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ljojmutznazxwvh] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,089][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ffwtnzhtqavuodr] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,091][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_ljojmutznazxwvh]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,094][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,095][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,153][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,157][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,158][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,159][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 10%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,160][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gpsrqwbuiykervu] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,179][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,181][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_tmoemeaeupxreve] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,184][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_dyidsxxonxpzahf] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,186][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_ffwtnzhtqavuodr]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,191][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,194][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,219][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,220][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 12%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,221][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_nddkyudkcirnqtk] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,228][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_uoggeoprhkxjdne] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_awfdhkcqjfkwccj] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,235][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_woyalhvxlwirvrq] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,238][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_mvbudnexqycumsg] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,263][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 13%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,265][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ywjuujzbtiopagy] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,268][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ccqcdihldhpcbnt] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,270][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zvnqaukczmyshah] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,272][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_dyidsxxonxpzahf, index_mikrhefvmkjaogk]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,276][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jnjclyyqdjyieyu] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,277][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_jnjclyyqdjyieyu] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,279][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_woyalhvxlwirvrq/igmUh1HJRDuh5H6NuIJ4Lw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,283][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_mjpqsuhmdqdfxye]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,290][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,292][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,296][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,298][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,304][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,304][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,310][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,310][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,313][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 14%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,315][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 15%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,315][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_mvbudnexqycumsg, index_awfdhkcqjfkwccj]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_qtadfkpmwadqnhx][2], [index_mjpqsuhmdqdfxye][2], [index_dyidsxxonxpzahf][0], [index_qtadfkpmwadqnhx][1], [index_ccqcdihldhpcbnt][1], [index_cssmovoahcewchu][2], [index_awfdhkcqjfkwccj][0], [index_mvbudnexqycumsg][2], [index_jnjclyyqdjyieyu][1], [index_cssmovoahcewchu][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,325][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,326][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,328][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,332][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,332][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,334][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,334][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,336][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,339][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 16%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,340][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 17%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,347][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_eminfovjjrkrdpy] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,350][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_pzygbtmetrdhzbn]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,353][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[index_cssmovoahcewchu][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,355][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,358][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,361][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,365][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,366][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 18%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,367][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ifrnvturqadyeqk] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,374][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ydfcqtsqdfomido] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,376][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_pzygbtmetrdhzbn/c4yzQm1VQMSvGN_wGUTvjA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,378][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_qtadfkpmwadqnhx, index_ybuyghviraxlhti]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,381][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,382][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,395][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 19%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,397][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 20%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vriursrsnmmqkbi] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,401][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_swdhkuwnqpqvqhl] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,405][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_bvmoyoveeciursl] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,408][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_mvbudnexqycumsg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_ccqcdihldhpcbnt][1], [index_cssmovoahcewchu][1], [index_mjpqsuhmdqdfxye][1], [index_ljojmutznazxwvh][2], [index_mvbudnexqycumsg][2], [index_jnjclyyqdjyieyu][1], [index_ywjuujzbtiopagy][1], [index_cssmovoahcewchu][2], [index_mvbudnexqycumsg][0], [index_mvbudnexqycumsg][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,415][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_oirhzjxobbauntl] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,419][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_mikrhefvmkjaogk/TveH0QKUT9mv9RUNvLLS4A]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,424][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [5s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,437][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [5s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,441][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [5s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,443][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [5s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,450][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [5s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,454][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 21%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,455][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fnuinjbkxwmkvtl] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,459][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_qtadfkpmwadqnhx, index_ifrnvturqadyeqk]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,465][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_lzaxxytvlrwtvze] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zxpkowjqmkdwycv] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_aggbbnwfpxlszgz] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,496][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_irhhxctnvbckaoj] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,509][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_zxpkowjqmkdwycv]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,568][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,574][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 22%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,598][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 23%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,599][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_iznpzitkeesxbuo] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,603][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qngflwsdinlfnkp] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ocqywosliijejbg] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,613][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_eupukplupajqpjq] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,629][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_wzrebzxupmpfrdm] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,635][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ydfcqtsqdfomido/PsIEHOwUSKmoksvUhbcwlg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,657][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 24%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,658][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hpzsnelrdqieycs] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_hpzsnelrdqieycs] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,661][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fahvzcjuihngqak] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_czukvhltsxqnzfw] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,685][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_edyrqwtjzfgmted] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,694][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_lzaxxytvlrwtvze, index_hpzsnelrdqieycs]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,703][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ilbfpuzacwmxxbw] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,706][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_maxqdctrxqdschj] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,709][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_iwusbshvdonseox] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,712][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_nddkyudkcirnqtk/gXniYYbvQRyZh4A035gYGA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,714][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_aggbbnwfpxlszgz, index_edyrqwtjzfgmted]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,720][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,728][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,752][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,756][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,759][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 25%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,776][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 26%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,779][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_czukvhltsxqnzfw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_hpzsnelrdqieycs][1], [index_mjpqsuhmdqdfxye][0], [index_mjpqsuhmdqdfxye][2], [index_ljojmutznazxwvh][0], [index_ljojmutznazxwvh][1], [index_qngflwsdinlfnkp][0], [index_mvbudnexqycumsg][2], [index_qtadfkpmwadqnhx][1], [index_ilbfpuzacwmxxbw][0], [index_cssmovoahcewchu][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,805][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,813][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 27%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,815][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_uyezzkoezxniijh] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,822][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jtggjsksgbqmxhp] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,826][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gbewannoceabdvc] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,828][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ifrnvturqadyeqk/71JdK58tQxuuJbwurslsQA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_mikrhefvmkjaogk/TveH0QKUT9mv9RUNvLLS4A]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,845][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_jnjclyyqdjyieyu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ledytqrircymqrr] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,854][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_bwtmqfkmvllvexv] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,856][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_iwusbshvdonseox/xEPwUzngTmmHcjSVOneojw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_edyrqwtjzfgmted, index_vriursrsnmmqkbi]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,896][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,901][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,907][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,907][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,915][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [4s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,915][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,920][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 28%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,922][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 29%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,923][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_sfousadcbttivrj] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_enhbxlixwflzhso] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,929][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_zxpkowjqmkdwycv/YkEg2EugRoyb2TXApmzmIw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,943][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vvwcbqrgtrhakti] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,947][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zotfddietkemrfo] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,949][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ywjuujzbtiopagy/tm0CSoYfT9CVsA4EmwpiKA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_vriursrsnmmqkbi]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_iznpzitkeesxbuo][0], [index_maxqdctrxqdschj][0], [index_jtggjsksgbqmxhp][2], [index_jnjclyyqdjyieyu][2], [index_bvmoyoveeciursl][0], [index_ljojmutznazxwvh][0], [index_ljojmutznazxwvh][2], [index_edyrqwtjzfgmted][1], [index_mikrhefvmkjaogk][1], [index_swdhkuwnqpqvqhl][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,960][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:29,964][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,003][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:30,014][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Final cluster state: cluster uuid: ZlOPmLSsRL23LHteNobndg%0Aversion: 0%0Astate uuid: pENlob3jRxiQQUw_v31TCw%0Afrom_diff: false%0Ameta data version: 0%0A   [index_uyezzkoezxniijh/BKMFyJ4fS362WKfRXXVKVw]: v[4]%0A      0: p_term [1], a_ids [2eM8myTnScucjLMuem7aAg]%0A      1: p_term [1], a_ids [n4xQbSayT3eZCp4g5Cu9fg]%0A      2: p_term [1], a_ids []%0A   [index_jtggjsksgbqmxhp/PQFYta7_TSimywzBjT4HIQ]: v[4]%0A      0: p_term [1], a_ids [QsifMtyPTpiZ0rgCh-JroA]%0A      1: p_term [1], a_ids [Jcvh2RCHSD68n3YymKugkA]%0A      2: p_term [1], a_ids [ykLosBnrRtGQXo6ekIQmRg]%0A   [index_swdhkuwnqpqvqhl/zzOu8_bYS0GlN5hZ6QXXVw]: v[13]%0A      0: p_term [1], a_ids [msPH3DmYSWW31P8fnigurA, 6yvzDg13TkSD1vhnx4LD_g, neP7mFzBSreOEfKOa5Z91w]%0A      1: p_term [1], a_ids [H4yiwpLUSiiOV8PxmJHjjg, vv8Z4WQrSPe6j-eRpM3Eyg, btLSaWFOQlCPJJX8VTlOTg]%0A   [index_ljojmutznazxwvh/jyBsDig5SnulrJ3lF-mqSA]: v[28]%0A      0: p_term [1], a_ids [o1Ts87M1SXqEbknoY3_67A, tSqB065RQzWDuCeHTTRbCw]%0A      1: p_term [1], a_ids [ag9D6zipTEONnAukmfRRlw, vZWtc0J6QdmxC1T42H4s4w]%0A      2: p_term [1], a_ids [Ts6D3YhyT3SL91Z69XSebQ, ug_JXmYhQPSbKNKsJE95BA]%0A   [index_mvbudnexqycumsg/o7dQaeUKRA6ER9Gj3AizMw]: v[23]%0A      0: p_term [1], a_ids [T-dDKFqdQXuBMmarO1RlLQ, iCH8n9ATRpG_0q_EDXmq_w, dPV3AfoCT4GEMSS7SErDBw]%0A      1: p_term [2], a_ids [pyC05niZQCOD0eapcdYe0g]%0A      2: p_term [2], a_ids [GpVPYmG4Sr6pbfYPlbaDBw, KPf1fF1mRR6qHzOjFDYEhA, c7EZmTU4TBuZQIIozzMZNA]%0A   [index_oirhzjxobbauntl/xuU1lg7IT8-mcrH-DDeT8g]: v[10]%0A      0: p_term [1], a_ids [fUnD2A7nQgSELAONaIvM3Q]%0A      1: p_term [1], a_ids [G4K9bXuVRLaazqk8yVWnOg]%0A   [index_ywjuujzbtiopagy/tm0CSoYfT9CVsA4EmwpiKA]: v[13]%0A      0: p_term [1], a_ids [E2ZlPI8LSYm4mbHl-syCkg, mbHKn2c1S_-E6UZRUcRf1A]%0A      1: p_term [1], a_ids [QmDYQhv6S-CyN6wJ6e74Aw, 9jOxQnlwQ3WvHoG5CqnvBw]%0A   [index_hpzsnelrdqieycs/FQUubN5QQgWsvfW_EL_ACQ]: v[9]%0A      0: p_term [1], a_ids [L45L-WbNR7C-YarxyS1dhQ, 0McWtiOSQ8GX-EAoG-SnVQ, JcsDULUSQuqZZAJ-QRbl2Q]%0A      1: p_term [1], a_ids [YOJvyJ12QT2zBWn_xVrZRA, _pgb-dr6Tyu64knrosnQoQ, whq8MglhQVOsr-UsIpHPBQ]%0A      2: p_term [1], a_ids [UqNxty4zSUylmFCCtKmJwQ]%0A   [index_edyrqwtjzfgmted/99UoNqwCSUuaR_2XdL_dIA]: v[11]%0A      0: p_term [1], a_ids [rAsk0wHoSzeLDMcL_yOfow, GmB0wTOuTlOn7joZKqquIw]%0A      1: p_term [1], a_ids [E3hfOJq7QU2fhI1jOwdvRg]%0A   [index_maxqdctrxqdschj/28tuxv3hRledgEQW4ZHh2Q]: v[3]%0A      0: p_term [1], a_ids [KDhRhdqvRwiTAUa22JQ-Ug]%0A   [index_bwtmqfkmvllvexv/aLGuA8iDRjqfj8HaG-gSMQ]: v[3]%0A      0: p_term [1], a_ids [2ePj8PXOQnG1z5xAqGd_Kg]%0A   [index_iwusbshvdonseox/xEPwUzngTmmHcjSVOneojw]: v[4]%0A      0: p_term [1], a_ids [O3jSMoIyTiKAoSJd47YO3w]%0A   [index_czukvhltsxqnzfw/0aI--Q9uTSaNgN0FqH68OQ]: v[6]%0A      0: p_term [1], a_ids [5263-TAkTy280OjHFR98fA]%0A   [index_cssmovoahcewchu/hMM79elWQaeXTOO8_WhtPg]: v[32]%0A      0: p_term [2], a_ids [o2j_0LN7RcmNLwLOz2JYCA]%0A      1: p_term [3], a_ids [Y503mFy-RNuF3S81VERN1g]%0A      2: p_term [2], a_ids [NyFf1EWsRfq0rnyTB_eHjg]%0A   [index_bvmoyoveeciursl/MtbBF0_kSOCrraLP9ffDOw]: v[10]%0A      0: p_term [1], a_ids [3GV3KFgfRyqp9mK8cg46rA]%0A      1: p_term [1], a_ids [BuouuWdYQKqjQt9_j3FVDw]%0A   [index_ocqywosliijejbg/4TXOotjwSrizQAOZUglwfg]: v[10]%0A      0: p_term [1], a_ids [BT2eT38hRFKTvHiuzL_gzw, 8TzrVCqERi-wD_yTzOGERg, 8eQAZbpgRGen4GWIdvYfwQ]%0A      1: p_term [1], a_ids [s9HCPHUPTISZFPgfIAQ0AA, _hr8bfPtThCfiyFtATRoTA, WQRnnoroRDi56WVfpCIBMw]%0A      2: p_term [1], a_ids [YEs1UYCPRHCGfO5SnCkxLA, bFmdDAEzRuaXbl_YmqHrEA]%0A   [index_gbewannoceabdvc/yG0M0NMWQSi0BGs6PhWznw]: v[3]%0A      0: p_term [1], a_ids [_v6vuNY1QkOci-zXR3cPvA]%0A   [index_ledytqrircymqrr/DObhJUNqR6OuPRYC9PLxkQ]: v[4]%0A      0: p_term [1], a_ids [5hpO-na1QuueP-qz4LBJQQ]%0A      1: p_term [1], a_ids []%0A      2: p_term [1], a_ids [uLfj48JZRd618XZ3HcuMcQ]%0A   [index_pzygbtmetrdhzbn/c4yzQm1VQMSvGN_wGUTvjA]: v[20]%0A      0: p_term [0], a_ids [rPyzhkS3Rhe3bCRMGJRvPw, SR1f0M_5QNm8raYduOArvA]%0A      1: p_term [1], a_ids [umoDra3PTJ68Zo_SPGHRFQ, DMLYKCpiQ7CAJCdCzVfjYA, 9bTp0L7lTuSp3eVrN-OxbA]%0A   [index_uoggeoprhkxjdne/cyZK4tXnRuCnrudi2XdHTg]: v[12]%0A      0: p_term [1], a_ids [6wWEBc6-Tx-wgnoyaqYIVQ]%0A      1: p_term [1], a_ids [dTjsVicFRK-pjXniYjVjYg]%0A   [index_iznpzitkeesxbuo/aYOc42JeQNOBC6Xdt6R0og]: v[6]%0A      0: p_term [1], a_ids [DDU73_YtTPu3DYFtH5zpTg, xSC1J2mnSXqVrPshkz8d1w, CpO9U5L3SLqwttmYas2SMg]%0A   [index_ilbfpuzacwmxxbw/h_E8wDYEQY2cjLFoKVdWbg]: v[6]%0A      0: p_term [1], a_ids [9vsaQamtSXW-xMx-J8kqOg, XCqeuxCTQ56_cvRXD-Mg3Q]%0A      1: p_term [1], a_ids [MOy2lEDhSR2_QRSEtj8QXg]%0A   [index_mikrhefvmkjaogk/TveH0QKUT9mv9RUNvLLS4A]: v[18]%0A      0: p_term [2], a_ids [JDXW-lT2Q_6a_N6Tk3MHIw]%0A      1: p_term [2], a_ids [9OlCvSU2TUOmHQkDppqeBg]%0A   [index_nddkyudkcirnqtk/gXniYYbvQRyZh4A035gYGA]: v[12]%0A      0: p_term [1], a_ids [HYBgJAUPQHm5uu73tj6MwQ]%0A      1: p_term [0], a_ids [zWSyHBc8R3WEBwrfiJLkJQ]%0A   [index_vriursrsnmmqkbi/gre6wH_2T3CNds0Gyj8swg]: v[13]%0A      0: p_term [1], a_ids [fFsHR3CEQb2L9NCdrrbj3A, CYF0hVNdRdyJ6EU5843m2g, cswgNthMQxamkK5UmvgtGg]%0A   [index_dyidsxxonxpzahf/vPWo0Yv6Qi6cfmELrRo_-A]: v[15]%0A      0: p_term [1], a_ids [aLb2watCSZyG-sCQnsZqJQ, BwNVmB6vTPiUBkE8Cp1Y9w]%0A   [index_zxpkowjqmkdwycv/YkEg2EugRoyb2TXApmzmIw]: v[9]%0A      0: p_term [1], a_ids [ExQ_Net-SCmxoMtMa61HnA]%0A      1: p_term [1], a_ids [o4W3_nAHR9uqLSCMd8vXDg]%0A   [index_ifrnvturqadyeqk/71JdK58tQxuuJbwurslsQA]: v[9]%0A      0: p_term [1], a_ids [6cHtniZMR2yWrMn5Pri-Hg, 7R7Nf9GfQCOcqFvbcv3RYQ, -h-W8CeDTvC9YTqp55Rc0g]%0A   [index_qtadfkpmwadqnhx/Q8PWrHeTRlyQpfIh3gaqPg]: v[36]%0A      0: p_term [2], a_ids [hLaoTe7mSrmvARwgymVbSg, 45OaxOFXRaSPBgBDqMWh5Q, BKOuVYCYSbO6G3KP9g16oQ]%0A      1: p_term [2], a_ids [ahEGfHV_QaeXX2x6xHnv0A, L6jF6PSSQHiLQyu1h0boDg]%0A      2: p_term [2], a_ids [WD7UF4pvSquJruJ1rUrzmQ, 5-71xwN7RQOjKswCNnfmRw]%0A   [index_enhbxlixwflzhso/6enobvfCR_60R1VtXuxJ8Q]: v[2]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A   [index_zotfddietkemrfo/WKxjgYJiRzmRm6puxW03Yg]: v[3]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A      2: p_term [1], a_ids []%0A   [index_irhhxctnvbckaoj/U-4z4bAxSgyCrUL48T123w]: v[4]%0A      0: p_term [1], a_ids [xp4jt1izSL2xXO0B3kfaSQ]%0A      1: p_term [0], a_ids [JSyxVtv1THWqsoI6-Ab_IQ, fmx_6vmjRhSYB9xo7zMH3A]%0A   [index_fahvzcjuihngqak/bzhP-TKJTW-rmMVJQRC5ZA]: v[3]%0A      0: p_term [1], a_ids [KFGjnwA9TuCuhhnjA5wBkw]%0A   [index_aggbbnwfpxlszgz/DkC_-7LxRQmJmBC5Sguzvw]: v[12]%0A      0: p_term [1], a_ids [eOGJ3FNlT0WwCPxesHGUhw]%0A      1: p_term [1], a_ids [MPHIw2h7Qya9PYozMGqcmQ]%0A      2: p_term [1], a_ids [BM7ITqbPRoaEF3l25Vonyg]%0A   [index_jnjclyyqdjyieyu/-pH3g4BcQW-JwYW42jzZXg]: v[23]%0A      0: p_term [1], a_ids [CtpdJIAgSzSwtQjvo6fRDQ]%0A      1: p_term [0], a_ids [H_z55CWKRdOvwrgAn_rczA]%0A      2: p_term [1], a_ids [zZAaX9rfSxS6cOXaerMKZw]%0A   [index_qngflwsdinlfnkp/CDLI3peiRFKxuarzKMiUjw]: v[5]%0A      0: p_term [1], a_ids [H2m8oFKcRQeOCzAoy-cgtQ, r6bSF1heRIS1onMMJb4-Aw]%0A   [index_gaxnavjtzhtbqqb/Cf0znrfySWurHO0maxBZOw]: v[10]%0A      0: p_term [1], a_ids [DLo44Bt-SV6CM34RvsZFIQ]%0A      1: p_term [1], a_ids [84_B4PNmS-C9h25fcEEsWg]%0A      2: p_term [1], a_ids [OK3Yy_buSdW3VnZhvnmN2w]%0A   [index_mjpqsuhmdqdfxye/1imFhy9CQd28Drzvui7UFg]: v[27]%0A      0: p_term [1], a_ids [zE9fyUnNTX2BV9GWIbKLkg, jVMDUfGbSUGDL7vYa_rZaw, 0Cu09z28QYaUVXkdMMovnQ]%0A      1: p_term [1], a_ids [hi6eEqmcStqF2qoczYx2KQ, xGr90r98TEO0z1ZxFDXGCw, OsxgqfeLSjexqnAOXQPpMA]%0A      2: p_term [0], a_ids [9hJida_NTt-F1ItJzklAsg, jiBZu2wfRniHG2PJlcSOig, IBmtjjl4SCymJ-mGo_0bCw]%0A   [index_vvwcbqrgtrhakti/EaCUSDIbSyikIdclK3HDnw]: v[2]%0A      0: p_term [1], a_ids []%0A   [index_sfousadcbttivrj/aIgI-2A5RmKO55_SDWFV0A]: v[2]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0Ablocks: %0A   index_nddkyudkcirnqtk:%0A      4,index closed, blocks READ,WRITE   index_ifrnvturqadyeqk:%0A      4,index closed, blocks READ,WRITE   index_ywjuujzbtiopagy:%0A      4,index closed, blocks READ,WRITE   index_pzygbtmetrdhzbn:%0A      4,index closed, blocks READ,WRITE   index_iwusbshvdonseox:%0A      4,index closed, blocks READ,WRITE   index_gaxnavjtzhtbqqb:%0A      4,index closed, blocks READ,WRITE   index_zxpkowjqmkdwycv:%0A      4,index closed, blocks READ,WRITE%0Anodes: %0A   {node_SNtllQAo}{HvuqQuetT22DbB8crh_lQw}{local}{local[825]}%0A   {node_avLodosR}{6lhxfc66T"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "F6A-vhDZCWXXA}{local}{local[822]}%0A   {node_bTcIWVPZ}{9XZW2A14Qpa8cu2wEAuMjw}{local}{local[823]}%0A   {node_HUGrjBHU}{HY9aw-F5SaaVLlaNHMzwtg}{local}{local[824]}%0A   {node_QwmjBLNg}{0FmBYbW2Tea4zZfup_8SDA}{local}{local[826]}%0A   {node_cuRcKdrB}{648bCY6CRm2Yh8VCvKkRfA}{local}{local[821]}, local, master%0Arouting_table (version 0):%0A-- index [[index_qtadfkpmwadqnhx/Q8PWrHeTRlyQpfIh3gaqPg]]%0A----shard_id [index_qtadfkpmwadqnhx][0]%0A--------[index_qtadfkpmwadqnhx][0], node[node_cuRcKdrB], [R], s[STARTED], a[id=hLaoTe7mSrmvARwgymVbSg]%0A--------[index_qtadfkpmwadqnhx][0], node[node_HUGrjBHU], relocating [node_avLodosR], [R], s[RELOCATING], a[id=BKOuVYCYSbO6G3KP9g16oQ, rId=XD6X6_c7RJmt4VCtmeRuHw]%0A--------[index_qtadfkpmwadqnhx][0], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=45OaxOFXRaSPBgBDqMWh5Q, rId=b2gQhFD8SSWSEzFUMHUBBQ]%0A----shard_id [index_qtadfkpmwadqnhx][1]%0A--------[index_qtadfkpmwadqnhx][1], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=L6jF6PSSQHiLQyu1h0boDg, rId=40BAuVhOThGPQmq5PQoMjQ]%0A--------[index_qtadfkpmwadqnhx][1], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=ahEGfHV_QaeXX2x6xHnv0A, rId=R2yUYVUdQsaNQ_o-7bK4vA]%0A--------[index_qtadfkpmwadqnhx][1], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=smqNrv2yQM6UDw-af2-4WQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:35:29.931Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A----shard_id [index_qtadfkpmwadqnhx][2]%0A--------[index_qtadfkpmwadqnhx][2], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=d21nV3VVTq2MAYUvVw898A], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:35:29.781Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A--------[index_qtadfkpmwadqnhx][2], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=5-71xwN7RQOjKswCNnfmRw, rId=aDEztA1lSdaJc8VjFu-aog]%0A--------[index_qtadfkpmwadqnhx][2], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=WD7UF4pvSquJruJ1rUrzmQ, rId=QZXU-RRFSu-6BEeHdOwpYQ]%0A%0A-- index [[index_sfousadcbttivrj/aIgI-2A5RmKO55_SDWFV0A]]%0A----shard_id [index_sfousadcbttivrj][0]%0A--------[index_sfousadcbttivrj][0], node[node_avLodosR], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=U1OHkrpVT3OS7aychtcKlA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.924Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_sfousadcbttivrj][1]%0A--------[index_sfousadcbttivrj][1], node[node_bTcIWVPZ], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=IByl_U0YSuqBYEdQAV-MWw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.924Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_hpzsnelrdqieycs/FQUubN5QQgWsvfW_EL_ACQ]]%0A----shard_id [index_hpzsnelrdqieycs][0]%0A--------[index_hpzsnelrdqieycs][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=L45L-WbNR7C-YarxyS1dhQ, rId=9vc15XdSQ5iomDEwznlINw]%0A--------[index_hpzsnelrdqieycs][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=0McWtiOSQ8GX-EAoG-SnVQ, rId=TD02KgMWQdGWlUg5-eudRg]%0A--------[index_hpzsnelrdqieycs][0], node[node_bTcIWVPZ], [R], s[STARTED], a[id=JcsDULUSQuqZZAJ-QRbl2Q]%0A----shard_id [index_hpzsnelrdqieycs][1]%0A--------[index_hpzsnelrdqieycs][1], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=_pgb-dr6Tyu64knrosnQoQ, rId=hqPCQf0VT0O_bJP_YhEevA]%0A--------[index_hpzsnelrdqieycs][1], node[node_HUGrjBHU], [R], s[STARTED], a[id=YOJvyJ12QT2zBWn_xVrZRA]%0A--------[index_hpzsnelrdqieycs][1], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=whq8MglhQVOsr-UsIpHPBQ, rId=-2xhA7JVT8uXGLHfHCJS2A]%0A----shard_id [index_hpzsnelrdqieycs][2]%0A--------[index_hpzsnelrdqieycs][2], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=UqNxty4zSUylmFCCtKmJwQ, rId=c6h_nNCFTKWa06HkcWH7Kw]%0A--------[index_hpzsnelrdqieycs][2], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=u8QY-x0jSUaQ2AP8ceRBMQ], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.694Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_hpzsnelrdqieycs][2], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=FCIojhpZSMCjjXHI_L7KnA], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.694Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_dyidsxxonxpzahf/vPWo0Yv6Qi6cfmELrRo_-A]]%0A----shard_id [index_dyidsxxonxpzahf][0]%0A--------[index_dyidsxxonxpzahf][0], node[node_cuRcKdrB], [P], s[STARTED], a[id=aLb2watCSZyG-sCQnsZqJQ]%0A--------[index_dyidsxxonxpzahf][0], node[node_avLodosR], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=BwNVmB6vTPiUBkE8Cp1Y9w, rId=cAEpxFc2QViPrDp7hMCE_g]%0A%0A-- index [[index_ocqywosliijejbg/4TXOotjwSrizQAOZUglwfg]]%0A----shard_id [index_ocqywosliijejbg][0]%0A--------[index_ocqywosliijejbg][0], node[node_cuRcKdrB], [R], s[STARTED], a[id=8eQAZbpgRGen4GWIdvYfwQ]%0A--------[index_ocqywosliijejbg][0], node[node_SNtllQAo], relocating [node_avLodosR], [R], s[RELOCATING], a[id=BT2eT38hRFKTvHiuzL_gzw, rId=D_stL-QsSnmby2rocAJkaA]%0A--------[index_ocqywosliijejbg][0], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=8TzrVCqERi-wD_yTzOGERg, rId=SokD4g4ETPSDq6a3NYz0Mw]%0A----shard_id [index_ocqywosliijejbg][1]%0A--------[index_ocqywosliijejbg][1], node[node_cuRcKdrB], [R], s[STARTED], a[id=_hr8bfPtThCfiyFtATRoTA]%0A--------[index_ocqywosliijejbg][1], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=WQRnnoroRDi56WVfpCIBMw, rId=WOWaXuqdQkWmkOQjSxXzFQ]%0A--------[index_ocqywosliijejbg][1], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=s9HCPHUPTISZFPgfIAQ0AA, rId=aJCgAeVQRduPmbeL3JbGIw]%0A----shard_id [index_ocqywosliijejbg][2]%0A--------[index_ocqywosliijejbg][2], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=W7U7vM0cQQ2dbv-oqNc0wg]%0A--------[index_ocqywosliijejbg][2], node[node_SNtllQAo], [R], s[STARTED], a[id=bFmdDAEzRuaXbl_YmqHrEA]%0A--------[index_ocqywosliijejbg][2], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], s[RELOCATING], a[id=YEs1UYCPRHCGfO5SnCkxLA, rId=HA0pHZ4wTPac91iyG8YlLQ]%0A%0A-- index [[index_cssmovoahcewchu/hMM79elWQaeXTOO8_WhtPg]]%0A----shard_id [index_cssmovoahcewchu][0]%0A--------[index_cssmovoahcewchu][0], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=o2j_0LN7RcmNLwLOz2JYCA, rId=xRv_nM7MRyG2nKDtwsx1Ow]%0A----shard_id [index_cssmovoahcewchu][1]%0A--------[index_cssmovoahcewchu][1], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=Y503mFy-RNuF3S81VERN1g, rId=CdOPFcOWQgKFNudI7myh2A]%0A----shard_id [index_cssmovoahcewchu][2]%0A--------[index_cssmovoahcewchu][2], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=NyFf1EWsRfq0rnyTB_eHjg, rId=dExkLRMNQAONJs2HtCjSyg]%0A%0A-- index [[index_enhbxlixwflzhso/6enobvfCR_60R1VtXuxJ8Q]]%0A----shard_id [index_enhbxlixwflzhso][0]%0A--------[index_enhbxlixwflzhso][0], node[node_cuRcKdrB], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=DZw0yBMBQZKj87hhljehRA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_enhbxlixwflzhso][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_enhbxlixwflzhso][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_enhbxlixwflzhso][1]%0A--------[index_enhbxlixwflzhso][1], node[node_SNtllQAo], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=ezKuS7HKSbqaPrhO7d_y2Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[in"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "dex_enhbxlixwflzhso][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_enhbxlixwflzhso][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_ledytqrircymqrr/DObhJUNqR6OuPRYC9PLxkQ]]%0A----shard_id [index_ledytqrircymqrr][0]%0A--------[index_ledytqrircymqrr][0], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=DfmNXwD9RI6wK8WDLZml4Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][0], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=5hpO-na1QuueP-qz4LBJQQ, rId=hciy7ZcURBGmCb6SdY6L0Q]%0A--------[index_ledytqrircymqrr][0], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=VxDolSGmRfyXVuzSYaiLKw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_ledytqrircymqrr][1]%0A--------[index_ledytqrircymqrr][1], node[node_HUGrjBHU], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=6vlN4TDSQXioZV6yc0DorQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_ledytqrircymqrr][2]%0A--------[index_ledytqrircymqrr][2], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=uLfj48JZRd618XZ3HcuMcQ, rId=av_K3AIHT7uKvvcSWhBEJw]%0A--------[index_ledytqrircymqrr][2], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=36sGcu2IQTaTMU__-EMZlQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][2], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=0urb7P64TE-nrlqgWhsqBQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_jnjclyyqdjyieyu/-pH3g4BcQW-JwYW42jzZXg]]%0A----shard_id [index_jnjclyyqdjyieyu][0]%0A--------[index_jnjclyyqdjyieyu][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=CtpdJIAgSzSwtQjvo6fRDQ, rId=alTRMinPR2WcHd9rPQS5LA]%0A----shard_id [index_jnjclyyqdjyieyu][1]%0A--------[index_jnjclyyqdjyieyu][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=H_z55CWKRdOvwrgAn_rczA, rId=bIH1v7EPQY2IiNvEXxfEQQ]%0A----shard_id [index_jnjclyyqdjyieyu][2]%0A--------[index_jnjclyyqdjyieyu][2], node[node_SNtllQAo], [P], s[STARTED], a[id=zZAaX9rfSxS6cOXaerMKZw]%0A%0A-- index [[index_swdhkuwnqpqvqhl/zzOu8_bYS0GlN5hZ6QXXVw]]%0A----shard_id [index_swdhkuwnqpqvqhl][0]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_cuRcKdrB], [P], s[STARTED], a[id=msPH3DmYSWW31P8fnigurA]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=neP7mFzBSreOEfKOa5Z91w, rId=LBwxdb2mQ-2nnq5nqX5cPw]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_SNtllQAo], relocating [node_avLodosR], [R], s[RELOCATING], a[id=6yvzDg13TkSD1vhnx4LD_g, rId=FeQr5UeiSC2oU3YbvuJJSQ]%0A----shard_id [index_swdhkuwnqpqvqhl][1]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [R], s[RELOCATING], a[id=btLSaWFOQlCPJJX8VTlOTg, rId=fEjuJKIJQ8GGpXGORuXrww]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=H4yiwpLUSiiOV8PxmJHjjg, rId=Fry7neuQRsSFYIvIxD0vqQ]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_avLodosR], [P], s[STARTED], a[id=vv8Z4WQrSPe6j-eRpM3Eyg]%0A%0A-- index [[index_mjpqsuhmdqdfxye/1imFhy9CQd28Drzvui7UFg]]%0A----shard_id [index_mjpqsuhmdqdfxye][0]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=0Cu09z28QYaUVXkdMMovnQ, rId=Leek5KTAQC6gs-EiH-yd8Q]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=jVMDUfGbSUGDL7vYa_rZaw, rId=Bu1zZ5yVTB-Z7PIiEKMwHQ]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_bTcIWVPZ], [R], s[STARTED], a[id=zE9fyUnNTX2BV9GWIbKLkg]%0A----shard_id [index_mjpqsuhmdqdfxye][1]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_cuRcKdrB], [R], s[STARTED], a[id=hi6eEqmcStqF2qoczYx2KQ]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=OsxgqfeLSjexqnAOXQPpMA, rId=fEBTO2aXRgWgLWReIrJVfA]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=xGr90r98TEO0z1ZxFDXGCw, rId=JwMUGhuUTLaw3oJm8QDQPw]%0A----shard_id [index_mjpqsuhmdqdfxye][2]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=9hJida_NTt-F1ItJzklAsg, rId=d9ylqGAiQCu3Ayevl1BJaw]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=IBmtjjl4SCymJ-mGo_0bCw, rId=mxwD0ZADT9KpfZOWlSEyjA]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_bTcIWVPZ], [R], s[STARTED], a[id=jiBZu2wfRniHG2PJlcSOig]%0A%0A-- index [[index_czukvhltsxqnzfw/0aI--Q9uTSaNgN0FqH68OQ]]%0A----shard_id [index_czukvhltsxqnzfw][0]%0A--------[index_czukvhltsxqnzfw][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=5263-TAkTy280OjHFR98fA, rId=BiG29Jf_Q7OnPuHY2gDdeQ]%0A%0A-- index [[index_uoggeoprhkxjdne/cyZK4tXnRuCnrudi2XdHTg]]%0A----shard_id [index_uoggeoprhkxjdne][0]%0A--------[index_uoggeoprhkxjdne][0], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=6wWEBc6-Tx-wgnoyaqYIVQ, rId=bFj8h5xQSnCs1T9YwHnijw]%0A----shard_id [index_uoggeoprhkxjdne][1]%0A--------[index_uoggeoprhkxjdne][1], node[node_avLodosR], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=dTjsVicFRK-pjXniYjVjYg, rId=gbiuRLrwQBeA1afAQfRx-Q]%0A%0A-- index [[index_uyezzkoezxniijh/BKMFyJ4fS362WKfRXXVKVw]]%0A----shard_id [index_uyezzkoezxniijh][0]%0A--------[index_uyezzkoezxniijh][0], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=fOz7aV1YRsCgonPR0dIr5A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=2eM8myTnScucjLMuem7aAg, rId=NCd8WK6JRp6IysfqqhbR1Q]%0A--------[index_uyezzkoezxniijh][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=VrAfGJ9tSdCbv4gu9_XU4A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_uyezzkoezxniijh][1]%0A--------[index_uyezzkoezxniijh][1], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=e-L0THwRRjmxR4A-yFJ6Pw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][1], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=SEgpuIW3Q96miiRA5R4tAQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][1], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=n4xQbSayT3eZCp4g5Cu9fg, rId=uDY0tHUeR3KUfvjVJw2bjA]%0A----shard_id [index_uyezzkoezxniijh][2]%0A--------[index_uyezzkoezxniijh][2], node[node_avLodosR], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=7F4ausK8R_iAZqcAad06TA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, a"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "llocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_bwtmqfkmvllvexv/aLGuA8iDRjqfj8HaG-gSMQ]]%0A----shard_id [index_bwtmqfkmvllvexv][0]%0A--------[index_bwtmqfkmvllvexv][0], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=jzixIrjzQgy8UlcIINSgUg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.854Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_bwtmqfkmvllvexv][0], node[node_SNtllQAo], relocating [node_avLodosR], [P], s[RELOCATING], a[id=2ePj8PXOQnG1z5xAqGd_Kg, rId=u1DWrLIKRuOg2MhM17iSoQ]%0A--------[index_bwtmqfkmvllvexv][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Tbe3G5T1SiS9LVQHAVNkHQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.854Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_iznpzitkeesxbuo/aYOc42JeQNOBC6Xdt6R0og]]%0A----shard_id [index_iznpzitkeesxbuo][0]%0A--------[index_iznpzitkeesxbuo][0], node[node_SNtllQAo], [R], s[STARTED], a[id=CpO9U5L3SLqwttmYas2SMg]%0A--------[index_iznpzitkeesxbuo][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=xSC1J2mnSXqVrPshkz8d1w, rId=XGQyF4ZhTNy-yFXCA1iSVw]%0A--------[index_iznpzitkeesxbuo][0], node[node_bTcIWVPZ], [R], s[STARTED], a[id=DDU73_YtTPu3DYFtH5zpTg]%0A%0A-- index [[index_ljojmutznazxwvh/jyBsDig5SnulrJ3lF-mqSA]]%0A----shard_id [index_ljojmutznazxwvh][0]%0A--------[index_ljojmutznazxwvh][0], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=tSqB065RQzWDuCeHTTRbCw, rId=211NuW3VSJ6cNCL26U3kMg]%0A--------[index_ljojmutznazxwvh][0], node[node_avLodosR], [R], s[STARTED], a[id=o1Ts87M1SXqEbknoY3_67A]%0A----shard_id [index_ljojmutznazxwvh][1]%0A--------[index_ljojmutznazxwvh][1], node[node_avLodosR], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=ag9D6zipTEONnAukmfRRlw, rId=gj8UGz3fQgmNSW33495TbQ]%0A--------[index_ljojmutznazxwvh][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=vZWtc0J6QdmxC1T42H4s4w, rId=CYqtEIAPSIua-YLUm-msHQ]%0A----shard_id [index_ljojmutznazxwvh][2]%0A--------[index_ljojmutznazxwvh][2], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=ug_JXmYhQPSbKNKsJE95BA, rId=iP5QxjH6QhW34fk52SIQZw]%0A--------[index_ljojmutznazxwvh][2], node[node_avLodosR], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=Ts6D3YhyT3SL91Z69XSebQ, rId=p_YcNwNJRUa-QWhGX9cFfg]%0A%0A-- index [[index_irhhxctnvbckaoj/U-4z4bAxSgyCrUL48T123w]]%0A----shard_id [index_irhhxctnvbckaoj][0]%0A--------[index_irhhxctnvbckaoj][0], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=xp4jt1izSL2xXO0B3kfaSQ, rId=iZB4GecyR0-uoZTLroK1Pw]%0A--------[index_irhhxctnvbckaoj][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=eRl0hNQZTUCaFi5KtKUm9A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.496Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_irhhxctnvbckaoj][1]%0A--------[index_irhhxctnvbckaoj][1], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=fmx_6vmjRhSYB9xo7zMH3A, rId=4JI08jdDQryaAtW3n2WqXw]%0A--------[index_irhhxctnvbckaoj][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=JSyxVtv1THWqsoI6-Ab_IQ, rId=WXudBkErRAekJfDyD2RxqA]%0A%0A-- index [[index_jtggjsksgbqmxhp/PQFYta7_TSimywzBjT4HIQ]]%0A----shard_id [index_jtggjsksgbqmxhp][0]%0A--------[index_jtggjsksgbqmxhp][0], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=QsifMtyPTpiZ0rgCh-JroA, rId=FPAqPGT0Q_aNt3PH3QMsWw]%0A--------[index_jtggjsksgbqmxhp][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=byK2ha3MTrO24uIf7F8PiQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.822Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_jtggjsksgbqmxhp][1]%0A--------[index_jtggjsksgbqmxhp][1], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=Jcvh2RCHSD68n3YymKugkA, rId=agfuRP64Tu2nx8FQrzuu9Q]%0A--------[index_jtggjsksgbqmxhp][1], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=FIymsLlVRqCoSmNHbeO3-w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.822Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_jtggjsksgbqmxhp][2]%0A--------[index_jtggjsksgbqmxhp][2], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=2ky8RnjER5uJEu0uxcO6FA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.822Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_jtggjsksgbqmxhp][2], node[node_SNtllQAo], [P], s[STARTED], a[id=ykLosBnrRtGQXo6ekIQmRg]%0A%0A-- index [[index_edyrqwtjzfgmted/99UoNqwCSUuaR_2XdL_dIA]]%0A----shard_id [index_edyrqwtjzfgmted][0]%0A--------[index_edyrqwtjzfgmted][0], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=E4e4xSkoRs6QOsnn-mwS9w], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.859Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_edyrqwtjzfgmted][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=GmB0wTOuTlOn7joZKqquIw, rId=Snp8rM94Rb-UW8aseABN0A]%0A--------[index_edyrqwtjzfgmted][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [R], s[RELOCATING], a[id=rAsk0wHoSzeLDMcL_yOfow, rId=I-ZY4fA0SyOAchXiGO9gQg]%0A----shard_id [index_edyrqwtjzfgmted][1]%0A--------[index_edyrqwtjzfgmted][1], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=eh7cfA3TTi6DcWerqRIkgQ], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.859Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_edyrqwtjzfgmted][1], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=_bdoGRPxTROhCtry87UphA], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.859Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_edyrqwtjzfgmted][1], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], s[RELOCATING], a[id=E3hfOJq7QU2fhI1jOwdvRg, rId=GmxKeNlUQ7W_X-WR3v6ARg]%0A%0A-- index [[index_vvwcbqrgtrhakti/EaCUSDIbSyikIdclK3HDnw]]%0A----shard_id [index_vvwcbqrgtrhakti][0]%0A--------[index_vvwcbqrgtrhakti][0], node[node_bTcIWVPZ], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=LMtDKCOpR5GvJ4eV5IOboA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.944Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_zotfddietkemrfo/WKxjgYJiRzmRm6puxW03Yg]]%0A----shard_id [index_zotfddietkemrfo][0]%0A--------[index_zotfddietkemrfo][0], node[node_HUGrjBHU], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=oKgj3zTDQResQw5ryb7ZJA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.947Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_zotfddietkemrfo][1]%0A--------[index_zotfddietkemrfo][1], node[node_avLodosR], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=eDXNrXv-T5G0IojBFeZKGA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.947Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_zotfddietkemrfo][2]%0A--------[index_zotfddietkemrfo][2], node[node_cuRcKdrB], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=COX0PhoASHSWu0tlHWqkTQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.947Z], delayed=false, allocation_status[deciders_throttled]]%0A%0A-- index [[index_qngflwsdinlfnkp/CDLI3peiRFKxuarzKMiUjw]]%0A----shard_id [index_qngflwsdinlfnkp][0]%0A--------[index_qngflwsdinlfnkp][0], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=r6bSF1heRIS1onMMJb4-Aw, rId=MV8W8mDgQmOP_QLRTo5QNw]%0A--------[index_qngflwsdinlfnkp][0], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=H2m8oFKcRQeOCzAoy-cgtQ, rId=9No63tpz"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "RMujufgn8Ij4cQ]%0A%0A-- index [[index_mvbudnexqycumsg/o7dQaeUKRA6ER9Gj3AizMw]]%0A----shard_id [index_mvbudnexqycumsg][0]%0A--------[index_mvbudnexqycumsg][0], node[node_cuRcKdrB], [P], s[STARTED], a[id=dPV3AfoCT4GEMSS7SErDBw]%0A--------[index_mvbudnexqycumsg][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=T-dDKFqdQXuBMmarO1RlLQ, rId=mANIh-uOQfGT5TGJlxUQWQ]%0A--------[index_mvbudnexqycumsg][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [R], s[RELOCATING], a[id=iCH8n9ATRpG_0q_EDXmq_w, rId=7YKyV4RDT323FQ7AoPNaqQ]%0A----shard_id [index_mvbudnexqycumsg][1]%0A--------[index_mvbudnexqycumsg][1], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=cN4xDKW1Qm2gxqmiarPepA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:35:29.955Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A--------[index_mvbudnexqycumsg][1], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Dt1kLG8WQNCzxApy-_g0SQ], unassigned_info[[reason=PRIMARY_FAILED], at[2016-09-16T17:35:29.955Z], delayed=false, details[primary failed while replica initializing], allocation_status[no_attempt]]%0A--------[index_mvbudnexqycumsg][1], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=pyC05niZQCOD0eapcdYe0g, rId=PXBuosqqTo6IkIQQrn5Txw]%0A----shard_id [index_mvbudnexqycumsg][2]%0A--------[index_mvbudnexqycumsg][2], node[node_cuRcKdrB], [R], s[STARTED], a[id=c7EZmTU4TBuZQIIozzMZNA]%0A--------[index_mvbudnexqycumsg][2], node[node_avLodosR], [P], s[STARTED], a[id=GpVPYmG4Sr6pbfYPlbaDBw]%0A--------[index_mvbudnexqycumsg][2], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=KPf1fF1mRR6qHzOjFDYEhA, rId=HkP8JLSpTiil4fXZ6d0l9A]%0A%0A-- index [[index_aggbbnwfpxlszgz/DkC_-7LxRQmJmBC5Sguzvw]]%0A----shard_id [index_aggbbnwfpxlszgz][0]%0A--------[index_aggbbnwfpxlszgz][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=eOGJ3FNlT0WwCPxesHGUhw, rId=AotOPGjfTRuTofv588-HWA]%0A----shard_id [index_aggbbnwfpxlszgz][1]%0A--------[index_aggbbnwfpxlszgz][1], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=MPHIw2h7Qya9PYozMGqcmQ, rId=6OLMuUcCRnuju8eSXBF8TA]%0A----shard_id [index_aggbbnwfpxlszgz][2]%0A--------[index_aggbbnwfpxlszgz][2], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=BM7ITqbPRoaEF3l25Vonyg, rId=cTrzdgbkRji5pP1UCnJZKQ]%0A%0A-- index [[index_bvmoyoveeciursl/MtbBF0_kSOCrraLP9ffDOw]]%0A----shard_id [index_bvmoyoveeciursl][0]%0A--------[index_bvmoyoveeciursl][0], node[node_avLodosR], [P], s[STARTED], a[id=3GV3KFgfRyqp9mK8cg46rA]%0A----shard_id [index_bvmoyoveeciursl][1]%0A--------[index_bvmoyoveeciursl][1], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=BuouuWdYQKqjQt9_j3FVDw, rId=iRNI1vceSLalSqq79ZCC8g]%0A%0A-- index [[index_oirhzjxobbauntl/xuU1lg7IT8-mcrH-DDeT8g]]%0A----shard_id [index_oirhzjxobbauntl][0]%0A--------[index_oirhzjxobbauntl][0], node[node_bTcIWVPZ], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=fUnD2A7nQgSELAONaIvM3Q, rId=LfTby2x0Q768WgXi4P7vUg]%0A----shard_id [index_oirhzjxobbauntl][1]%0A--------[index_oirhzjxobbauntl][1], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=G4K9bXuVRLaazqk8yVWnOg, rId=9eqkuEbUS5Ou1TtDzqGTBQ]%0A%0A-- index [[index_maxqdctrxqdschj/28tuxv3hRledgEQW4ZHh2Q]]%0A----shard_id [index_maxqdctrxqdschj][0]%0A--------[index_maxqdctrxqdschj][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=KDhRhdqvRwiTAUa22JQ-Ug, rId=ptOYnFBMQUmR9Iyb5lTG5A]%0A%0A-- index [[index_gbewannoceabdvc/yG0M0NMWQSi0BGs6PhWznw]]%0A----shard_id [index_gbewannoceabdvc][0]%0A--------[index_gbewannoceabdvc][0], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=_v6vuNY1QkOci-zXR3cPvA, rId=_QF9riCdQmWQ6YmPBWXCUA]%0A--------[index_gbewannoceabdvc][0], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=NFujuMo-SWOoye-0VmFLGg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.827Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_mikrhefvmkjaogk/TveH0QKUT9mv9RUNvLLS4A]]%0A----shard_id [index_mikrhefvmkjaogk][0]%0A--------[index_mikrhefvmkjaogk][0], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=JDXW-lT2Q_6a_N6Tk3MHIw, rId=2bmjREezRQmG5iXDKGFocw]%0A--------[index_mikrhefvmkjaogk][0], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=x0DMzuQgSkm8kaxtSmtXqQ], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-16T17:35:29.837Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_mikrhefvmkjaogk][1]%0A--------[index_mikrhefvmkjaogk][1], node[node_cuRcKdrB], [P], s[STARTED], a[id=9OlCvSU2TUOmHQkDppqeBg]%0A--------[index_mikrhefvmkjaogk][1], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=6DOBJ7P7QFaFHB_acSD1JQ], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-16T17:35:29.837Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_ilbfpuzacwmxxbw/h_E8wDYEQY2cjLFoKVdWbg]]%0A----shard_id [index_ilbfpuzacwmxxbw][0]%0A--------[index_ilbfpuzacwmxxbw][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=XCqeuxCTQ56_cvRXD-Mg3Q, rId=9i3FUuOnRcS_D4O6bmiuBw]%0A--------[index_ilbfpuzacwmxxbw][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=9vsaQamtSXW-xMx-J8kqOg, rId=zxqFs7X0SRGOJAX7aFZgtA]%0A----shard_id [index_ilbfpuzacwmxxbw][1]%0A--------[index_ilbfpuzacwmxxbw][1], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=MOy2lEDhSR2_QRSEtj8QXg, rId=BAUJuTLzTpCSFgtRG6lPsQ]%0A--------[index_ilbfpuzacwmxxbw][1], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=0y-A8dW3Slivf9W29SxXMw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.703Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_fahvzcjuihngqak/bzhP-TKJTW-rmMVJQRC5ZA]]%0A----shard_id [index_fahvzcjuihngqak][0]%0A--------[index_fahvzcjuihngqak][0], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=WmW1pqBJRlSkVnOpDyTBEA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.661Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_fahvzcjuihngqak][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], s[RELOCATING], a[id=KFGjnwA9TuCuhhnjA5wBkw, rId=JBzAQYgeTu6Ot5wJeK6nsw]%0A%0A-- index [[index_vriursrsnmmqkbi/gre6wH_2T3CNds0Gyj8swg]]%0A----shard_id [index_vriursrsnmmqkbi][0]%0A--------[index_vriursrsnmmqkbi][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=cswgNthMQxamkK5UmvgtGg, rId=M4Cpye8iTfazR37FzdSsNg]%0A--------[index_vriursrsnmmqkbi][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=CYF0hVNdRdyJ6EU5843m2g, rId=qV9tXY9ZRG-WMgsXu8S3Yw]%0A%0Arouting_nodes:%0A-----node_id[node_cuRcKdrB][V]%0A--------[index_qtadfkpmwadqnhx][1], node[node_cuRcKdrB], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=R2yUYVUdQsaNQ_o-7bK4vA, rId=ahEGfHV_QaeXX2x6xHnv0A]%0A--------[index_qtadfkpmwadqnhx][2], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=d21nV3VVTq2MAYUvVw898A], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:35:29.781Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A--------[index_qtadfkpmwadqnhx][0], node[node_cuRcKdrB], [R], s[STARTED], a[id=hLaoTe7mSrmvARwgymVbSg]%0A--------[index_hpzsnelrdqieycs][1], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=_pgb-dr6Tyu64knrosnQoQ, rId=hqPCQf0VT0O_bJP_YhEevA]%0A--------[index_hpzsnelrdqieycs][2], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=UqNxty4zSUylmFCCtKmJwQ, rId=c6h_nNCFTKWa06HkcWH7Kw]%0A--------[index_hpzsnelrdqieycs][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=L45L-WbNR7C-YarxyS1dhQ, rId=9vc15XdSQ5iomDEwznlINw]%0A--------[index_dyidsxxonxpzahf][0], node[node_cuRcKdrB], [P], s[STARTED], a[id=aLb2watCSZyG-sCQnsZqJQ]%0A--------[index_ocqywosliijejbg][1], node[node_cuRcKdrB], [R], s[STARTED"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "], a[id=_hr8bfPtThCfiyFtATRoTA]%0A--------[index_ocqywosliijejbg][2], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=W7U7vM0cQQ2dbv-oqNc0wg]%0A--------[index_ocqywosliijejbg][0], node[node_cuRcKdrB], [R], s[STARTED], a[id=8eQAZbpgRGen4GWIdvYfwQ]%0A--------[index_cssmovoahcewchu][1], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=Y503mFy-RNuF3S81VERN1g, rId=CdOPFcOWQgKFNudI7myh2A]%0A--------[index_enhbxlixwflzhso][0], node[node_cuRcKdrB], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=DZw0yBMBQZKj87hhljehRA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][2], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=uLfj48JZRd618XZ3HcuMcQ, rId=av_K3AIHT7uKvvcSWhBEJw]%0A--------[index_ledytqrircymqrr][0], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=DfmNXwD9RI6wK8WDLZml4Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_jnjclyyqdjyieyu][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=CtpdJIAgSzSwtQjvo6fRDQ, rId=alTRMinPR2WcHd9rPQS5LA]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=fEjuJKIJQ8GGpXGORuXrww, rId=btLSaWFOQlCPJJX8VTlOTg]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_cuRcKdrB], [P], s[STARTED], a[id=msPH3DmYSWW31P8fnigurA]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_cuRcKdrB], [R], s[STARTED], a[id=hi6eEqmcStqF2qoczYx2KQ]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=9hJida_NTt-F1ItJzklAsg, rId=d9ylqGAiQCu3Ayevl1BJaw]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=0Cu09z28QYaUVXkdMMovnQ, rId=Leek5KTAQC6gs-EiH-yd8Q]%0A--------[index_czukvhltsxqnzfw][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=5263-TAkTy280OjHFR98fA, rId=BiG29Jf_Q7OnPuHY2gDdeQ]%0A--------[index_uoggeoprhkxjdne][0], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=6wWEBc6-Tx-wgnoyaqYIVQ, rId=bFj8h5xQSnCs1T9YwHnijw]%0A--------[index_uyezzkoezxniijh][1], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=e-L0THwRRjmxR4A-yFJ6Pw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][0], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=fOz7aV1YRsCgonPR0dIr5A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_iznpzitkeesxbuo][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=XGQyF4ZhTNy-yFXCA1iSVw, rId=xSC1J2mnSXqVrPshkz8d1w]%0A--------[index_ljojmutznazxwvh][2], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=iP5QxjH6QhW34fk52SIQZw, rId=ug_JXmYhQPSbKNKsJE95BA]%0A--------[index_ljojmutznazxwvh][0], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=tSqB065RQzWDuCeHTTRbCw, rId=211NuW3VSJ6cNCL26U3kMg]%0A--------[index_irhhxctnvbckaoj][1], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=fmx_6vmjRhSYB9xo7zMH3A, rId=4JI08jdDQryaAtW3n2WqXw]%0A--------[index_irhhxctnvbckaoj][0], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=iZB4GecyR0-uoZTLroK1Pw, rId=xp4jt1izSL2xXO0B3kfaSQ]%0A--------[index_edyrqwtjzfgmted][0], node[node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=E4e4xSkoRs6QOsnn-mwS9w], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.859Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_zotfddietkemrfo][2], node[node_cuRcKdrB], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=COX0PhoASHSWu0tlHWqkTQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.947Z], delayed=false, allocation_status[deciders_throttled]]%0A--------[index_qngflwsdinlfnkp][0], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=r6bSF1heRIS1onMMJb4-Aw, rId=MV8W8mDgQmOP_QLRTo5QNw]%0A--------[index_mvbudnexqycumsg][2], node[node_cuRcKdrB], [R], s[STARTED], a[id=c7EZmTU4TBuZQIIozzMZNA]%0A--------[index_mvbudnexqycumsg][0], node[node_cuRcKdrB], [P], s[STARTED], a[id=dPV3AfoCT4GEMSS7SErDBw]%0A--------[index_aggbbnwfpxlszgz][1], node[node_cuRcKdrB], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=6OLMuUcCRnuju8eSXBF8TA, rId=MPHIw2h7Qya9PYozMGqcmQ]%0A--------[index_aggbbnwfpxlszgz][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=eOGJ3FNlT0WwCPxesHGUhw, rId=AotOPGjfTRuTofv588-HWA]%0A--------[index_bvmoyoveeciursl][1], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=BuouuWdYQKqjQt9_j3FVDw, rId=iRNI1vceSLalSqq79ZCC8g]%0A--------[index_oirhzjxobbauntl][0], node[node_cuRcKdrB], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=LfTby2x0Q768WgXi4P7vUg, rId=fUnD2A7nQgSELAONaIvM3Q]%0A--------[index_mikrhefvmkjaogk][1], node[node_cuRcKdrB], [P], s[STARTED], a[id=9OlCvSU2TUOmHQkDppqeBg]%0A--------[index_mikrhefvmkjaogk][0], node[node_cuRcKdrB], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=2bmjREezRQmG5iXDKGFocw, rId=JDXW-lT2Q_6a_N6Tk3MHIw]%0A--------[index_ilbfpuzacwmxxbw][1], node[node_cuRcKdrB], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=MOy2lEDhSR2_QRSEtj8QXg, rId=BAUJuTLzTpCSFgtRG6lPsQ]%0A--------[index_ilbfpuzacwmxxbw][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], s[RELOCATING], a[id=XCqeuxCTQ56_cvRXD-Mg3Q, rId=9i3FUuOnRcS_D4O6bmiuBw]%0A--------[index_vriursrsnmmqkbi][0], node[node_cuRcKdrB], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=qV9tXY9ZRG-WMgsXu8S3Yw, rId=CYF0hVNdRdyJ6EU5843m2g]%0A-----node_id[node_HUGrjBHU][V]%0A--------[index_qtadfkpmwadqnhx][1], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=40BAuVhOThGPQmq5PQoMjQ, rId=L6jF6PSSQHiLQyu1h0boDg]%0A--------[index_qtadfkpmwadqnhx][2], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=5-71xwN7RQOjKswCNnfmRw, rId=aDEztA1lSdaJc8VjFu-aog]%0A--------[index_qtadfkpmwadqnhx][0], node[node_HUGrjBHU], relocating [node_avLodosR], [R], s[RELOCATING], a[id=BKOuVYCYSbO6G3KP9g16oQ, rId=XD6X6_c7RJmt4VCtmeRuHw]%0A--------[index_hpzsnelrdqieycs][1], node[node_HUGrjBHU], [R], s[STARTED], a[id=YOJvyJ12QT2zBWn_xVrZRA]%0A--------[index_hpzsnelrdqieycs][2], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=u8QY-x0jSUaQ2AP8ceRBMQ], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.694Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_hpzsnelrdqieycs][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=TD02KgMWQdGWlUg5-eudRg, rId=0McWtiOSQ8GX-EAoG-SnVQ]%0A--------[index_ocqywosliijejbg][1], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=WOWaXuqdQkWmkOQjSxXzFQ, rId=WQRnnoroRDi56WVfpCIBMw]%0A--------[index_ocqywosliijejbg][0], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=SokD4g4ETPSDq6a3NYz0Mw, rId=8TzrVCqERi-wD_yTzOGERg]%0A--------[index_cssmovoahcewchu][1], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=CdOPFcOWQgKFNudI7myh2A, rId=Y503mFy-RNuF3S81VERN1g]%0A--------[index_cssmovoahcewchu][0], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=o2j_0LN7RcmNLwLOz2JYCA, rId=xRv_nM7MRyG2nKDtwsx1Ow]%0A--------[index_ledytqrircymqrr][1], node[node_HUGrjBHU], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=6vlN4TDSQXioZV6yc0DorQ], una"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "ssigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][2], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=36sGcu2IQTaTMU__-EMZlQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_jnjclyyqdjyieyu][1], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=bIH1v7EPQY2IiNvEXxfEQQ, rId=H_z55CWKRdOvwrgAn_rczA]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [R], s[RELOCATING], a[id=btLSaWFOQlCPJJX8VTlOTg, rId=fEjuJKIJQ8GGpXGORuXrww]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=neP7mFzBSreOEfKOa5Z91w, rId=LBwxdb2mQ-2nnq5nqX5cPw]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=JwMUGhuUTLaw3oJm8QDQPw, rId=xGr90r98TEO0z1ZxFDXGCw]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=d9ylqGAiQCu3Ayevl1BJaw, rId=9hJida_NTt-F1ItJzklAsg]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Bu1zZ5yVTB-Z7PIiEKMwHQ, rId=jVMDUfGbSUGDL7vYa_rZaw]%0A--------[index_uoggeoprhkxjdne][1], node[node_HUGrjBHU], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=gbiuRLrwQBeA1afAQfRx-Q, rId=dTjsVicFRK-pjXniYjVjYg]%0A--------[index_uoggeoprhkxjdne][0], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=bFj8h5xQSnCs1T9YwHnijw, rId=6wWEBc6-Tx-wgnoyaqYIVQ]%0A--------[index_uyezzkoezxniijh][1], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=SEgpuIW3Q96miiRA5R4tAQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=NCd8WK6JRp6IysfqqhbR1Q, rId=2eM8myTnScucjLMuem7aAg]%0A--------[index_bwtmqfkmvllvexv][0], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=jzixIrjzQgy8UlcIINSgUg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.854Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ljojmutznazxwvh][1], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=CYqtEIAPSIua-YLUm-msHQ, rId=vZWtc0J6QdmxC1T42H4s4w]%0A--------[index_irhhxctnvbckaoj][1], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=WXudBkErRAekJfDyD2RxqA, rId=JSyxVtv1THWqsoI6-Ab_IQ]%0A--------[index_irhhxctnvbckaoj][0], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=xp4jt1izSL2xXO0B3kfaSQ, rId=iZB4GecyR0-uoZTLroK1Pw]%0A--------[index_jtggjsksgbqmxhp][1], node[node_HUGrjBHU], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=Jcvh2RCHSD68n3YymKugkA, rId=agfuRP64Tu2nx8FQrzuu9Q]%0A--------[index_jtggjsksgbqmxhp][2], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=2ky8RnjER5uJEu0uxcO6FA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.822Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_jtggjsksgbqmxhp][0], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=QsifMtyPTpiZ0rgCh-JroA, rId=FPAqPGT0Q_aNt3PH3QMsWw]%0A--------[index_edyrqwtjzfgmted][1], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=eh7cfA3TTi6DcWerqRIkgQ], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.859Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_edyrqwtjzfgmted][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=GmB0wTOuTlOn7joZKqquIw, rId=Snp8rM94Rb-UW8aseABN0A]%0A--------[index_zotfddietkemrfo][0], node[node_HUGrjBHU], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=oKgj3zTDQResQw5ryb7ZJA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.947Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_qngflwsdinlfnkp][0], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=MV8W8mDgQmOP_QLRTo5QNw, rId=r6bSF1heRIS1onMMJb4-Aw]%0A--------[index_mvbudnexqycumsg][1], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=cN4xDKW1Qm2gxqmiarPepA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:35:29.955Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A--------[index_mvbudnexqycumsg][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=T-dDKFqdQXuBMmarO1RlLQ, rId=mANIh-uOQfGT5TGJlxUQWQ]%0A--------[index_maxqdctrxqdschj][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=ptOYnFBMQUmR9Iyb5lTG5A, rId=KDhRhdqvRwiTAUa22JQ-Ug]%0A--------[index_gbewannoceabdvc][0], node[node_HUGrjBHU], relocating [node_avLodosR], [P], s[RELOCATING], a[id=_v6vuNY1QkOci-zXR3cPvA, rId=_QF9riCdQmWQ6YmPBWXCUA]%0A--------[index_mikrhefvmkjaogk][0], node[node_HUGrjBHU], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=JDXW-lT2Q_6a_N6Tk3MHIw, rId=2bmjREezRQmG5iXDKGFocw]%0A--------[index_ilbfpuzacwmxxbw][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=9vsaQamtSXW-xMx-J8kqOg, rId=zxqFs7X0SRGOJAX7aFZgtA]%0A--------[index_fahvzcjuihngqak][0], node[node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=WmW1pqBJRlSkVnOpDyTBEA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.661Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_vriursrsnmmqkbi][0], node[node_HUGrjBHU], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=M4Cpye8iTfazR37FzdSsNg, rId=cswgNthMQxamkK5UmvgtGg]%0A-----node_id[node_SNtllQAo][V]%0A--------[index_qtadfkpmwadqnhx][1], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=L6jF6PSSQHiLQyu1h0boDg, rId=40BAuVhOThGPQmq5PQoMjQ]%0A--------[index_qtadfkpmwadqnhx][2], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=WD7UF4pvSquJruJ1rUrzmQ, rId=QZXU-RRFSu-6BEeHdOwpYQ]%0A--------[index_qtadfkpmwadqnhx][0], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=45OaxOFXRaSPBgBDqMWh5Q, rId=b2gQhFD8SSWSEzFUMHUBBQ]%0A--------[index_hpzsnelrdqieycs][1], node[node_SNtllQAo], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=-2xhA7JVT8uXGLHfHCJS2A, rId=whq8MglhQVOsr-UsIpHPBQ]%0A--------[index_hpzsnelrdqieycs][2], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=c6h_nNCFTKWa06HkcWH7Kw, rId=UqNxty4zSUylmFCCtKmJwQ]%0A--------[index_hpzsnelrdqieycs][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=0McWtiOSQ8GX-EAoG-SnVQ, rId=TD02KgMWQdGWlUg5-eudRg]%0A--------[index_ocqywosliijejbg][1], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=WQRnnoroRDi56WVfpCIBMw, rId=WOWaXuqdQkWmkOQjSxXzFQ]%0A--------[index_ocqywosliijejbg][2], node[node_SNtllQAo], [R], s[STARTED], a[id=bFmdDAEzRuaXbl_YmqHrEA]%0A--------[index_ocqywosliijejbg][0], node[node_SNtllQAo], relocating [node_avLodosR], [R], s[RELOCATING], a[id=BT2eT38hRFKTvHiuzL_gzw, rId=D_stL-QsSnmby2rocAJkaA]%0A--------[index_cssmovoahcewchu][2], node[node_SNtllQAo], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=dExkLRMNQAONJs2HtCjSyg, rId=NyFf1EWsRfq0rnyTB_eHjg]%0A--------[index_enhbxlixwflzhso][1], node[node_SNtllQAo], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=ezKuS7HKSbqaPrhO7d_y2Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[ind"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "ex_ledytqrircymqrr][2], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=av_K3AIHT7uKvvcSWhBEJw, rId=uLfj48JZRd618XZ3HcuMcQ]%0A--------[index_ledytqrircymqrr][0], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=5hpO-na1QuueP-qz4LBJQQ, rId=hciy7ZcURBGmCb6SdY6L0Q]%0A--------[index_jnjclyyqdjyieyu][2], node[node_SNtllQAo], [P], s[STARTED], a[id=zZAaX9rfSxS6cOXaerMKZw]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=H4yiwpLUSiiOV8PxmJHjjg, rId=Fry7neuQRsSFYIvIxD0vqQ]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_SNtllQAo], relocating [node_avLodosR], [R], s[RELOCATING], a[id=6yvzDg13TkSD1vhnx4LD_g, rId=FeQr5UeiSC2oU3YbvuJJSQ]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_SNtllQAo], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=fEBTO2aXRgWgLWReIrJVfA, rId=OsxgqfeLSjexqnAOXQPpMA]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_SNtllQAo], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=mxwD0ZADT9KpfZOWlSEyjA, rId=IBmtjjl4SCymJ-mGo_0bCw]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=jVMDUfGbSUGDL7vYa_rZaw, rId=Bu1zZ5yVTB-Z7PIiEKMwHQ]%0A--------[index_uyezzkoezxniijh][1], node[node_SNtllQAo], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=uDY0tHUeR3KUfvjVJw2bjA, rId=n4xQbSayT3eZCp4g5Cu9fg]%0A--------[index_uyezzkoezxniijh][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=2eM8myTnScucjLMuem7aAg, rId=NCd8WK6JRp6IysfqqhbR1Q]%0A--------[index_bwtmqfkmvllvexv][0], node[node_SNtllQAo], relocating [node_avLodosR], [P], s[RELOCATING], a[id=2ePj8PXOQnG1z5xAqGd_Kg, rId=u1DWrLIKRuOg2MhM17iSoQ]%0A--------[index_iznpzitkeesxbuo][0], node[node_SNtllQAo], [R], s[STARTED], a[id=CpO9U5L3SLqwttmYas2SMg]%0A--------[index_ljojmutznazxwvh][1], node[node_SNtllQAo], relocating [node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=gj8UGz3fQgmNSW33495TbQ, rId=ag9D6zipTEONnAukmfRRlw]%0A--------[index_ljojmutznazxwvh][2], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=ug_JXmYhQPSbKNKsJE95BA, rId=iP5QxjH6QhW34fk52SIQZw]%0A--------[index_ljojmutznazxwvh][0], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=211NuW3VSJ6cNCL26U3kMg, rId=tSqB065RQzWDuCeHTTRbCw]%0A--------[index_irhhxctnvbckaoj][1], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=4JI08jdDQryaAtW3n2WqXw, rId=fmx_6vmjRhSYB9xo7zMH3A]%0A--------[index_jtggjsksgbqmxhp][2], node[node_SNtllQAo], [P], s[STARTED], a[id=ykLosBnrRtGQXo6ekIQmRg]%0A--------[index_edyrqwtjzfgmted][1], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=_bdoGRPxTROhCtry87UphA], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.859Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_edyrqwtjzfgmted][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=Snp8rM94Rb-UW8aseABN0A, rId=GmB0wTOuTlOn7joZKqquIw]%0A--------[index_qngflwsdinlfnkp][0], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=9No63tpzRMujufgn8Ij4cQ, rId=H2m8oFKcRQeOCzAoy-cgtQ]%0A--------[index_mvbudnexqycumsg][1], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Dt1kLG8WQNCzxApy-_g0SQ], unassigned_info[[reason=PRIMARY_FAILED], at[2016-09-16T17:35:29.955Z], delayed=false, details[primary failed while replica initializing], allocation_status[no_attempt]]%0A--------[index_mvbudnexqycumsg][2], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=HkP8JLSpTiil4fXZ6d0l9A, rId=KPf1fF1mRR6qHzOjFDYEhA]%0A--------[index_mvbudnexqycumsg][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=mANIh-uOQfGT5TGJlxUQWQ, rId=T-dDKFqdQXuBMmarO1RlLQ]%0A--------[index_aggbbnwfpxlszgz][2], node[node_SNtllQAo], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=cTrzdgbkRji5pP1UCnJZKQ, rId=BM7ITqbPRoaEF3l25Vonyg]%0A--------[index_oirhzjxobbauntl][1], node[node_SNtllQAo], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=G4K9bXuVRLaazqk8yVWnOg, rId=9eqkuEbUS5Ou1TtDzqGTBQ]%0A--------[index_maxqdctrxqdschj][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=KDhRhdqvRwiTAUa22JQ-Ug, rId=ptOYnFBMQUmR9Iyb5lTG5A]%0A--------[index_gbewannoceabdvc][0], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=NFujuMo-SWOoye-0VmFLGg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.827Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_mikrhefvmkjaogk][0], node[node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=x0DMzuQgSkm8kaxtSmtXqQ], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-16T17:35:29.837Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ilbfpuzacwmxxbw][1], node[node_SNtllQAo], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=BAUJuTLzTpCSFgtRG6lPsQ, rId=MOy2lEDhSR2_QRSEtj8QXg]%0A--------[index_ilbfpuzacwmxxbw][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=zxqFs7X0SRGOJAX7aFZgtA, rId=9vsaQamtSXW-xMx-J8kqOg]%0A--------[index_vriursrsnmmqkbi][0], node[node_SNtllQAo], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=cswgNthMQxamkK5UmvgtGg, rId=M4Cpye8iTfazR37FzdSsNg]%0A-----node_id[node_avLodosR][V]%0A--------[index_qtadfkpmwadqnhx][1], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=ahEGfHV_QaeXX2x6xHnv0A, rId=R2yUYVUdQsaNQ_o-7bK4vA]%0A--------[index_qtadfkpmwadqnhx][2], node[node_avLodosR], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=aDEztA1lSdaJc8VjFu-aog, rId=5-71xwN7RQOjKswCNnfmRw]%0A--------[index_qtadfkpmwadqnhx][0], node[node_avLodosR], relocating [node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=XD6X6_c7RJmt4VCtmeRuHw, rId=BKOuVYCYSbO6G3KP9g16oQ]%0A--------[index_sfousadcbttivrj][0], node[node_avLodosR], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=U1OHkrpVT3OS7aychtcKlA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.924Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_hpzsnelrdqieycs][1], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=whq8MglhQVOsr-UsIpHPBQ, rId=-2xhA7JVT8uXGLHfHCJS2A]%0A--------[index_hpzsnelrdqieycs][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=9vc15XdSQ5iomDEwznlINw, rId=L45L-WbNR7C-YarxyS1dhQ]%0A--------[index_dyidsxxonxpzahf][0], node[node_avLodosR], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=BwNVmB6vTPiUBkE8Cp1Y9w, rId=cAEpxFc2QViPrDp7hMCE_g]%0A--------[index_ocqywosliijejbg][1], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=s9HCPHUPTISZFPgfIAQ0AA, rId=aJCgAeVQRduPmbeL3JbGIw]%0A--------[index_ocqywosliijejbg][2], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=HA0pHZ4wTPac91iyG8YlLQ, rId=YEs1UYCPRHCGfO5SnCkxLA]%0A--------[index_ocqywosliijejbg][0], node[node_avLodosR], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=D_stL-QsSnmby2rocAJkaA, rId=BT2eT38hRFKTvHiuzL_gzw]%0A--------[index_cssmovoahcewchu][2], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=NyFf1EWsRfq0rnyTB_eHjg, rId=dExkLRMNQAONJs2HtCjSyg]%0A--------[index_cssmovoahcewchu][0], node[node_avLodosR], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=xRv_nM7MRyG2nKDtwsx1Ow, rId=o2j_0LN7RcmNLwLOz2JYCA]%0A--------[index_ledytqrircymqrr][2], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=0urb7P64TE-nrlqgWhsqBQ], unassigned_info[[reason=INDEX"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][0], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=VxDolSGmRfyXVuzSYaiLKw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_avLodosR], [P], s[STARTED], a[id=vv8Z4WQrSPe6j-eRpM3Eyg]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_avLodosR], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=FeQr5UeiSC2oU3YbvuJJSQ, rId=6yvzDg13TkSD1vhnx4LD_g]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=OsxgqfeLSjexqnAOXQPpMA, rId=fEBTO2aXRgWgLWReIrJVfA]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=IBmtjjl4SCymJ-mGo_0bCw, rId=mxwD0ZADT9KpfZOWlSEyjA]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=Leek5KTAQC6gs-EiH-yd8Q, rId=0Cu09z28QYaUVXkdMMovnQ]%0A--------[index_uoggeoprhkxjdne][1], node[node_avLodosR], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=dTjsVicFRK-pjXniYjVjYg, rId=gbiuRLrwQBeA1afAQfRx-Q]%0A--------[index_uyezzkoezxniijh][1], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=n4xQbSayT3eZCp4g5Cu9fg, rId=uDY0tHUeR3KUfvjVJw2bjA]%0A--------[index_uyezzkoezxniijh][2], node[node_avLodosR], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=7F4ausK8R_iAZqcAad06TA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_bwtmqfkmvllvexv][0], node[node_avLodosR], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=u1DWrLIKRuOg2MhM17iSoQ, rId=2ePj8PXOQnG1z5xAqGd_Kg]%0A--------[index_iznpzitkeesxbuo][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=xSC1J2mnSXqVrPshkz8d1w, rId=XGQyF4ZhTNy-yFXCA1iSVw]%0A--------[index_ljojmutznazxwvh][1], node[node_avLodosR], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=ag9D6zipTEONnAukmfRRlw, rId=gj8UGz3fQgmNSW33495TbQ]%0A--------[index_ljojmutznazxwvh][2], node[node_avLodosR], relocating [node_bTcIWVPZ], [R], s[RELOCATING], a[id=Ts6D3YhyT3SL91Z69XSebQ, rId=p_YcNwNJRUa-QWhGX9cFfg]%0A--------[index_ljojmutznazxwvh][0], node[node_avLodosR], [R], s[STARTED], a[id=o1Ts87M1SXqEbknoY3_67A]%0A--------[index_jtggjsksgbqmxhp][1], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=FIymsLlVRqCoSmNHbeO3-w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.822Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_jtggjsksgbqmxhp][0], node[node_avLodosR], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=FPAqPGT0Q_aNt3PH3QMsWw, rId=QsifMtyPTpiZ0rgCh-JroA]%0A--------[index_edyrqwtjzfgmted][1], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=GmxKeNlUQ7W_X-WR3v6ARg, rId=E3hfOJq7QU2fhI1jOwdvRg]%0A--------[index_edyrqwtjzfgmted][0], node[node_avLodosR], relocating [node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=I-ZY4fA0SyOAchXiGO9gQg, rId=rAsk0wHoSzeLDMcL_yOfow]%0A--------[index_zotfddietkemrfo][1], node[node_avLodosR], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=eDXNrXv-T5G0IojBFeZKGA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.947Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_mvbudnexqycumsg][1], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], s[RELOCATING], a[id=pyC05niZQCOD0eapcdYe0g, rId=PXBuosqqTo6IkIQQrn5Txw]%0A--------[index_mvbudnexqycumsg][2], node[node_avLodosR], [P], s[STARTED], a[id=GpVPYmG4Sr6pbfYPlbaDBw]%0A--------[index_mvbudnexqycumsg][0], node[node_avLodosR], relocating [node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=7YKyV4RDT323FQ7AoPNaqQ, rId=iCH8n9ATRpG_0q_EDXmq_w]%0A--------[index_aggbbnwfpxlszgz][1], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=MPHIw2h7Qya9PYozMGqcmQ, rId=6OLMuUcCRnuju8eSXBF8TA]%0A--------[index_aggbbnwfpxlszgz][2], node[node_avLodosR], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=BM7ITqbPRoaEF3l25Vonyg, rId=cTrzdgbkRji5pP1UCnJZKQ]%0A--------[index_bvmoyoveeciursl][1], node[node_avLodosR], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=iRNI1vceSLalSqq79ZCC8g, rId=BuouuWdYQKqjQt9_j3FVDw]%0A--------[index_bvmoyoveeciursl][0], node[node_avLodosR], [P], s[STARTED], a[id=3GV3KFgfRyqp9mK8cg46rA]%0A--------[index_gbewannoceabdvc][0], node[node_avLodosR], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=_QF9riCdQmWQ6YmPBWXCUA, rId=_v6vuNY1QkOci-zXR3cPvA]%0A--------[index_ilbfpuzacwmxxbw][1], node[node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=0y-A8dW3Slivf9W29SxXMw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.703Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ilbfpuzacwmxxbw][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=9i3FUuOnRcS_D4O6bmiuBw, rId=XCqeuxCTQ56_cvRXD-Mg3Q]%0A--------[index_fahvzcjuihngqak][0], node[node_avLodosR], relocating [node_bTcIWVPZ], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=JBzAQYgeTu6Ot5wJeK6nsw, rId=KFGjnwA9TuCuhhnjA5wBkw]%0A--------[index_vriursrsnmmqkbi][0], node[node_avLodosR], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=CYF0hVNdRdyJ6EU5843m2g, rId=qV9tXY9ZRG-WMgsXu8S3Yw]%0A-----node_id[node_bTcIWVPZ][V]%0A--------[index_qtadfkpmwadqnhx][1], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=smqNrv2yQM6UDw-af2-4WQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-09-16T17:35:29.931Z], failed_attempts[1], delayed=false, details[fake shard failure, failure Exception[null]], allocation_status[no_attempt]]%0A--------[index_qtadfkpmwadqnhx][2], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=QZXU-RRFSu-6BEeHdOwpYQ, rId=WD7UF4pvSquJruJ1rUrzmQ]%0A--------[index_qtadfkpmwadqnhx][0], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=b2gQhFD8SSWSEzFUMHUBBQ, rId=45OaxOFXRaSPBgBDqMWh5Q]%0A--------[index_sfousadcbttivrj][1], node[node_bTcIWVPZ], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=IByl_U0YSuqBYEdQAV-MWw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.924Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_hpzsnelrdqieycs][1], node[node_bTcIWVPZ], relocating [node_cuRcKdrB], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=hqPCQf0VT0O_bJP_YhEevA, rId=_pgb-dr6Tyu64knrosnQoQ]%0A--------[index_hpzsnelrdqieycs][2], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=FCIojhpZSMCjjXHI_L7KnA], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-16T17:35:29.694Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_hpzsnelrdqieycs][0], node[node_bTcIWVPZ], [R], s[STARTED], a[id=JcsDULUSQuqZZAJ-QRbl2Q]%0A--------[index_dyidsxxonxpzahf][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=cAEpxFc2QViPrDp7hMCE_g, rId=BwNVmB6vTPiUBkE8Cp1Y9w]%0A--------[index_ocqywosliijejbg][1], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=aJCgAeVQRduPmbeL3JbGIw, rId=s9HCPHUPTISZFPgfIAQ0AA]%0A--------[index_ocqywosliijejbg][2], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], s[RELOCATING], a[id=YEs1UYCPRHCGfO5SnCkxLA, rId=HA0pHZ4wTPac91iyG8YlLQ]%0A--------[index_ocqywosliijejbg][0], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=8TzrVCqERi-wD_yTzOGERg, rId=SokD4g4ETPSDq6a3NYz0Mw]%0A--------[index_ledytqrircymqrr][0], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=hciy7ZcURBGmCb6SdY6L0Q, "
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "rId=5hpO-na1QuueP-qz4LBJQQ]%0A--------[index_jnjclyyqdjyieyu][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=H_z55CWKRdOvwrgAn_rczA, rId=bIH1v7EPQY2IiNvEXxfEQQ]%0A--------[index_jnjclyyqdjyieyu][0], node[node_bTcIWVPZ], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=alTRMinPR2WcHd9rPQS5LA, rId=CtpdJIAgSzSwtQjvo6fRDQ]%0A--------[index_swdhkuwnqpqvqhl][1], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Fry7neuQRsSFYIvIxD0vqQ, rId=H4yiwpLUSiiOV8PxmJHjjg]%0A--------[index_swdhkuwnqpqvqhl][0], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=LBwxdb2mQ-2nnq5nqX5cPw, rId=neP7mFzBSreOEfKOa5Z91w]%0A--------[index_mjpqsuhmdqdfxye][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=xGr90r98TEO0z1ZxFDXGCw, rId=JwMUGhuUTLaw3oJm8QDQPw]%0A--------[index_mjpqsuhmdqdfxye][2], node[node_bTcIWVPZ], [R], s[STARTED], a[id=jiBZu2wfRniHG2PJlcSOig]%0A--------[index_mjpqsuhmdqdfxye][0], node[node_bTcIWVPZ], [R], s[STARTED], a[id=zE9fyUnNTX2BV9GWIbKLkg]%0A--------[index_czukvhltsxqnzfw][0], node[node_bTcIWVPZ], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=BiG29Jf_Q7OnPuHY2gDdeQ, rId=5263-TAkTy280OjHFR98fA]%0A--------[index_uyezzkoezxniijh][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=VrAfGJ9tSdCbv4gu9_XU4A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_bwtmqfkmvllvexv][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=Tbe3G5T1SiS9LVQHAVNkHQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.854Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_iznpzitkeesxbuo][0], node[node_bTcIWVPZ], [R], s[STARTED], a[id=DDU73_YtTPu3DYFtH5zpTg]%0A--------[index_ljojmutznazxwvh][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], s[RELOCATING], a[id=vZWtc0J6QdmxC1T42H4s4w, rId=CYqtEIAPSIua-YLUm-msHQ]%0A--------[index_ljojmutznazxwvh][2], node[node_bTcIWVPZ], relocating [node_avLodosR], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=p_YcNwNJRUa-QWhGX9cFfg, rId=Ts6D3YhyT3SL91Z69XSebQ]%0A--------[index_irhhxctnvbckaoj][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [R], s[RELOCATING], a[id=JSyxVtv1THWqsoI6-Ab_IQ, rId=WXudBkErRAekJfDyD2RxqA]%0A--------[index_irhhxctnvbckaoj][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=eRl0hNQZTUCaFi5KtKUm9A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.496Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_jtggjsksgbqmxhp][1], node[node_bTcIWVPZ], relocating [node_HUGrjBHU], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=agfuRP64Tu2nx8FQrzuu9Q, rId=Jcvh2RCHSD68n3YymKugkA]%0A--------[index_jtggjsksgbqmxhp][0], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=byK2ha3MTrO24uIf7F8PiQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.822Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_edyrqwtjzfgmted][1], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], s[RELOCATING], a[id=E3hfOJq7QU2fhI1jOwdvRg, rId=GmxKeNlUQ7W_X-WR3v6ARg]%0A--------[index_edyrqwtjzfgmted][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [R], s[RELOCATING], a[id=rAsk0wHoSzeLDMcL_yOfow, rId=I-ZY4fA0SyOAchXiGO9gQg]%0A--------[index_vvwcbqrgtrhakti][0], node[node_bTcIWVPZ], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=LMtDKCOpR5GvJ4eV5IOboA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.944Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_qngflwsdinlfnkp][0], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [P], s[RELOCATING], a[id=H2m8oFKcRQeOCzAoy-cgtQ, rId=9No63tpzRMujufgn8Ij4cQ]%0A--------[index_mvbudnexqycumsg][1], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=PXBuosqqTo6IkIQQrn5Txw, rId=pyC05niZQCOD0eapcdYe0g]%0A--------[index_mvbudnexqycumsg][2], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [R], s[RELOCATING], a[id=KPf1fF1mRR6qHzOjFDYEhA, rId=HkP8JLSpTiil4fXZ6d0l9A]%0A--------[index_mvbudnexqycumsg][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [R], s[RELOCATING], a[id=iCH8n9ATRpG_0q_EDXmq_w, rId=7YKyV4RDT323FQ7AoPNaqQ]%0A--------[index_aggbbnwfpxlszgz][0], node[node_bTcIWVPZ], relocating [node_cuRcKdrB], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=AotOPGjfTRuTofv588-HWA, rId=eOGJ3FNlT0WwCPxesHGUhw]%0A--------[index_oirhzjxobbauntl][1], node[node_bTcIWVPZ], relocating [node_SNtllQAo], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=9eqkuEbUS5Ou1TtDzqGTBQ, rId=G4K9bXuVRLaazqk8yVWnOg]%0A--------[index_oirhzjxobbauntl][0], node[node_bTcIWVPZ], relocating [node_cuRcKdrB], [P], s[RELOCATING], a[id=fUnD2A7nQgSELAONaIvM3Q, rId=LfTby2x0Q768WgXi4P7vUg]%0A--------[index_mikrhefvmkjaogk][1], node[node_bTcIWVPZ], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=6DOBJ7P7QFaFHB_acSD1JQ], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-16T17:35:29.837Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_fahvzcjuihngqak][0], node[node_bTcIWVPZ], relocating [node_avLodosR], [P], s[RELOCATING], a[id=KFGjnwA9TuCuhhnjA5wBkw, rId=JBzAQYgeTu6Ot5wJeK6nsw]%0A---- unassigned%0A--------[index_enhbxlixwflzhso][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_enhbxlixwflzhso][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_enhbxlixwflzhso][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_enhbxlixwflzhso][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.926Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ledytqrircymqrr][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.851Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_uyezzkoezxniijh][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:35:29.815Z], delayed=false, allocation_status[no_attempt]]%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
  "startTimestamp": 1474047328746,
  "executionTime": 1284
 }
]

[
 "TEST_STARTED",
 "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
  "startTimestamp": 1474047330031,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
  "startTimestamp": 1474047328710,
  "executionTime": 1345
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "displayName": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "children": [
    {
     "id": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailAfterIntermediateCommit",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSingleShardSuccess",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailWhenCommitIsMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsOnIndexClosedOrMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testModificationPreventsFlushing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsIfOperationIsInFlight",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047330155
 }
]

[
 "TEST_STARTED",
 "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,195][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,219][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,219][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,222][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,225][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,225][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,333][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,334][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,334][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[151]}, bound_addresses {local[151]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,336][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{FCqHa-VLTK2mZs55zwdhtg}{RNBxTOvlSr-uzNiEPHzZDg}{local}{local[151]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,336][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,359][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,375][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,434][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,450][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/o-7sXDG7S-2wseFmkOpJNA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,833][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailAfterIntermediateCommit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474047330187,
  "executionTime": 696
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,890][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:30,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/iXM65lFjRpWfUFro70ZPXg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,278][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSingleShardSuccess]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474047330883,
  "executionTime": 429
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,319][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,375][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,389][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/x57D03AVQ1q5X9VQUJx1VQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,533][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailWhenCommitIsMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474047331312,
  "executionTime": 268
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,586][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,630][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,643][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/z6cZwGkUQqmmxWX5gYvN6g]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,662][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsOnIndexClosedOrMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474047331580,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,736][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:31,802][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/QlySSFkPTdGBsLIWHw9HBw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,135][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testModificationPreventsFlushing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474047331723,
  "executionTime": 455
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,189][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,304][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,328][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/fUIseW06RS-fMGnJnTcMQw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,671][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsIfOperationIsInFlight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474047332178,
  "executionTime": 543
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,722][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,722][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,722][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:32,724][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
  "startTimestamp": 1474047330155,
  "executionTime": 2580
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "displayName": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "children": [
    {
     "id": "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testBreakerSettingsValidationNegativeOverhead",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    },
    {
     "id": "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testRegisterCustomBreaker",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    },
    {
     "id": "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testBreakerSettingsValidationWithValidSettings",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047332927
 }
]

[
 "TEST_STARTED",
 "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1474047332957,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1474047332959,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1474047332962,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
  "startTimestamp": 1474047332927,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "children": [
    {
     "id": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleExceptinoOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleCorruptedIndexOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testWaitForClusterStateOnPrimaryRelocation",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047333340
 }
]

[
 "TEST_STARTED",
 "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474047333498,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:34,006][INFO ][test                     ] Corrupting file --  flipping at position 377 from ffffff93 to ffffff94 file: _0.fdt%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:34,054][INFO ][test                     ] Checksum before: [183471358] after: [3606010264] checksum value after corruption: 183471358] file: _0.fdt length: 430%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:34,122][WARN ][org.elasticsearch.indices.recovery]  [index][1] 1 Corrupted file detected name [_0.fdt], length [430], checksum [318fem], writtenBy [6.2.0] checksum mismatch%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474047333728,
  "executionTime": 394
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474047334122,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474047334141,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474047334145,
  "executionTime": 849
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
  "startTimestamp": 1474047333340,
  "executionTime": 1690
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "children": [
    {
     "id": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "displayName": "testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "methodName": "testRenameTempFiles",
     "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047335155
 }
]

[
 "TEST_STARTED",
 "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,197][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,257][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,257][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,261][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,263][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,263][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,476][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,476][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,477][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[152]}, bound_addresses {local[152]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,479][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{aC8cY07eQ-mKb_KQR4p0Og}{42P0pRXdS5-dRsKn9Jadgw}{local}{local[152]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,480][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,495][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,516][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,634][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,691][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] [RecoveryStatusTests#testRenameTempFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
  "startTimestamp": 1474047335185,
  "executionTime": 552
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,737][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,743][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,743][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:35,744][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
  "startTimestamp": 1474047335155,
  "executionTime": 600
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoveryTargetTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
   "children": [
    {
     "id": "ID#testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testTranslog",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testStart",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testTimers",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testConcurrentModificationIndexFileDetailsMap",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testFileHashCodeAndEquals",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testStageSequenceEnforcement",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    },
    {
     "id": "ID#testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "displayName": "testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
     "methodName": "testIndex",
     "className": "org.elasticsearch.indices.recovery.RecoveryTargetTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047336077
 }
]

[
 "TEST_STARTED",
 "ID#testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslog(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336155,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStart(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336165,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimers(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336167,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentModificationIndexFileDetailsMap(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336171,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileHashCodeAndEquals(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336276,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStageSequenceEnforcement(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336278,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:36,284][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] testing initial information%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:36,287][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] performing partial recovery ([3] bytes of [97])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:36,288][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] testing serialized information%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:35:36,317][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] testing post recovery%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndex(org.elasticsearch.indices.recovery.RecoveryTargetTests)",
  "startTimestamp": 1474047336282,
  "executionTime": 35
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoveryTargetTests",
  "startTimestamp": 1474047336077,
  "executionTime": 248
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "displayName": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047336495
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
  "startTimestamp": 1474047336533,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
  "startTimestamp": 1474047336495,
  "executionTime": 43
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "displayName": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testDeprecatedParamException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequest",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithCustomFilters",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047336933
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474047336969,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474047336976,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474047336978,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474047336981,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474047336982,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474047336985,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
  "startTimestamp": 1474047336933,
  "executionTime": 57
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "children": [
    {
     "id": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "displayName": "testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "methodName": "testRestRecoveryAction",
     "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047337206
 }
]

[
 "TEST_STARTED",
 "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
  "startTimestamp": 1474047337236,
  "executionTime": 243
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
  "startTimestamp": 1474047337206,
  "executionTime": 275
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextTests",
   "displayName": "org.elasticsearch.script.ScriptContextTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextTests",
   "children": [
    {
     "id": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownCustomScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownPluginScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomGlobalScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047337746
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474047337761,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474047337767,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474047337776,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474047337781,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextTests",
  "startTimestamp": 1474047337746,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptSettingsTests",
   "displayName": "org.elasticsearch.script.ScriptSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptSettingsTests",
   "children": [
    {
     "id": "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testInvalidDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testDefaultLanguageIsPainless",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testSettingsAreProperlyPropogated",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testCustomDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047338010
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474047338030,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474047338034,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474047338035,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474047338038,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptSettingsTests",
  "startTimestamp": 1474047338010,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptTests",
   "displayName": "org.elasticsearch.script.ScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptTests",
   "children": [
    {
     "id": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptSerialization",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    },
    {
     "id": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptParsing",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047338285
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1474047338326,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1474047338328,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptTests",
  "startTimestamp": 1474047338285,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchRequestTests",
   "displayName": "org.elasticsearch.search.SearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchRequestTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047338552
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474047338589,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474047338645,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474047338667,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchRequestTests",
  "startTimestamp": 1474047338552,
  "executionTime": 121
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "children": [
    {
     "id": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "displayName": "testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "methodName": "testNeedsScores",
     "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047338812
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:38,840][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:38,872][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:38,873][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:38,876][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:38,879][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:38,879][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,046][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,047][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,047][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[153]}, bound_addresses {local[153]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,056][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{y4cafnL7RtGufLcj1f4HvA}{adClTaCuSlidVVrt7UA_vw}{local}{local[153]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,056][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,069][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,087][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,156][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,171][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx/XglwpSACQy2sBA8U564Hfg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,445][INFO ][org.elasticsearch.search.aggregations] [AggregationCollectorTests#testNeedsScores]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
  "startTimestamp": 1474047338830,
  "executionTime": 653
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,483][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,484][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,484][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:39,486][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
  "startTimestamp": 1474047338812,
  "executionTime": 679
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047339629
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:35:39,658][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{LAobg9CeTm2Vyc89IpG_Zg}{local}{local[844]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474047339671,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474047339701,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474047339704,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
  "startTimestamp": 1474047339629,
  "executionTime": 81
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.HistogramTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testInvalidBounds",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.HistogramTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047340214
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:40,283][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hAHBoOPpQ6u16fPhCGW8iA}{local}{local[845]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474047340292,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474047340297,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBounds(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474047340301,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.HistogramTests)",
  "startTimestamp": 1474047340306,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.HistogramTests",
  "startTimestamp": 1474047340214,
  "executionTime": 97
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047340769
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:40,817][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GTvIHUQ3Q_ioN6EE7QPbGg}{local}{local[846]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474047340826,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474047340832,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474047340835,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
  "startTimestamp": 1474047340769,
  "executionTime": 74
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341135
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:35:41,221][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sWd5AWGxSAqmTRt4aUogTA}{local}{local[847]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474047341229,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474047341235,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474047341237,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
  "startTimestamp": 1474047341135,
  "executionTime": 123
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "children": [
    {
     "id": "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnNonIntPrecision",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnBooleanPrecision",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseValidFromStrings",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseValidFromInts",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnPrecisionOutOfRange",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341411
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474047341449,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474047341454,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474047341456,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474047341458,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1474047341460,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
  "startTimestamp": 1474047341411,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "children": [
    {
     "id": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testParseAndValidate",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testTransportRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341703
 }
]

[
 "TEST_STARTED",
 "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474047341735,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474047341897,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474047341900,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
  "startTimestamp": 1474047341703,
  "executionTime": 201
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "children": [
    {
     "id": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "displayName": "testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "methodName": "testResetRootDocId",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047341994
 }
]

[
 "TEST_STARTED",
 "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,044][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,071][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,071][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,074][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1412], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,077][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,077][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,199][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,200][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,200][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[154]}, bound_addresses {local[154]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,230][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{NWFD53gBTBeAH_mC-uziFg}{thAyoW9ZTqW2iI_f5d8aug}{local}{local[154]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,231][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,291][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,527][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,675][INFO ][org.elasticsearch.search.aggregations.bucket.nested] [NestedAggregatorTests#testResetRootDocId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
  "startTimestamp": 1474047342012,
  "executionTime": 704
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,716][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,720][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,720][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:42,722][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
  "startTimestamp": 1474047341994,
  "executionTime": 941
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047343049
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:43,067][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DPQXA1WrRbK-KvoV19TyYQ}{local}{local[848]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
  "startTimestamp": 1474047343075,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
  "startTimestamp": 1474047343077,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.NestedTests)",
  "startTimestamp": 1474047343079,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedTests",
  "startTimestamp": 1474047343049,
  "executionTime": 35
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047343308
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:43,326][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ACNhFCakR8OMZsQt-u9NoA}{local}{local[849]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474047343349,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474047343351,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474047343353,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
  "startTimestamp": 1474047343308,
  "executionTime": 53
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047343566
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474047343577,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474047343578,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474047343579,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474047343580,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
  "startTimestamp": 1474047343566,
  "executionTime": 16
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047343844
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:43,862][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ejbO1kWTSVSoSYMLsb2EaA}{local}{local[850]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
  "startTimestamp": 1474047343888,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
  "startTimestamp": 1474047343891,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:43,894][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"bucket_script\" : {%0A      \"buckets_path\" : {%0A        \"p\" : \"BcjsoubUAQw\",%0A        \"eOLA\" : \"AfLmzBzssNvrrnhAAkfwmJUIvKZe\",%0A        \"pgZjo\" : \"NTuiIuXiqFuIGeNONhppCdW\",%0A        \"yXB\" : \"OhQfQeYdzuflXGQcEeufkjRFnUwnbo\",%0A        \"l\" : \"G\",%0A        \"hSXuAHCzIAUpBNoT\" : \"PJPS\",%0A        \"UcbmtKJehhMarImr\" : \"HfWdnHDwUDMlgIeMgUAdhdVNfwMziDLYGsR\",%0A        \"LqpOvVIseuzrkdZXBonJ\" : \"FjjeLJgIpBJwhRpEpOQEVGVMVV\"%0A      },%0A      \"script\" : {%0A        \"inline\" : \"script\"%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:43,895][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"bucket_script\" : {%0A      \"buckets_path\" : {%0A        \"p\" : \"BcjsoubUAQw\",%0A        \"eOLA\" : \"AfLmzBzssNvrrnhAAkfwmJUIvKZe\",%0A        \"pgZjo\" : \"NTuiIuXiqFuIGeNONhppCdW\",%0A        \"yXB\" : \"OhQfQeYdzuflXGQcEeufkjRFnUwnbo\",%0A        \"l\" : \"G\",%0A        \"hSXuAHCzIAUpBNoT\" : \"PJPS\",%0A        \"UcbmtKJehhMarImr\" : \"HfWdnHDwUDMlgIeMgUAdhdVNfwMziDLYGsR\",%0A        \"LqpOvVIseuzrkdZXBonJ\" : \"FjjeLJgIpBJwhRpEpOQEVGVMVV\"%0A      },%0A      \"script\" : {%0A        \"inline\" : \"script\"%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketScriptTests)",
  "startTimestamp": 1474047343893,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.BucketScriptTests",
  "startTimestamp": 1474047343844,
  "executionTime": 92
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047344148
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:44,168][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{C4ppPHVaRl2b8fZr4di4Kw}{local}{local[851]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474047344182,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474047344185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:44,189][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"p\" : \"BcjsoubUAQw\",%0A        \"eOLA\" : \"AfLmzBzssNvrrnhAAkfwmJUIvKZe\",%0A        \"pgZjo\" : \"NTuiIuXiqFuIGeNONhppCdW\",%0A        \"yXB\" : \"OhQfQeYdzuflXGQcEeufkjRFnUwnbo\",%0A        \"l\" : \"G\",%0A        \"hSXuAHCzIAUpBNoT\" : \"PJPS\",%0A        \"UcbmtKJehhMarImr\" : \"HfWdnHDwUDMlgIeMgUAdhdVNfwMziDLYGsR\",%0A        \"LqpOvVIseuzrkdZXBonJ\" : \"FjjeLJgIpBJwhRpEpOQEVGVMVV\"%0A      },%0A      \"script\" : {%0A        \"inline\" : \"script\"%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:44,191][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"p\" : \"BcjsoubUAQw\",%0A        \"eOLA\" : \"AfLmzBzssNvrrnhAAkfwmJUIvKZe\",%0A        \"pgZjo\" : \"NTuiIuXiqFuIGeNONhppCdW\",%0A        \"yXB\" : \"OhQfQeYdzuflXGQcEeufkjRFnUwnbo\",%0A        \"l\" : \"G\",%0A        \"hSXuAHCzIAUpBNoT\" : \"PJPS\",%0A        \"UcbmtKJehhMarImr\" : \"HfWdnHDwUDMlgIeMgUAdhdVNfwMziDLYGsR\",%0A        \"LqpOvVIseuzrkdZXBonJ\" : \"FjjeLJgIpBJwhRpEpOQEVGVMVV\"%0A      },%0A      \"script\" : {%0A        \"inline\" : \"script\"%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474047344187,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
  "startTimestamp": 1474047344148,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047344456
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:44,488][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uwEa-4ipTaGmn_rX8gxaTA}{local}{local[852]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474047344503,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474047344506,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:44,510][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"lag\" : 70%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:44,510][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"lag\" : 70%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474047344508,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
  "startTimestamp": 1474047344456,
  "executionTime": 60
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047344728
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:44,743][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XNrHt1FNRiuaWO-jhUKsGA}{local}{local[853]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
  "startTimestamp": 1474047344752,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
  "startTimestamp": 1474047344754,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:44,758][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"avg_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:44,758][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"avg_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests)",
  "startTimestamp": 1474047344756,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.AvgBucketTests",
  "startTimestamp": 1474047344728,
  "executionTime": 34
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSigmaFromInt",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047345022
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:45,048][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ee8iXwlISmahqQsEcYUGgA}{local}{local[854]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474047345069,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:45,074][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"format\" : \"oTlPJPSi\",%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"sigma\" : 2.0%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:35:45,074][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"format\" : \"oTlPJPSi\",%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"sigma\" : 2.0%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474047345071,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474047345075,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474047345077,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
  "startTimestamp": 1474047345022,
  "executionTime": 61
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
   "displayName": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "children": [
    {
     "id": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testApproximations",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testUseIndexStats",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testNoScoring",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testCollector",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047345448
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474047345477,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474047345500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474047345502,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474047345504,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474047345506,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
  "startTimestamp": 1474047345448,
  "executionTime": 66
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.query.QueryPhaseTests",
   "displayName": "org.elasticsearch.search.query.QueryPhaseTests",
   "methodName": null,
   "className": "org.elasticsearch.search.query.QueryPhaseTests",
   "children": [
    {
     "id": "ID#testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testMinScoreDisablesCountOptimization",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    },
    {
     "id": "ID#testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testCountWithoutDeletions",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    },
    {
     "id": "ID#testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testPostFilterDisablesCountOptimization",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    },
    {
     "id": "ID#testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "displayName": "testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
     "methodName": "testCountWithDeletions",
     "className": "org.elasticsearch.search.query.QueryPhaseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047345886
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474047345900,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountWithoutDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474047345909,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPostFilterDisablesCountOptimization(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474047345928,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountWithDeletions(org.elasticsearch.search.query.QueryPhaseTests)",
  "startTimestamp": 1474047345932,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.query.QueryPhaseTests",
  "startTimestamp": 1474047345886,
  "executionTime": 57
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testBuildRescoreSearchContext",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testRescoreQueryNull",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testUnknownFieldsExpection",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047346193
 }
]

[
 "TEST_STARTED",
 "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474047346224,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474047346253,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474047346255,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474047346259,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474047346261,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474047346268,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1474047346193,
  "executionTime": 79
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "children": [
    {
     "id": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenStringFieldButResetting",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsBuildWhenInvalidGeoHashString",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testIgnoreMalformedIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInJSON",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortParserManyPointsNoException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testCoerceIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortDeprecatedSortModeException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortCanBeParsedFromGeoHash",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInSetter",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenNonStringField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047346462
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346488,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346493,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346499,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346502,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346505,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346510,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346512,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346515,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346522,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346525,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346527,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346564,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346566,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474047346568,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
  "startTimestamp": 1474047346462,
  "executionTime": 120
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "children": [
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testIllegalOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testParseOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047346815
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346835,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346843,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346854,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346856,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346860,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346863,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474047346865,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
  "startTimestamp": 1474047346815,
  "executionTime": 59
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "children": [
    {
     "id": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson_simple",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptions",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeIllegalArgument",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortType",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeNull",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptionsOnStartObject",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseUnexpectedToken",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBadSortMode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047347074
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347097,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347101,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347115,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347117,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347120,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347124,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347126,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347128,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347131,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347136,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347143,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474047347145,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
  "startTimestamp": 1474047347074,
  "executionTime": 76
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.SortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortBuilderTests",
   "children": [
    {
     "id": "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testMultiFieldSort",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testSingleFieldSort",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testRandomSortBuilders",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047347338
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1474047347353,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1474047347356,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1474047347358,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortBuilderTests",
  "startTimestamp": 1474047347338,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortModeTests",
   "displayName": "org.elasticsearch.search.sort.SortModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortModeTests",
   "children": [
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.search.sort.SortModeTests",
     "children": []
    },
    {
     "id": "ID#testSortMode(org.elasticsearch.search.sort.SortModeTests)",
     "displayName": "testSortMode(org.elasticsearch.search.sort.SortModeTests)",
     "methodName": "testSortMode",
     "className": "org.elasticsearch.search.sort.SortModeTests",
     "children": []
    },
    {
     "id": "ID#testParseNull(org.elasticsearch.search.sort.SortModeTests)",
     "displayName": "testParseNull(org.elasticsearch.search.sort.SortModeTests)",
     "methodName": "testParseNull",
     "className": "org.elasticsearch.search.sort.SortModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047347599
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.search.sort.SortModeTests)",
  "startTimestamp": 1474047347614,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortMode(org.elasticsearch.search.sort.SortModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMode(org.elasticsearch.search.sort.SortModeTests)",
  "startTimestamp": 1474047347616,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNull(org.elasticsearch.search.sort.SortModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNull(org.elasticsearch.search.sort.SortModeTests)",
  "startTimestamp": 1474047347618,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortModeTests",
  "startTimestamp": 1474047347599,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortOrderTests",
   "displayName": "org.elasticsearch.search.sort.SortOrderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortOrderTests",
   "children": [
    {
     "id": "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testDistanceUnitNames",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    },
    {
     "id": "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testReadWrite",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testFromString(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047347862
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1474047347875,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1474047347878,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1474047347879,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortOrderTests",
  "startTimestamp": 1474047347862,
  "executionTime": 21
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "children": [
    {
     "id": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testRestoreSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    },
    {
     "id": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testCreateSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047348141
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1474047348158,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1474047348161,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
  "startTimestamp": 1474047348141,
  "executionTime": 25
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotTests",
   "children": [
    {
     "id": "ID#testSnapshotEquals(org.elasticsearch.snapshots.SnapshotTests)",
     "displayName": "testSnapshotEquals(org.elasticsearch.snapshots.SnapshotTests)",
     "methodName": "testSnapshotEquals",
     "className": "org.elasticsearch.snapshots.SnapshotTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.snapshots.SnapshotTests)",
     "displayName": "testSerialization(org.elasticsearch.snapshots.SnapshotTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.snapshots.SnapshotTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047348401
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotEquals(org.elasticsearch.snapshots.SnapshotTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotEquals(org.elasticsearch.snapshots.SnapshotTests)",
  "startTimestamp": 1474047348415,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.snapshots.SnapshotTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.snapshots.SnapshotTests)",
  "startTimestamp": 1474047348417,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotTests",
  "startTimestamp": 1474047348401,
  "executionTime": 20
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047348677
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1474047348694,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1474047348677,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "children": [
    {
     "id": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "displayName": "testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "methodName": "testRejectedExecutionCounter",
     "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047349154
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
  "startTimestamp": 1474047349170,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
  "startTimestamp": 1474047349154,
  "executionTime": 25
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ScalingThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
   "children": [
    {
     "id": "ID#testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "displayName": "testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "methodName": "testScalingThreadPoolConfiguration",
     "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "displayName": "testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "methodName": "testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive",
     "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "displayName": "testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
     "methodName": "testScalingThreadPoolIsBounded",
     "className": "org.elasticsearch.threadpool.ScalingThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047349443
 }
]

[
 "TEST_STARTED",
 "ID#testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingThreadPoolConfiguration(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
  "startTimestamp": 1474047349458,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingThreadPoolThreadsAreTerminatedAfterKeepAlive(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
  "startTimestamp": 1474047349470,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingThreadPoolIsBounded(org.elasticsearch.threadpool.ScalingThreadPoolTests)",
  "startTimestamp": 1474047349588,
  "executionTime": 157
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 16, 2016 7:35:49 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 134 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ScalingThreadPoolTests",
  "startTimestamp": 1474047349443,
  "executionTime": 630
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "displayName": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "children": [
    {
     "id": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testThatRunnableIsRescheduled",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testOnRejectionCausesCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testRunnableRunsAtMostOnceAfterCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnNonSchedulerThreadAllowed",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnSchedulerThreadFails",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testDoesNotRescheduleUntilExecutionFinished",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testCancellingRunnable",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047350599
 }
]

[
 "TEST_STARTED",
 "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,631][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,660][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,679][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,691][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,702][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,713][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:50,725][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$2196/661232179@2b7e8356] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350616,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350730,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350741,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350818,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350844,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350861,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474047350873,
  "executionTime": 76
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
  "startTimestamp": 1474047350599,
  "executionTime": 358
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

